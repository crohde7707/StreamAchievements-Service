!function(e){var n={};function t(i){if(n[i])return n[i].exports;var a=n[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(i,a,function(n){return e[n]}.bind(null,a));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=17)}([function(e,n){e.exports=require("mongoose")},function(e,n,t){const i=t(0),a=new(0,i.Schema)({name:String,twitchID:String,logo:String,email:String,type:String,broadcaster_type:String,channels:[{channelID:String,achievements:[{aid:Number,earned:Date}],sync:Boolean,banned:Boolean}],favorites:Array,delegate:Array,integration:{twitch:Object,patreon:Object,streamlabs:Object},preferences:{autojoin:Boolean},lastLogin:Date,new:Boolean}),o=i.model("user",a);e.exports=o},function(e,n,t){const i=t(0),a=new(0,i.Schema)({owner:String,twitchID:String,theme:String,logo:String,members:Array,moderators:[{uid:String,permissions:{channel:Boolean,chat:Boolean}}],icons:{default:String,hidden:String},oid:String,overlay:{chat:Boolean,chatMessage:String,sfx:String,enterEffect:String,exitEffect:String,duration:Number,volume:Number,delay:Number},gold:Boolean,nextUID:Number,broadcaster_type:{twitch:String,mixer:String,youtube:String}}),o=i.model("channel",a);e.exports=o},function(e,n){e.exports=require("express")},function(e,n){e.exports=require("cryptr")},function(e,n){e.exports=require("passport")},function(e,n,t){const i=t(0),a=new(0,i.Schema)({user:String,logo:String,message:String,date:Date,type:String,channel:String,status:String}),o=i.model("notice",a);e.exports=o},function(e,n,t){const i=t(0),a=new(0,i.Schema)({userID:String,channelID:String,achievementID:Number,earned:Date,first:Boolean}),o=i.model("earned",a);e.exports=o},function(e,n){let t=(e,n,t)=>{let i=e.app.get("ws"),a=e.app.get("IRCSOCKET");i.to(a).emit(n,t)};e.exports={emitNewChannel:(e,n)=>{t(e,"new-channel",n)},emitChannelUpdate:(e,n)=>{t(e,"channel-update",n)},emitNewListener:(e,n)=>{t(e,"new-listener",n)},emitUpdateListener:(e,n)=>{t(e,"update-listener",n)},emitRemoveListener:(e,n)=>{t(e,"remove-listener",n)},emitBecomeGold:(e,n)=>{t(e,"become-gold",n)},emitRemoveGold:(e,n)=>{t(e,"remove-gold",n)},emitConnectBot:(e,n)=>{t(e,"connect-bot",n)},emitDisconnectBot:(e,n)=>{t(e,"disconnect-bot",n)},emitAwardedAchievement:(e,n)=>{t(e,"achievement-awarded",n)},emitAwardedAchievementNonMember:(e,n)=>{t(e,"achievement-awarded-nonMember",n)},emitTestListener:(e,n)=>{t(e,"test",n)},emitOverlayAlert:(e,n)=>{let t=e.app.get("ws"),i=e.app.get(n.channel+"-OVERLAYS");i&&i.forEach(e=>{t.to(e).emit("alert-recieved",n)})},emitOverlaySettingsUpdate:(e,n)=>{let t=e.app.get("ws"),i=e.app.get(n.channel+"-OVERLAYS");i&&i.forEach(e=>{t.to(e).emit("update-settings",n.overlay)})},emitNotificationsUpdate:(e,n)=>{let t=e.app.get("ws"),i=e.app.get(n.user+"-NOTIFICATIONS");i&&i.forEach(e=>{t.to(e).emit("notification-received",n)})}}},function(e,n,t){const i=t(1),a=t(2),o=new(t(4))(process.env.SCK),s=t(30);e.exports={authCheck:(e,n,t)=>{e.user?t():n.redirect("/auth/twitch")},isAuthorized:async(e,n,t)=>{if(e.cookies.etid)try{let a=o.decrypt(e.cookies.etid),s=await i.findOne({"integration.twitch.etid":a});s?(e.user=s,n.cookie("etid",e.cookies.etid,{maxAge:288e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),t()):(n.clearCookie("etid"),n.status(401),n.json({}))}catch(e){n.clearCookie("etid"),n.status(401),n.json({})}else s(e,n),n.status(401),n.json({})},isModAuthorized:async(e,n,t)=>{if(e.cookies.etid&&e.query.channel){let s=o.decrypt(e.cookies.etid),r=await i.findOne({"integration.twitch.etid":s});if(r){e.user=r;let i=await a.findOne({owner:e.query.channel,"moderators.uid":e.user._id});i?(e.channel=i,t()):(n.status(401),n.redirect(process.env.WEB_DOMAIN+"/mod"))}else n.clearCookie("etid"),n.status(401),n.redirect(process.env.WEB_DOMAIN)}else n.status(401),n.redirect(process.env.WEB_DOMAIN)},isAdminAuthorized:async(e,n,t)=>{if(e.cookies.etid){let a=o.decrypt(e.cookies.etid),s=await i.findOne({"integration.twitch.etid":a});s&&(s.type="admin")?(e.user=s,n.cookie("etid",e.cookies.etid,{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),t()):(n.status(401),n.json({message:"You are not authorized to make this request."}),t())}else n.status(401),n.redirect(process.env.WEB_DOMAIN)}}},function(e,n,t){const i=t(0),a=new(0,i.Schema)({uid:Number,channel:String,title:String,description:String,icon:String,earnable:Boolean,limited:Boolean,secret:Boolean,listener:String,first:String,earned:Date,alert:Boolean,order:Number}),o=i.model("achievement",a);e.exports=o},function(e,n,t){const i=t(0);var a=new(0,i.Schema)({uid:String,token:String,created:Date});a.methods.hasExpired=function(){return Date.now()-Date.parse(this.created)>2592e5};const o=i.model("token",a);e.exports=o},function(e,n,t){const i=t(0),a=i.Schema,o=new a({uid:String,channel:String,achType:String,resubType:String,bot:String,query:a.Types.Mixed,condition:String,achievement:String,aid:Number}),s=i.model("listener",o);e.exports=s},function(e,n){e.exports=require("axios")},function(e,n,t){const i=t(0),a=new(0,i.Schema)({name:String,type:String,channel:String,cloudID:String,url:String,achievementID:String}),o=i.model("image",a);e.exports=o},function(e,n){e.exports=require("uuid/v1")},function(e,n,t){const i=t(14);let a=t(38).v2;a.config({cloud_name:process.env.CLDNAME,api_key:process.env.CLDKEY,api_secret:process.env.CLDS});e.exports={uploadImage:(e,n,t,o)=>{return new Promise((s,r)=>{i.findOne({name:n,channel:t}).then(l=>{l?(console.log("\nimage already exists"),s(l)):(console.log("\nnew image"),a.uploader.upload(e,(e,a)=>{e?(console.log(e),r({error:e})):(console.log("\nimage uploaded successfully"),new i({name:n,channel:t,cloudID:a.public_id,url:a.url,type:o||"achievement"}).save().then(e=>{console.log("new image in DB"),s(e)}))}))})})},destroyImage:e=>new Promise((n,t)=>{a.uploader.destroy(e,function(e){n(e)})})}},function(e,n,t){e.exports=t(18)},function(e,n,t){(function(e){const n=t(3),i=t(19),a=t(0),o=(t(20),t(5)),s=(t(21),t(22),t(24)),r=t(25),l=t(26).allowAccess,{searchChannels:d,searchMembers:c,searchMembersDetailed:h,searchMod:u,storeSocket:m,removeSocket:p,markNotificationRead:g,deleteNotification:f}=t(27);let v=t(28),y=t(29),w=t(33);const b=process.env.PORT||5e3;let _=n();_.set("view engine","ejs"),_.use(s()),_.use(r({limit:"50mb",extended:!0})),a.connect(process.env.MDB,{useNewUrlParser:!0},()=>{console.log("connected to mongodb")}),_.use(o.initialize()),_.use(o.session()),_.use(n.static("public")),_.use("/auth",[l],y),_.use("/api",[l],w),_.use(n.static(i.join(e,"client/build")));let I;_.listen(b);I=v.listen(process.env.SOCKET_PORT),_.set("ws",I),I.on("connection",function(e){e.handshake&&e.handshake.query&&m(e,_),e.on("handshake",function(n){if(n.name="SAIRC")_.set("IRCSOCKET",e.id);else if(n.web){let t=_.get("USERSOCKETS");t?t[n.user]=e.id:((t={})[n.user]=e.id,_.set("USERSOCKETS",t))}}),e.on("search-directory",n=>{d(e,n)}),e.on("search-members",n=>{h(e,n)}),e.on("search-gift-member",n=>{c(e,n)}),e.on("search-mod",n=>{u(e,n)}),e.on("mark-notification-read",n=>{g(e,n)}),e.on("delete-notification",n=>{f(e,n)}),e.on("disconnect",()=>{p(e,_)})}),console.log(`Express app listening on port ${b}`)}).call(this,"/")},function(e,n){e.exports=require("path")},function(e,n){e.exports=require("cookie-session")},function(e,n,t){const i=t(0),a=new(0,i.Schema)({socketID:String,name:String}),o=i.model("socket",a);e.exports=o},function(e,n,t){const i=t(5),a=t(23).Strategy,o=t(1),s=t(2),r=t(6),l=(t(7),new(t(4))(process.env.SCK)),{emitChannelUpdate:d}=t(8);i.serializeUser((e,n)=>{n(null,e)}),i.use(new a({clientID:process.env.TCID,clientSecret:process.env.TCS,callbackURL:process.env.TPR},(e,n,t,i)=>{let a=l.encrypt(e),c=l.encrypt(n),h={etid:t.id.toString(),token:a,refresh:c};o.findOne({"integration.twitch.etid":h.etid}).then(e=>{let n=!1;e?(e.integration.twitch=h,e.name!==t.login&&(e.name=t.login,n=!0),e.logo!==t.profile_image_url&&(e.logo=t.profile_image_url,n=!0),e.email!==t.email&&(e.email=t.email,n=!0),e.broadcaster_type!==t.broadcaster_type&&(e.broadcaster_type=t.broadcaster_type,n=!0),e.save().then(e=>{s.findOne({twitchID:e.integration.twitch.etid}).then(t=>{if(t){let a=!1;t.owner!==e.name&&(n=!0,a=t.owner,t.owner=e.name),t.logo!==e.logo&&(n=!0,t.logo=e.logo),t.save().then(t=>{n&&(new r({user:e._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),a&&d(req,{old:a,new:t.owner})),i(null,e)})}else n&&new r({user:e._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),i(null,e)})})):new o({name:t.login,logo:t.profile_image_url,email:t.email,type:"user",channels:[],integration:{twitch:h},preferences:{autojoin:!0},new:!0}).save().then(e=>{i(null,e)})})}))},function(e,n){e.exports=require("passport-twitch.js")},function(e,n){e.exports=require("cookie-parser")},function(e,n){e.exports=require("body-parser")},function(e,n,t){e.exports={allowAccess:async(e,n,t)=>{var i;i=["http://www.streamachievements.com","http://streamachievements.com","https://www.streamachievements.com","https://streamachievements.com"];var a=e.headers.origin;i.indexOf(a)>-1&&n.setHeader("Access-Control-Allow-Origin",a),n.header("Access-Control-Allow-Credentials",!0),n.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),t()}}},function(e,n,t){const i=t(2),a=t(1),o=t(6),s=t(7),r=new(t(4))(process.env.SCK);e.exports={searchChannels:(e,n)=>{let t=new RegExp(n,"gi");i.find({owner:t}).sort({_id:-1}).limit(25).exec((n,t)=>{let i=t.map(e=>({owner:e.owner,logo:e.logo}));e.emit("channel-results",i)})},searchMembers:(e,n)=>{let t=new RegExp(n.value,"gi");i.findOne({owner:n.owner}).then(i=>{i&&a.find({_id:{$in:i.members},name:t}).sort({_id:-1}).limit(25).exec((t,a)=>{let o=a.map(e=>e.id),r={};s.find({userID:{$in:o},channelID:i.id,achievementID:n.aid}).then(n=>{n.forEach(e=>{r[e.userID]=!0});let t=a.map(e=>{let n=r[e.id]||!1;return{name:e.name,logo:e.logo,earned:n}});e.emit("members-retrieved",t)})})})},searchMembersDetailed:(e,n)=>{let t=new RegExp(n.value,"gi");i.findOne({owner:n.owner}).then(n=>{n&&a.find({_id:{$in:n.members},name:t}).sort({_id:-1}).limit(25).exec((t,i)=>{let a=i.map(e=>{let t=e.channels.findIndex(e=>e.channelID===n.id);return{name:e.name,logo:e.logo,banned:e.channels[t].banned||!1}});e.emit("member-results",a)})})},searchMod:(e,n)=>{let t=new RegExp(n.value,"gi");i.findOne({owner:n.owner}).then(n=>{n&&a.find({_id:{$in:n.members},name:t}).sort({_id:-1}).limit(25).exec((t,i)=>{let a=i.map(e=>{let t=n.moderators.findIndex(n=>n.uid===e.id);return{name:e.name,logo:e.logo,isMod:t>=0}});e.emit("members-retrieved",a)})})},storeSocket:(e,n)=>{if(e.handshake.query.uid)i.findOne({oid:e.handshake.query.uid}).then(t=>{if(t){let i=n.get(t.owner+"-OVERLAYS"),a=n.get("SOCKET-LOOKUP");a||(a={}),i?i.push(e.id):i=[e.id],n.set(t.owner+"-OVERLAYS",i),a[e.id]={name:t.owner,type:"OVERLAYS"},n.set("SOCKET-LOOKUP",a)}else e.emit("connect-issue","Issue while connecting")});else if(e.handshake.query.nid){let t=r.decrypt(e.handshake.query.nid);a.findById(t).then(t=>{let i=n.get(t.name+"-NOTIFICATIONS"),a=n.get("SOCKET-LOOKUP");a||(a={}),i?i.push(e.id):i=[e.id],n.set(t.name+"-NOTIFICATIONS",i),a[e.id]={name:t.name,type:"NOTIFICATIONS"},n.set("SOCKET-LOOKUP",a)})}},removeSocket:(e,n)=>{let t=n.get("SOCKET-LOOKUP");if(t){let i=t[e.id];if(i){let a=n.get(`${i.name}-${i.type}`);if(a){let t=a.filter(n=>n!==e.id);n.set(`${i.name}-${i.type}`,t)}delete t[e.id],n.set("SOCKET-LOOKUP",t)}}},markNotificationRead:(e,n)=>{if(n.notification)o.findById(n.notification.id).then(n=>{n.status="read",n.save().then(n=>{e.emit("notification-read",n.id)})});else if(n.nid){let t=r.decrypt(n.nid);o.find({user:t}).then(n=>{n&&(n.forEach(e=>{"read"!==e.status&&(e.status="read",e.save())}),e.emit("notification-read","all"))})}},deleteNotification:(e,n)=>{o.findByIdAndRemove(n.id).then(n=>{e.emit("notification-removed",n.id)})}}},function(e,n){e.exports=require("socket.io")},function(e,n,t){const i=t(3).Router(),a=t(5),o=t(4),s=t(13),r=new o(process.env.SCK),l=t(9).isAuthorized,d=(t(1),t(2)),{emitBecomeGold:c,emitRemoveGold:h,emitConnectBot:u,emitDisconnectBot:m}=t(8);t(31);let p=t(32),g=p.patreon,f=(0,p.oauth)(process.env.PCID,process.env.PCS);const v="https://www.patreon.com/api/oauth2/v2/identity?include=memberships&fields%5Buser%5D=thumb_url,vanity";i.get("/twitch",a.authenticate("twitch.js",{scope:["user_read","user:read:email"]})),i.get("/twitch/redirect",a.authenticate("twitch.js"),(e,n)=>{e.session.user=e.user;let t=r.encrypt(e.user.integration.twitch.etid);n.cookie("etid",t,{maxAge:144e5,httpOnly:!1,secure:!0,domain:"streamachievements.com"}),new Promise((n,t)=>{"user"!==e.user.type?d.findOne({owner:e.user.name}).then(t=>{t?t.broadcaster_type?t.broadcaster_type.twitch!==e.user.broadcaster_type?(t.broadcaster_type.twitch=e.user.broadcaster_type,t.save().then(e=>{n()})):n():(t.broadcaster_type={twitch:e.user.broadcaster_type},t.save().then(e=>{n()})):n()}):n()}).then(()=>{let t=e.user.integration.patreon;if(t&&"lifetime"!==t.status){let i,{at:a,rt:o,id:l,expires:u}=t;(i=w(u)?new Promise((n,i)=>{b(e,t.rt).then(e=>{e&&(a=e.at,o=e.rt,u=e.expires),n()})}):Promise.resolve()).then(()=>{let i=r.decrypt(a);l?s.get(`https://www.patreon.com/api/oauth2/v2/members/${l}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${i}`}}).then(i=>{let s=i.data.data.attributes.patron_status,r=i.data.data.attributes.is_follower,l=i.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,m={id:t.id,thumb_url:t.thumb_url,vanity:t.vanity,at:a,rt:o,is_follower:r,status:s,is_gold:l,expires:u};e.user.integration.patreon?!e.user.integration.patreon.is_gold&&l?c(e,e.user.name):e.user.integration.patreon.is_gold&&!l&&h(e,e.user.name):l?c(e,e.user.name):h(e,e.user.name);let p=Object.assign({},e.user.integration);p.patreon={...m},e.user.integration=p,e.user.lastLogin=Date.now(),e.user.save().then(t=>{"verified"!==t.type&&"admin"!==t.type||d.findOne({owner:e.user.name}).then(e=>{e.gold!==t.integration.patreon.is_gold&&(e.gold=t.integration.patreon.is_gold,e.save())}),y(e,n)})}).catch(t=>{if(console.log(t.response),401===t.response.status||403===t.response.status)n.redirect("/auth/patreon");else if(404===t.response.status){let t=Object.assign({},e.user.integration),i={id:null,thumb_url:t.patreon.thumb_url,vanity:t.patreon.vanity,at:t.patreon.at,rt:t.patreon.rt,is_follower:null,status:null,is_gold:null,expires:t.patreon.expires};t.patreon={...i},e.user.integration=t,e.user.lastLogin=Date.now(),e.user.save().then(t=>{"verified"!==t.type&&"admin"!==t.type||d.findOne({owner:e.user.name}).then(e=>{e.gold!==t.integration.patreon.is_gold&&(e.gold=!1,e.save())}),y(e,n)})}}):(l=e.user.integration.patreon.id)||(e.user.lastLogin=Date.now(),e.user.save().then(t=>{y(e,n)}))})}else e.user.lastLogin=Date.now(),e.user.save().then(t=>{y(e,n)})})}),i.get("/streamlabs",l,(e,n)=>{let t="https://www.streamlabs.com/api/v1.0/authorize?";t+="client_id="+process.env.SLCID+"&",t+="redirect_uri="+process.env.SLCPR+"&",t+="response_type=code&scope=socket.token",n.redirect(t)}),i.get("/streamlabs/redirect",l,(e,n)=>{s.post("https://streamlabs.com/api/v1.0/token",{grant_type:"authorization_code",client_id:process.env.SLCID,client_secret:process.env.SLCCS,code:e.query.code,redirect_uri:process.env.SLCPR}).then(t=>{s.get("https://streamlabs.com/api/v1.0/socket/token?access_token="+t.data.access_token).then(t=>{let i=r.encrypt(t.data.socket_token),a=Object.assign({},e.user.integration);a.streamlabs={st:i},e.user.integration=a,e.user.save().then(t=>{u(e,{channel:t.name,st:t.integration.streamlabs.st,bot:"streamlabs"}),n.redirect(process.env.WEB_DOMAIN+"profile?tab=integration")})})})}),i.get("/patreon",l,(e,n)=>{let t="https://www.patreon.com/oauth2/authorize?";t+="response_type=code&",t+="client_id="+process.env.PCID+"&",t+="redirect_uri="+process.env.PPR,t+="&scope=campaigns%20identity%20identity%5Bemail%5D%20campaigns.members",n.redirect(t)}),i.get("/patreon/redirect",l,(e,n)=>{let t=e.query.code;return f.getTokens(t,process.env.PPR).then(n=>{g(n.access_token);let t=e.cookies.etid;return new Promise((e,i)=>{let a,o,l=r.encrypt(n.access_token),d=r.encrypt(n.refresh_token),c=new Date,h=(new Date).setDate(c.getDate()+14);s.get(v,{headers:{Authorization:`Bearer ${n.access_token}`}}).then(i=>{if(a=i.data.data.attributes.vanity,o=i.data.data.attributes.thumb_url,i.data.included){let r=i.data.included[0].id;s.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${n.access_token}`}}).then(n=>{let i=n.data.data.attributes.patron_status,s=n.data.data.attributes.is_follower,c=n.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0;e({id:r,thumb_url:o,vanity:a,at:l,rt:d,etid:t,is_follower:s,status:i,is_gold:c,expires:h})})}else e({thumb_url:o,vanity:a,at:l,rt:d,etid:t,expires:h})})})}).then(t=>{let{id:i,thumb_url:a,vanity:o,at:s,rt:r,etid:l,is_follower:u,status:m,is_gold:p,expires:g}=t,f=Object.assign({},e.user.integration);f.patreon={id:i,thumb_url:a,vanity:o,at:s,rt:r,is_follower:u,status:m,is_gold:p,expires:g},p?c(e,e.user.name):h(e,e.user.name),e.user.integration=f,e.user.save().then(t=>{"verified"===t.type&&d.findOne({owner:e.user.name}).then(e=>{e.gold!==p&&(e.gold=p,e.save())}),n.redirect(process.env.WEB_DOMAIN+"profile?tab=integration")})})}),i.post("/twitch/sync",l,(e,n)=>{_(e.user,e.cookies.etid).then(e=>{n.json(e)})}),i.post("/patreon/sync",l,(e,n)=>{I(e,e.cookies.etid).then(e=>{n.json(e)})}),i.post("/streamlabs/unlink",l,(e,n)=>{let t=Object.assign({},e.user.integration);delete t.streamlabs,e.user.integration=t,e.user.save().then(t=>{m(e,{channel:t.name,bot:"streamlabs"}),n.json({success:!0,service:"streamlabs"})})}),i.post("/patreon/unlink",l,(e,n)=>{let t=Object.assign({},e.user.integration);delete t.patreon,"verified"===e.user.type&&h(e,e.user.name),e.user.integration=t,e.user.save().then(t=>{d.findOne({owner:e.user.name}).then(e=>{e?(e.icons={default:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",hidden:"https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png"},e.save().then(e=>{n.json({success:!0,service:"patreon"})})):n.json({success:!0,service:"patreon"})})})});let y=(e,n)=>{let t=e.cookies._ru;if(t){let e=r.decrypt(t);n.clearCookie("_ru",{domain:"streamachievements.com"}),e?0!=e.indexOf(process.env.WEB_DOMAIN)?n.redirect(process.env.WEB_DOMAIN+"home"):n.redirect(e):n.redirect(process.env.WEB_DOMAIN+"home")}else n.redirect(process.env.WEB_DOMAIN+"home")},w=e=>{let n=new Date(e);return new Date>n},b=(e,n)=>new Promise((t,i)=>{let a=r.decrypt(n);s.post(`https://www.patreon.com/api/oauth2/token?grant_type=refresh_token&refresh_token=${a}&client_id=${process.env.PCID}&client_secret=${process.env.PCS}`).then(n=>{let i=r.encrypt(n.data.access_token),a=r.encrypt(n.data.refresh_token),o=new Date,s=(new Date).setDate(o.getDate()+14),l=Object.assign({},e.user.integration);l.patreon.at=i,l.patreon.rt=a,l.patreon.expires=s,e.user.integration=l,e.user.save().then(e=>{t({at:i,rt:a,expires:s})})}).catch(e=>{t(null)})}),_=(e,n)=>e.integration.twitch?new Promise((n,t)=>{s.get(`https://api.twitch.tv/helix/users/?id=${e.integration.twitch.etid}`,{headers:{"Client-ID":process.env.TCID}}).then(t=>{e.name=t.data.data[0].login,e.logo=t.data.data[0].profile_image_url,e.save().then(e=>{d.findOne({twitchID:e.integration.twitch.etid}).then(t=>{t?(t.owner!==e.name&&(updated=!0,t.owner=e.name),t.logo!==e.logo&&(updated=!0,t.logo=e.logo),t.save().then(t=>{n({username:e.name,logo:e.logo})})):n({username:e.name,logo:e.logo})})})})}):Promise.resolve(),I=(e,n)=>e.user.integration.patreon?new Promise((t,i)=>{let a,{at:o,rt:l,id:u,expires:m}=e.user.integration.patreon;(a=w(m)?new Promise((n,t)=>{b(e.user,l).then(e=>{e&&(o=e.at,l=e.rt,m=e.expires),n()})}):Promise.resolve()).then(()=>{let i=r.decrypt(o);s.get(v,{headers:{Authorization:`Bearer ${i}`}}).then(a=>{if(vanity=a.data.data.attributes.vanity,thumb_url=a.data.data.attributes.thumb_url,a.data.included){let r=a.data.included[0].id;s.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${i}`}}).then(i=>{let a=i.data.data.attributes.patron_status,s=i.data.data.attributes.is_follower,u=i.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,p={id:r,thumb_url:thumb_url,vanity:vanity,at:o,rt:l,etid:n,is_follower:s,status:a,is_gold:u,expires:m};!e.user.integration.patreon.is_gold&&u?c(e,e.user.name):e.user.integration.patreon.is_gold&&!u&&h(e,e.user.name);let g=Object.assign({},e.user.integration);g.patreon={...p},e.user.integration=g,e.user.save().then(e=>{"verified"===e.type&&d.findOne({owner:e.name}).then(n=>{n.gold!==e.integration.patreon.is_gold&&(n.gold=e.integration.patreon.is_gold,n.save())}),t({vanity:e.integration.patreon.vanity,thumb_url:e.integration.patreon.thumb_url,follower:e.integration.patreon.is_follower,status:e.integration.patreon.status,gold:e.integration.patreon.is_gold})})})}else t({thumb_url:thumb_url,vanity:vanity,at:o,rt:l,etid:n})})})}):Promise.resolve();i.get("/logout",(e,n)=>{e.logout(),n.clearCookie("etid",{domain:"streamachievements.com"}),n.redirect(process.env.WEB_DOMAIN)}),e.exports=i},function(e,n,t){const i=new(t(4))(process.env.SCK),a={"/api/profile":"profile","/api/achievement/retrieve":"dashboard","/api/channel/dashboard":"dashboard","/api/channel/retrieve":"channel/{channel}","/api/channel/mod":"mod","/api/channel/mod/retrieve":"mod/{channel}","/api/achievement/mod/retrieve":"mod/{channel}"};e.exports=(e,n)=>{let{originalUrl:t,params:o,query:s,headers:r}=e,l=process.env.WEB_DOMAIN;if(r.origin+"/"===process.env.WEB_DOMAIN){let e=t.split("?")[0];e&&(l+=a[e],l=s&&s.channel?l.replace(new RegExp("{channel}","gi"),s.channel):l.replace(new RegExp("/{channel}","gi"),""),n.cookie("_ru",i.encrypt(l),{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}))}}},function(e,n){e.exports=require("url")},function(e,n){e.exports=require("patreon")},function(e,n,t){const i=t(3).Router(),a=t(5),o=t(1),s=t(2),r=t(6),l=t(10),d=t(7),c=t(11),h=t(0),u=new(t(4))(process.env.SCK);let m=t(34),p=t(40),g=t(42),f=t(44);const{isAuthorized:v,isAdminAuthorized:y}=t(9),{emitTestListener:w,emitNewChannel:b}=t(8);i.use("/channel",m),i.use("/achievement",p),i.use("/irc",g),i.use("/admin",f),i.get("/token",a.authenticate("twitch"),(e,n)=>n.json({success:!0,data:e.user.id}));let _=!1;i.get("/users",y,(e,n)=>{c.find({}).then(e=>{let t={},i=e.map(e=>(t[e.uid]=e.token,e.uid));o.find({_id:{$in:i}}).then(e=>{let i=e.map(e=>({name:e.name,logo:e.logo,status:"not issued"===t[e.id]?"new":"pending"}));n.json({users:i})})})}),i.get("/user",v,(e,n)=>{let t,i,a=u.encrypt(e.user._id),o=!1;if(setTimeout(()=>{_&&(n.status(500),n.json({message:"Internal Server Issue"}))},1e4),e.user.integration.patreon){let n=e.user.integration.patreon;t={vanity:n.vanity,thumb_url:n.thumb_url,follower:n.is_follower,status:n.status,gold:n.is_gold}}else t=!1;i=!!e.user.integration.streamlabs,r.countDocuments({user:e.user._id,status:"new"}).exec().then(r=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(l=>{s.find({"moderators.uid":e.user._id}).then(s=>{if(s&&(o=!0),_=!1,l)n.json({username:e.user.name,logo:e.user.logo,patreon:t,streamlabs:i,status:"verified",type:e.user.type,preferences:e.user.preferences,notificationCount:r,uid:a,isMod:o,new:e.user.new});else{let s="viewer";c.findOne({uid:e.user._id}).then(l=>{l&&(s="not issued"===l.token?"review":"pending"),n.json({username:e.user.name,logo:e.user.logo,patreon:t,streamlabs:i,status:s,type:e.user.type,preferences:e.user.preferences,notificationCount:r,uid:a,isMod:o,new:e.user.new})})}})})})}),i.get("/user/catch",v,(e,n)=>{d.find({userID:e.user.integration.twitch.etid}).then(t=>{if(t.length>0){let i=t.map(e=>e.channelID);s.find({_id:{$in:i}}).then(i=>{let a=i.map(e=>({name:e.owner,logo:e.logo})),o=t.map(n=>new Promise((t,i)=>{n.userID=e.user.id,n.save().then(()=>{t()})}));Promise.all(o).then(()=>{n.json({catch:!0,channels:a})})})}else n.json({catch:!1,channels:[]})})}),i.post("/user/catch",v,(e,n)=>{e.user.new=!1,e.user.preferences.autojoin=e.body.autojoin,e.user.save().then(e=>{n.json({})})}),i.get("/profile",v,(e,n)=>{let t=e.user.channels.map(e=>new h.Types.ObjectId(e.channelID));s.find({_id:{$in:t}}).then(t=>{let i=t.map(n=>{e.user.channels.filter(e=>e.channelID===n.id);return new Promise((t,i)=>{d.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let i=0;l.countDocuments({channel:n.owner}).then(a=>{a>0&&(i=Math.round(e/a*100)),t({logo:n.logo,owner:n.owner,percentage:i})})})})}),a=new Promise((n,t)=>{r.countDocuments({user:e.user._id}).exec().then(t=>{r.find({user:e.user._id}).sort({date:-1}).limit(15).exec((e,t)=>{if(t){let e=!1,i=t.map(e=>({id:e._id,logo:e.logo,message:e.message,date:e.date,type:e.type,channel:e.channel,status:e.status}));15===i.length&&(e=15),n({notifications:i,next:e})}else n([])})})});Promise.all(i).then(t=>{a.then(i=>{e.user.preferences?n.json({channels:t,preferences:e.user.preferences,notifications:i.notifications,next:i.next}):(e.user.preferences={autojoin:!1},e.user.save().then(e=>{n.json({channels:t,preferences:e.preferences,notifications:i.notifications,next:i.next})}))})})})}),i.get("/notifications",v,(e,n)=>{let t=parseInt(e.query.next);r.find({user:e.user._id}).sort({date:-1}).skip(t).limit(15).exec((e,t)=>{if(t){let e=!1,i=t.map(e=>({id:e._id,logo:e.logo,message:e.message,date:e.date,type:e.type,channel:e.channel,status:e.status}));15===i.length&&(e+=15),n.json({notifications:i,next:e})}else n.json([])})}),i.post("/profile/preferences",v,(e,n)=>{let t={...e.user.preferences}||{};t={...e.body.preferences},e.user.preferences=t,e.user.save().then(t=>{n.json(e.user.preferences)})}),i.post("/test",y,(e,n)=>{w(e,{type:"follow",for:"twitch_account",message:[{_id:"cdf271793355b2c542b2bcbb32c35ba7",id:"462302230",name:"arda_celikkanat",priority:10}],event_id:"evt_5ed407e33bf25ba5d4a1d96ffcd034de"}),n.json({})}),e.exports=i},function(e,n,t){const i=t(3).Router(),a=(t(5),t(15)),{isAuthorized:o,isModAuthorized:s,isAdminAuthorized:r}=t(9),l=t(0),d=(new(t(4))(process.env.SCK),t(35)),c=t(36),h=t(37),u=t(1),m=t(2),p=t(10),g=t(12),f=t(14),v=t(11),y=t(6),w=t(7),{uploadImage:b,destroyImage:_}=t(16),{emitNewChannel:I,emitOverlaySettingsUpdate:D,emitOverlayAlert:O,emitNotificationsUpdate:x}=t(8),j="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",S="https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png",k=/^https:\/\/res\.cloudinary\.com\/phirehero\/.*\.(png|jpg|jpeg)$/gm,T=t(39);i.get("/create",o,(e,n)=>{m.findOne({twitchID:e.user.twitchID}).then(t=>{t?n.json({error:"Channel already exists!",channel:t}):new m({owner:e.user.name,twitchID:e.user.twitchID,theme:"",logo:e.user.logo,achievements:[],members:[],icons:{default:j,hidden:S},oid:a(),nextUID:1}).save().then(t=>{let i=!1;e.user.integration&&e.user.integration.patreon&&("forever"===e.user.integration.patreon.type||e.user.integration.patreon.is_gold)&&(i=!0),I({name:e.user.name,"full-access":i,connected:!1}),e.user.channelID=t.id,e.user.save().then(i=>{n.json({channel:t,user:e.user})})})})}),i.post("/leave",o,(e,n)=>{m.findOne({owner:e.body.channel}).then(t=>{if(t){let i,a=t.members;a.length>0&&a.includes(e.user.id)?(i=a.findIndex(n=>{e.user.id}),a.splice(i,1),t.save().then(t=>{i=0,i=e.user.channels.findIndex(e=>e.channelID===t.id),e.user.channels.splice(i,1),e.user.save().then(e=>{n.json({leave:!0})})})):n.send("User isn't a part of this channel")}else n.send("Channel doesn't exist")})}),i.post("/setup/join",o,(e,n)=>{m.findOne({owner:e.body.channel}).then(t=>{if(t){let i=e.user.channels.some(e=>e.channelID===t.id),a=t.members.includes(e.user.id);if(i)a?n.json({user:e.user,channel:t}):(t.members.push(e.user.id),t.save().then(t=>{n.json({user:e.user,channel:t})}));else if(a)i?n.json({user:e.user,channel:t}):(e.user.channels.push({channelID:t.id,sync:!0,banned:!1}),e.user.save().then(e=>{n.json({user:e,channel:t})}));else{let i={channelID:t.id,sync:!0,banned:!1};e.user.channels.push(i),e.user.save().then(i=>{t.members.push(i.id),t.save().then(t=>{w.countDocuments({userID:e.user.id,channelID:t.id}).then(e=>{let i=0;p.countDocuments({channel:t.owner}).then(a=>{a>0&&(i=Math.round(e/a*100)),n.json({owner:t.owner,logo:t.logo,percentage:i})})})})})}}else n.status(405),n.send("Channel requested to join does not exist!")})}),i.post("/join",o,(e,n)=>{m.findOne({owner:e.body.channel}).then(t=>{if(t){let i=e.user.channels.some(e=>e.channelID===t.id),a=t.members.includes(e.user.id);if(i)a?n.json({user:e.user,channel:t}):(t.members.push(e.user.id),t.save().then(t=>{n.json({user:e.user,channel:t})}));else if(a)i?n.json({user:e.user,channel:t}):(e.user.channels.push({channelID:t.id,sync:!0,banned:!1}),e.user.save().then(e=>{n.json({user:e,channel:t})}));else{let i={channelID:t.id,sync:!0,banned:!1};e.user.channels.push(i),e.user.save().then(e=>{t.members.push(e.id),t.save().then(t=>{n.json({user:e,channel:t})})})}}else n.status(405),n.send("Channel requested to join does not exist!")})}),i.get("/list",(e,n)=>{m.find({},(e,t)=>{n.json(t)})}),i.get("/retrieve",o,(e,n)=>{let t=e.query.channel;if(e.query.bb&&m.find({watcher:!0}).then(e=>{e.map(e=>({name:e.owner,listeners:e.listeners}))}),t){let i=!1;m.findOne({owner:t}).then(a=>{if(a){if(e.user.favorites){e.user.favorites.findIndex(e=>e===a.id)>=0&&(i=!0)}p.find({channel:t}).then(o=>{let s,r,l,d,c=a.members.includes(e.user.id);c?d=new Promise((n,t)=>{let i=e.user.channels.findIndex(e=>e.channelID===a.id);l=e.user.channels[i].banned||!1,w.find({userID:e.user.id,channelID:a.id}).then(e=>{s=e.map(e=>e.achievementID),r=o.map(e=>{let n=Object.assign({},e._doc),t=s.findIndex(e=>e===n.uid);return n.earned=t>=0,n}),n()})}):(r=o,d=Promise.resolve()),d.then(()=>{let e=r.map(e=>{let n=e._doc?{...e._doc}:e;return delete n.__v,delete n._id,n});e.sort((e,n)=>e.order>n.order?1:-1),u.findOne({name:t}).then(t=>{if(t){let o=!1;t.integration.patreon&&t.integration.patreon.is_gold&&(o=!0);let s={...a._doc};delete s.__v,delete s._id,n.json({channel:s,achievements:e,joined:c,fullAccess:o,favorited:i,banned:l})}else n.json({error:"Channel doesn't exist"})})})})}else n.json({error:"No channel found for the name: "+t})})}}),i.get("/dashboard",o,(e,n)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let t=new Promise((n,t)=>{p.find({channel:e.owner}).then(e=>{if(e){let t=e.map(e=>e.listener);g.find({_id:{$in:t}}).then(t=>{let i=e.map(e=>{let n=t.find(n=>n.id===e.listener);if(n){let t={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:n.code,order:e.order};return n.resubType&&(t.resubType=n.resubType),n.query&&(t.query=n.query),t}return e});i.sort((e,n)=>e.order>n.order?1:-1),n(i)})}else n(e)})}),i=new Promise((n,t)=>{f.find({channel:e.owner}).then(e=>{n(e?{gallery:e}:{gallery:[]})})}),o=new Promise((n,t)=>{let i=e.moderators.map(e=>e.uid);u.find({_id:{$in:i}}).then(t=>{let i=t.map(n=>{let t=e.moderators.find(e=>e.uid===n.id);return{id:n.id,name:n.name,logo:n.logo,permissions:t.permissions}});n(i)})});Promise.all([t,i,o]).then(t=>{let i;e.oid?e.overlay&&0!==Object.keys(e.overlay).length?(delete(i={...e._doc}).__v,delete i._id,n.json({channel:i,achievements:t[0],images:t[1],moderators:t[2]})):(e.overlay=T,e.save().then(e=>{delete(i={...e._doc}).__v,delete i._id,n.json({channel:i,achievements:t[0],images:t[1],moderators:t[2]})})):(e.oid=a(),e.overlay&&0!==Object.keys(e.overlay).length||(e.overlay=T),e.save().then(e=>{delete(i={...e._doc}).__v,delete i._id,n.json({channel:i,achievements:t[0],images:t[1],moderators:t[2]})}))})}else n.json({error:"User doesn't manage a channel"})})}),i.post("/mod",o,(e,n)=>{let t=e.body.mods,i=[];m.findOne({owner:e.user.name}).then(e=>{u.find({name:{$in:t}}).then(t=>{let a=e.moderators;t.forEach(e=>{a.push({uid:e.id,permissions:{channel:!0,chat:!0}}),i.push({name:e.name,logo:e.logo,permissions:{channel:!0,chat:!0}})}),e.moderators=a,e.save().then(e=>{n.json({moderators:i})})})})}),i.post("/mod/revoke",o,(e,n)=>{let t=e.body.mod;m.findOne({owner:e.user.name}).then(e=>{e&&u.findOne({name:t}).then(t=>{if(t){let i=e.moderators,a=i.findIndex(e=>e.uid===t.id);a>=0?(i.splice(a,1),e.moderators=i,e.save().then(e=>{n.json({removed:a})})):n.json({error:"Error removing mod"})}})})}),i.post("/mod/preferences",s,(e,n)=>{C(e,n,e.channel)}),i.post("/preferences",o,(e,n)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?C(e,n,t):n.json({error:"Issue updating preferences"})})});let C=(e,n,t)=>{let i,a,o;i=new Promise((n,i)=>{e.body.defaultIcon&&h(e.body.defaultIcon)?b(e.body.defaultIcon,e.body.defaultIconName,t.owner,"default").then(e=>{n(e.url)}):e.body.defaultImage&&k.test(e.body.defaultImage)?n(e.body.defaultImage):n()}),a=new Promise((n,i)=>{e.body.hiddenIcon&&h(e.body.hiddenIcon)?b(e.body.hiddenIcon,e.body.hiddenIconName,t.owner,"hidden").then(e=>{n(e.url)}):e.body.hiddenImage&&k.test(e.body.hiddenImage)?n(e.body.hiddenImage):n()}),o=new Promise((n,i)=>{if(e.body.overlay){let{chat:i,chatMessage:a,sfx:o,enterEffect:s,exitEffect:r,duration:l,volume:d,delay:c}=e.body.overlay,h=t.overlay||{};i&&(h.chat=i),void 0!==a&&(h.chatMessage=a),o&&(h.sfx=process.env.WEB_DOMAIN+"sounds/achievement."+o+".mp3"),s&&(h.enterEffect=s),r&&(h.exitEffect=r),l&&(h.duration=l),d&&(h.volume=d),c&&(h.delay=c),n(h)}else n()}),Promise.all([i,a,o]).then(i=>{let a={default:t.icons.default,hidden:t.icons.hidden};i[0]&&(a.default=i[0]),i[1]&&(a.hidden=i[1]),i[2]&&(t.overlay=i[2],updateSettings=!0),t.icons=a,t.save().then(a=>{i[0]!==a.icons.default&&console.log("uh oh"),updateSettings&&D(e,{channel:a.owner,overlay:a.overlay}),f.find({channel:t.owner}).then(e=>{e?n.json({channel:a,images:{gallery:e}}):n.json({channel:a})})})})};i.post("/image",o,(e,n)=>{let t=e.body.image;_(t.cloudID).then(i=>{let a,o=new Promise((n,i)=>{""!==t.achievementID?p.findOne({_id:t.achievementID}).then(t=>{t?(t.icon="",t.save().then(()=>{p.find({channel:e.user.name}).then(e=>{n(e)})})):n()}):n()}),s=new Promise((n,i)=>{f.deleteOne({_id:t._id}).then(t=>{f.find({channel:e.user.name}).then(e=>{console.log("\nGetting all images after delete"),n(e?{gallery:e,default:""}:{gallery:[],default:""})})})});a="hidden"===t.type||"default"===t.type?new Promise((n,i)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{let i={...e.icons};"default"===t.type?i.default=j:"hidden"===t.type&&(i.hidden=S),e.icons=i,e.save().then(e=>{n(e)})})}):Promise.resolve(),Promise.all([o,s,a]).then(e=>{let t={images:e[1]};e[0]&&(t.achievements=e[0]),e[2]&&(t.channel=e[2]),n.json(t)})})}),i.get("/user",o,(e,n)=>{let t,i,a,o={};e.user.favorites&&e.user.favorites.forEach(e=>{o[e]=!0});let s=e.user.favorites.map(e=>new l.Types.ObjectId(e)),r=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new l.Types.ObjectId(e.channelID)),d=new Promise((n,i)=>{m.find({_id:{$in:s}}).exec((i,a)=>{let o=a.map(n=>new Promise((t,i)=>{w.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let i=0;p.countDocuments({channel:n.owner}).then(a=>{a>0&&(i=Math.round(e/a*100)),t({logo:n.logo,owner:n.owner,percentage:i,favorite:!0})})})}));Promise.all(o).then(e=>{t=e,n()})})}),c=new Promise((n,t)=>{m.find({_id:{$in:r}}).limit(15).exec((t,o)=>{let s=o.map(n=>new Promise((t,i)=>{w.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let i=0;p.countDocuments({channel:n.owner}).then(a=>{a>0&&(i=Math.round(e/a*100)),t({logo:n.logo,owner:n.owner,percentage:i,favorite:!1})})})}));Promise.all(s).then(t=>{i=t,a=t.length<e.user.channels.length?t.length:-1,n()})})});Promise.all([d,c]).then(e=>{n.json({channels:t.concat(i),offset:a})})}),i.get("/member/select",o,(e,n)=>{u.findOne({name:e.query.uid}).then(t=>{t&&m.findOne({owner:e.query.owner}).then(e=>{e&&w.find({userID:t.id,channelID:e.id},["achievementID"]).then(i=>{let a=t.channels.findIndex(n=>n.channelID===e.id),o=t.channels[a].banned,s=i.map(e=>e.achievementID);n.json({name:t.name,logo:t.logo,achievements:s,banned:o})})})})}),i.post("/member/save",o,(e,n)=>{let t=Date.now();u.findOne({name:e.body.id}).then(i=>{i&&m.findOne({owner:e.user.name}).then(a=>{if(a){let o=i.channels.findIndex(e=>e.channelID===a.id);if(o>=0&&!i.channels[o].banned){let s=e.body.achievements;w.find({achievementID:{$in:s}}).then(s=>{let r=s.map(e=>e.achievementID);e.body.achievements.map(e=>{r.indexOf(e)<0&&new w({userID:i.id,channelID:a.id,achievementID:e,earned:t,first:!1}).save()});w.deleteMany({achievementID:{$in:r}}).then(t=>{new y({user:i._id,logo:a.logo,message:"Your achievements have been adjusted by the owner of the channel!",date:Date.now(),type:"achievement",channel:a.owner,status:"new"}).save().then(t=>{x(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:i.name}),w.find({userID:i.id,channelID:a.id},["achievementID"]).then(e=>{let t=e.map(e=>e.achievementID);n.json({member:{name:i.name,logo:i.logo,achievements:t,banned:i.channels[o].banned}})})})})})}}})})}),i.post("/member/reset",o,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t?m.findOne({owner:e.user.name}).then(i=>{i&&w.deleteMany({userID:t.id,channelID:i.id}).then(a=>{new y({user:t._id,logo:i.logo,message:"Your achievements have been adjusted by the owner of the channel!",date:Date.now(),type:"achievement",channel:i.owner,status:"new"}).save().then(n=>{x(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:t.name})}),n.json({member:{name:t.name,logo:t.logo,achievements:[]}})})}):n.json({error:"Unexpected error occured"})})}),i.post("/member/ban",o,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t?m.findOne({owner:e.user.name}).then(i=>{if(i){let a=t.channels.findIndex(e=>e.channelID===i.id);a>=0&&(t.channels[a].banned=!0,e.body.resetAchievements&&w.deleteMany({userID:t.id,channelID:i.id}).then(e=>{}),t.save().then(e=>{w.find({userID:t.id,channelID:i.id},["achievementID"]).then(t=>{let i=t.map(e=>e.achievementID);n.json({member:{name:e.name,logo:e.logo,achievements:i,banned:!0}})})}))}}):n.json({error:"Unexpected error occured"})})}),i.post("/member/unban",o,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t?m.findOne({owner:e.user.name}).then(e=>{if(e){let i=t.channels.findIndex(n=>n.channelID===e.id);i>=0&&(t.channels[i].banned=!1,t.save().then(i=>{w.find({userID:t.id,channelID:e.id},["achievementID"]).then(e=>{let t=e.map(e=>e.achievementID);n.json({member:{name:i.name,logo:i.logo,achievements:t,banned:!1}})})}))}}):n.json({error:"Unexpected error occured"})})}),i.get("/user/retrieve",o,(e,n)=>{let t=parseInt(e.query.offset),i=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new l.Types.ObjectId(e.channelID));m.find({_id:{$in:i}}).skip(t).limit(15).exec((i,a)=>{let o=a.map(n=>{e.user.channels.find(e=>e.channelID===n.id);return new Promise((t,i)=>{w.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let i=0;p.countDocuments({channel:n.owner}).then(a=>{a>0&&(i=Math.round(e/a*100)),t({logo:n.logo,owner:n.owner,percentage:i,favorite:!1})})})})});Promise.all(o).then(i=>{t=i.length+t<e.user.channels.length?i.length+t:-1,n.json({channels:i,offset:t})})})}),i.post("/signup",o,(e,n)=>{e.body.uid;let t=new v({uid:e.user._id,token:"not issued"}),i=d.randomBytes(16).toString("hex");t.token=i,t.created=Date.now(),t.save().then(t=>{let a=e.user.email;var o={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},s=c.createTransport({service:"gmail",auth:o});const r={from:process.env.GML,to:a,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">You are ready to start creating achievements that your community will be able to hunt for and earn!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+i+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of achievements, and can\'t wait to see how much your community engages and enjoys them!</p></div>'};s.sendMail(r,function(t,i){t?console.log(t):new y({user:e.user._id,logo:j,message:"Your channel is ready to begin! Go check your email for your confirmation code, and don't forget to check your spam folder!",date:Date.now(),type:"confirmation",status:"new"}).save().then(e=>{}),n.json({message:"email sent"})})})}),i.post("/verify",o,(e,n)=>{let t=e.body.id;v.findOne({uid:e.user._id,token:t}).then(i=>{if(i)if(i.hasExpired())v.deleteOne({uid:e.user._id,token:t}).then(e=>{n.json({expired:!0})}),n.json({expired:!0});else{let i=!1,o=e.user.broadcaster_type,s=e.user.integration.patreon;s&&("forever"===s.type||s.is_gold)&&(i=!0),new m({owner:e.user.name,twitchID:e.user.integration.twitch.etid,theme:"",logo:e.user.logo,members:[],moderators:[],icons:{default:j,hidden:S},oid:a(),overlay:T,nextUID:1,gold:i,broadcaster_type:{twitch:o}}).save().then(a=>{new y({user:process.env.NOTICE_USER,logo:a.logo,message:`${a.owner} just created their channel!`,date:Date.now(),type:"confirmation",status:"new"}).save(),e.user.type="verified",e.user.save().then(a=>{v.deleteOne({uid:e.user._id,token:t}).then(t=>{I(e,{name:a.name,"full-access":i,online:!1}),n.json({verified:!0})})})})}else n.json({error:"Unauthorized"})})}),i.get("/overlay",(e,n)=>{let t=e.query.id;m.findOne({oid:t}).then(e=>{e&&n.json({overlay:e.overlay,icons:e.icons})})}),i.get("/testOverlay",o,(e,n)=>{O(e,{user:e.user.name,channel:e.user.name,title:"Test Achievement",icon:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",unlocked:!0}),n.json({})}),i.post("/reorder",o,(e,n)=>{let t=e.body.achievements;if(t){let i={};t.forEach(e=>{i[e.uid]=e.order}),p.find({channel:e.user.name}).then(e=>{e?(e.forEach(e=>{let n=i[e.uid];e.order&&e.order===n||(e.order=n,e.save())}),n.json({})):n.json({error:"Issue updating achievements. Try again later."})})}else n.json({error:"Unexpected use of the API"})}),i.post("/favorite",o,(e,n)=>{let t=e.body.channel,i=e.body.task;m.findOne({owner:t}).then(t=>{if(t){if("add"===i)e.user.favorites.push(t.id),e.user.save().then(e=>{n.json({favorited:!0,favorites:e.favorites})});else if("remove"===i&&e.user.favorites){var a=e.user.favorites.findIndex(e=>e===t.id);e.user.favorites.splice(a,1),e.user.save().then(e=>{n.json({favorited:!1,favorites:e.favorites})})}}else n.json({error:"Channel doesn't exist!"})})}),i.get("/mod",o,(e,n)=>{m.find({"moderators.uid":e.user._id}).then(e=>{let t=e.map(e=>({owner:e.owner,logo:e.logo}));n.json({channels:t})})}),i.get("/mod/retrieve",s,(e,n)=>{P(e,n,e.channel)});let P=(e,n,t)=>{let i=new Promise((e,n)=>{p.find({channel:t.owner}).then(n=>{if(n){let t=n.map(e=>e.listener);g.find({_id:{$in:t}}).then(t=>{let i=n.map(e=>{let n=t.find(n=>n.id===e.listener);if(n){let t={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:n.code,order:e.order};return n.resubType&&(t.resubType=n.resubType),n.query&&(t.query=n.query),t}return e});i.sort((e,n)=>e.order>n.order?1:-1),e(i)})}else e(n)})});Promise.all([i]).then(e=>{let i;t.oid?t.overlay&&0!==Object.keys(t.overlay).length?(delete(i={...t._doc}).__v,delete i._id,n.json({channel:i,achievements:e[0]})):(t.overlay=T,t.save().then(t=>{delete(i={...t._doc}).__v,delete i._id,n.json({channel:i,achievements:e[0]})})):(t.oid=a(),t.overlay&&0!==Object.keys(t.overlay).length||(t.overlay=T),t.save().then(t=>{delete(i={...t._doc}).__v,delete i._id,n.json({channel:i,achievements:e[0]})}))})};e.exports=i},function(e,n){e.exports=require("crypto")},function(e,n){e.exports=require("nodemailer")},function(e,n){e.exports=require("valid-data-url")},function(e,n){e.exports=require("cloudinary")},function(e,n){e.exports={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2}},function(e,n,t){const i=t(3).Router(),a=(t(5),t(15)),o=t(13),s=t(1),r=t(2),l=t(10),d=t(12),c=t(6),h=t(14),u=t(7),{isAuthorized:m,isModAuthorized:p}=t(9),{emitNewListener:g,emitUpdateListener:f,emitRemoveListener:v,emitAwardedAchievement:y,emitAwardedAchievementNonMember:w,emitOverlayAlert:b,emitNotificationsUpdate:_}=t(8),{build:I}=t(41),D=t(16).uploadImage,O="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png";t(0);let x=(e,n)=>{let t={_id:e._id,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,achType:n.achType,condition:n.condition};return n.query&&(t.query=n.query),t},j=(e,n,t,i,o,s)=>new Promise((r,c)=>{let u;(u=s?new Promise((e,n)=>{h.findOne({achievementID:t._id}).then(n=>{n?(n.achievementID="",n.save().then(()=>{s.achievementID=t._id,s.save().then(n=>{e()})})):(s.achievementID=t._id,s.save().then(n=>{e()}))})}):Promise.resolve()).then(()=>{l.findOneAndUpdate({_id:t._id},{$set:i},{new:!0}).then(i=>{if(Object.keys(o).length>0)if(o.achType&&"3"===o.achType&&i.listener)d.findOne({_id:i.listener}).then(t=>{t&&(v(e,{uid:t.uid,channel:n,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition}),d.deleteOne({_id:i.listener}).then(e=>{i.listener=void 0,i.save().then(e=>{r({update:!0,achievement:e})})}))});else if(o.achType&&"3"!==o.achType&&!t.listener){let t={channel:n,uid:a(),...o,achievement:i.id,aid:i.uid};new d(t).save().then(n=>{g(e,{uid:n.uid,channel:n.channel,achievement:n.achievement,achType:n.achType,query:n.query,bot:n.bot,condition:n.condition}),i.listener=n.id,i.save().then(e=>{r({created:!0,achievement:e})})})}else d.findOneAndUpdate({_id:i.listener},{$set:o},{new:!0}).then(t=>{if(t){f(e,{uid:t.uid,channel:n,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition});let a=x(i,t);r({update:!0,achievement:a})}else r({update:!1})});else d.findOne({_id:i.listener}).then(e=>{let n=x(i,e);r({update:!0,achievement:n})})})})}),S=e=>new Promise((n,t)=>{h.find({channel:e,type:"achievement"}).then(e=>{if(e){let t={active:[],inactive:[]};e.map(e=>{e.achievementID&&""!==e.achievementID?t.active.push(e):t.inactive.push(e)}),n(t.active.concat(t.inactive))}else n([])})});i.post("/mod/update",p,(e,n)=>{k(e,n,e.channel,!0)}),i.post("/update",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?k(e,n,t,!1):n.json({update:!1,message:"The channel you tried to update the achievement for doesn't exist!"})})});let k=(e,n,t,i)=>{l.findOne({_id:e.body.id,channel:t.owner}).then(i=>{if(i){let a=e.body,{achType:o,query:s,bot:r,condition:l}=a,d={};o&&(d.achType=o,delete a.achType),s&&(d.query=s,delete a.query),r&&(d.bot=r,delete a.bot),l&&(d.condition=l,delete a.condition),a.icon&&a.iconName?D(a.icon,a.iconName,t.owner).then(o=>{a.icon=o.url,j(e,t.owner,i,a,d,o).then(e=>{n.json(e)})}):j(e,t.owner,i,a,d).then(e=>{n.json(e)})}else n.json({update:!1,message:"The achievement you tried to update doesn't exist!"})})};i.post("/mod/create",p,(e,n)=>{T(e,n,e.channel,!0)}),i.post("/create",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?T(e,n,t,!1):n.json({created:!1,message:"This channel you are creating for doesn't exist!"})})});let T=(e,n,t,i)=>{let o={};e.body.id?o._id=e.body.id:o.title=e.body.title,o.channel=t.owner,"4"!==e.body.achType||t.gold?s.findOne({name:t.owner}).then(i=>{let s=i.integration.streamlabs;"5"!==e.body.achType&&"6"!==e.body.achType||s?l.findOne(o).then(i=>{i?n.json({created:!1,message:"An achievement with this name already exists!",achievement:i}):l.countDocuments({channel:t.owner}).then(i=>{let o={uid:t.nextUID,channel:t.owner,title:e.body.title,description:e.body.description,icon:e.body.icon,earnable:e.body.earnable,limited:e.body.limited,secret:e.body.secret,listener:e.body.listener,alert:e.body.alert||!0,order:i},s={channel:t.owner,achType:e.body.achType,uid:a()};s.condition=e.body.condition,"4"===s.achType&&(s.bot=e.body.bot,s.query=e.body.query),d.findOne(s).then(i=>{i?l.findOne({listener:i._id}).then(e=>{n.json({created:!1,message:'The conditions you selected are already taken by the "'+e.title+'" achievement!'})}):e.body.icon?D(e.body.icon,e.body.iconName,t.owner).then(i=>{o.icon=i.url,new l(o).save().then(a=>{s.achievement=a.id,s.aid=a.uid,i.achievementID=a.id,i.save().then(i=>{t.nextUID=a.uid+1,t.save().then(t=>{"3"!==e.body.achType?new d(s).save().then(t=>{g(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),a.listener=t.id,a.save().then(e=>{n.json({created:!0,achievement:e})})}):n.json({created:!0,achievement:a})})})})}):new l(o).save().then(i=>{s.achievement=i.id,s.aid=i.uid,t.nextUID=i.uid+1,t.save().then(t=>{"3"!==e.body.achType?new d(s).save().then(t=>{g(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),i.listener=t.id,i.save().then(e=>{n.json({created:!0,achievement:e})})}):n.json({created:!0,achievement:i})})})})})}):n.json({created:!1,message:"This type of achievement requires Streamlabs integration! Head over to your Profile and connect!"})}):n.json({created:!1,message:"This type of achievement is for Stream Achievements Gold! Sync your Patreon if your account is, or reach out on Discord!"})};i.post("/delete",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{if(t){let i={};i._id=e.body.achievementID,i.channel=t.owner,l.findOne(i).then(a=>{if(a){let o=a.listener,s=a.uid;l.deleteOne(i).then(i=>{let r={_id:o,channel:a.channel};d.findOne(r).then(i=>{i?(v(e,{uid:i.uid,channel:t.owner,achievement:i.achievement,achType:i.achType,query:i.query,bot:i.bot,condition:i.condition}),d.deleteOne(r).then(i=>{h.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{u.deleteMany({channelID:t.id,achievementID:s}).then(e=>{n.json({deleted:!0})})})})):h.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{u.deleteMany({channelID:t.id,achievementID:s}).then(e=>{n.json({deleted:!0})})})})})}else n.json({deleted:!1,message:"The achievement you requested to delete doesn't exist!"})})}else n.json({delete:!1,message:"This channel you are deleting for doesn't exist!"})})}),i.get("/mod/retrieve",p,(e,n)=>{let t=e.query.aid;C(e,n,e.channel,t)}),i.get("/retrieve",m,(e,n)=>{let t=e.user.name,i=e.query.aid;i?r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?C(e,n,t,i):n.json({error:"User isn't a verified channel owner"})}):t&&l.find({channel:t}).then(e=>{if(e){let t=e.map(e=>e.listener);d.find({_id:{$in:t}}).then(t=>{e.forEach(e=>{let n=t.find(n=>n._id=e.listener);return delete n._id,Object.assign(e,n)}),n.json(e)})}else n.json(e)})});let C=(e,n,t,i)=>{let a=new Promise((e,n)=>{l.findOne({uid:i,channel:t.owner}).then(n=>{if(n){n.listener;d.findOne({_id:n.listener,channel:n.channel}).then(t=>{if(t){let i=Object.assign({},t._doc),a=Object.assign({},n._doc);delete i._id;let o=Object.assign(a,i);e(o)}else e(n)})}else e(null)})}),o=S(t.owner),s=$(t.owner,t.gold);Promise.all([a,o,s]).then(i=>{n.json({achievement:i[0],images:i[1],defaultIcons:t.icons,isGoldChannel:e.channel&&e.channel.gold,customAllowed:i[2]})})};i.post("/mod/award",p,(e,n)=>{E(e,n,e.channel)}),i.post("/award",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{E(e,n,t)})});let P=(e,n)=>{let t,i=e.overlay;return t=i.chatMessage&&""!==i.chatMessage?I({chatMessage:i.chatMessage,member:n.member,achievement:n.achievement}):`${n.member} just earned the "${n.achievement}" achievement! PogChamp`,{channel:e.owner,message:t}},E=(e,n,t)=>{let i,a=e.body.members,o=e.body.aid,r=Date.now(),d=!1,h=a.findIndex(e=>!0===e.nonMember);h>=0&&(i=a.splice(h,1)[0]),l.findOne({uid:o,channel:t.owner}).then(o=>{a=a.map(e=>e.name),s.find({name:{$in:a}}).then(a=>{a.length>0?u.find({channelID:t.id,achievementID:o.uid}).limit(1).exec((s,l)=>{d=0===l.length,a.map((n,i)=>{let a={userID:n.id,channelID:t.id,achievementID:o.uid};u.findOne(a).then(i=>{i||new u({...a,earned:Date.now(),first:d}).save().then(i=>{if(d=!1,t.overlay.chat){let i={channel:t.owner,member:n.name,achievement:o.title};y(e,P(t,i))}new c({user:n._id,logo:t.logo,message:`You have earned the "${o.title}" achievement!`,date:r,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{_(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})});let a=o.alert||!0,s=!1;t.gold&&(s=!0),a&&b(e,{user:n.name,channel:t.owner,title:o.title,icon:o.icon,unlocked:s})})})}),i&&A(e,n,t,o,i),n.json({award:!0})}):(i&&A(e,n,t,o,i),n.json({award:!0}))})})},A=(e,n,t,i,a)=>{let r=Date.now(),l=!1;s.findOne({name:a.name}).then(n=>{if(n)if(n.preferences.autojoin)try{n.channels.push({channelID:t.id,banned:!1}),n.save().then(a=>{t.members.push(a.id),t.save().then(o=>{u.find({channelID:t.id,achievementID:i.uid}).limit(1).exec((o,s)=>{l=0===s.length;let d={userID:n.id,channelID:t.id,achievementID:i.uid};u.findOne(d).then(n=>{n||new u({...d,earned:Date.now(),first:l}).save().then(n=>{new c({user:a._id,logo:t.logo,message:`You have earned the "${i.title}" achievement!`,date:r,type:"achievement",channel:t.owner,status:"new"}).save().then(n=>{_(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:a.name}),M(e,t,a,i)})})})})})})}catch(e){new c({user:process.env.NOTICE_USER,logo:O,message:`Issue awarding ${t.owner}'s '${i.title}' to ${n.name}`,date:r,type:"admin",status:"new"}).save(),s.findOne({name:t.owner}).then(e=>{new c({user:e._id,logo:O,message:`Issue awarding '${i.title}' to ${n.name}! We are looking into the issue, feel free to manually award the achievement!`,date:r,type:"admin",status:"new"}).save()})}else u.find({channelID:t.id,achievementID:i.uid}).limit(1).exec((a,o)=>{l=0===o.length;let s={userID:n.id,channelID:t.id,achievementID:i.uid};u.findOne(s).then(a=>{a||new u({...s,earned:Date.now(),first:l}).save().then(a=>{new c({user:n._id,logo:t.logo,message:`You have earned the "${i.title}" achievement!`,date:r,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{_(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})}),M(e,t,n,i)})})});else{let n,s,r={};n=`https://api.twitch.tv/helix/users/?login=${a.name}`,(s=new Promise((e,t)=>{o.get(n,{headers:{"Client-ID":process.env.TCID}}).then(n=>{n.data&&n.data.data&&n.data.data[0]&&(r.userID=n.data.data[0].id,r.name=n.data.data[0].login),e()})})).then(()=>{r.userID&&r.name&&u.find({channelID:t.id,achievementID:i.uid}).limit(1).exec((n,a)=>{l=0===a.length;let o={userID:r.userID,channelID:t.id,achievementID:i.uid};u.findOne(o).then(n=>{n||new u({...o,earned:Date.now(),first:l}).save().then(n=>{if(t.overlay.chat){let n={channel:t.owner,member:r.name,achievement:i.title};w(e,P(t,n))}let a=i.alert||!0,o=!1;t.gold&&(o=!0),a&&b(e,{user:r.name,channel:t.owner,title:i.title,icon:i.icon,unlocked:o})})})})})}})};i.get("/mod/icons",p,(e,n)=>{q(e,n,e.channel,!0)}),i.get("/icons",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?q(e,n,t,!1):n.json({error:!0})})});let q=(e,n,t,i)=>{S(t.owner).then(e=>{let a={images:e.map(e=>{let n={...e._doc};return delete n.__v,delete n._id,n}),defaultIcons:t.icons};i&&(a.isGoldChannel=t.gold),$(t.owner,t.gold).then(e=>{a.customAllowed=e,n.json(a)})})},$=(e,n)=>n?Promise.resolve(!0):new Promise((n,t)=>{d.find({channel:e,achType:"4"}).then(e=>{e&&e.length>0?n(!1):n(!0)})});i.get("/listeners",(e,n)=>{let t=e.query.channel;Array.isArray(t)||(t=t.split(",")),l.find({owner:{$in:t}}).then(e=>{e.map(e=>{if(e.earnable&&e.listener)return e.listener})}),d.find({channel:{$in:t}}).then(e=>{e.length>0?n.json(e):n.json([])})}),i.post("/award/chat",(e,n)=>{let{achievement:t,channel:i,target:a,user:o}=e.body,l=!1;t&&i&&a&&o&&r.findOne({owner:i}).then(r=>{if(r&&r.gold){if(o===i)l=!0;else{let e=r.moderators.map(e=>e.uid);s.find({_id:{$in:e}},"name").then(e=>{if(e){e.findIndex(e=>e.name===o)>=0&&(l=!0)}})}if(l){let o={title:t,channel:i},s={name:a.toLowerCase()};R(e,n,r,o,s)}}})});let M=(e,n,t,i)=>{if(n.overlay.chat){let a={channel:n.owner,member:t.name,achievement:i.title};y(e,P(n,a))}let a=i.alert||!0,o=!1;n.gold&&(o=!0),a&&b(e,{user:t.name,channel:n.owner,title:i.title,icon:i.icon,unlocked:o})},N=(e,n,t,i,a,o)=>{let s=i.id?i.id:i.userID;if(n&&"1000"!==n){let a=[];"2000"===n?(a.push("1000"),a.push("2000")):"3000"===n&&(a.push("1000"),a.push("2000"),a.push("3000")),d.find({achType:"0",condition:{$in:a},channel:t.owner}).then(n=>{let a=[];if(n){new Promise((e,i)=>{let o=n.map(e=>e.aid);u.find({userID:s,channelID:t.id,achievementID:{$in:o}}).then(n=>{n&&n.length>0&&n.forEach(e=>{let n=o.findIndex(n=>n===e.achievementID);n>=0&&o.splice(n,1)}),a=o,e()})}).then(()=>{a.length>0&&l.find({channel:t.owner,uid:{$in:a}}).then(n=>{n?n.forEach(n=>{B(e,i,t,n,!1)}):console.log("achievements not found")})})}})}},B=(e,n,t,i,a,o=!0)=>new Promise((s,r)=>{let l=Date.now();u.find({channelID:t.id,achievementID:i.uid}).limit(1).exec((r,d)=>{let h={userID:n.id?n.id:n.userID,channelID:t.id,achievementID:i.uid};u.findOne(h).then(r=>{r?(a&&(N(e,a,t,n),U(e,n,t,i,a)),s(!1)):new u({...h,earned:l,first:0===d.length}).save().then(r=>{o&&(n.integration&&new c({user:n._id,logo:t.logo,message:`You have earned the "${i.title}" achievement!`,date:l,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{_(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})}),M(e,t,n,i)),a&&(N(e,a,t,n),U(e,n,t,i,a)),s(!0)})})})}),R=(e,n,t,i,a,r,d=2)=>{let h=new Date;l.findOne(i).then(l=>{l&&l.earnable&&s.findOne(a).then(u=>{if(u){let o=u.channels.findIndex(e=>e.channelID===t.id);if(o>=0&&!u.channels[o].banned)try{B(e,u,t,l,r)}catch(o){if(d>0){R(e,n,t,i,a,r,d-1)}else new c({user:process.env.NOTICE_USER,logo:O,message:`Issue awarding ${t.owner}'s '${l.title}' to ${u.name}`,date:h,type:"admin",status:"new"}).save(),s.findOne({name:t.owner}).then(e=>{new c({user:e._id,logo:O,message:`Issue awarding '${l.title}' to ${u.name}! We are looking into the issue, feel free to manually award the achievement!`,date:h,type:"admin",status:"new"}).save()})}else if(console.log("couldn't find the channel"),u.preferences.autojoin)try{u.channels.push({channelID:t.id,banned:!1}),u.save().then(n=>{t.members.push(n.id),t.save().then(t=>{B(e,n,t,l,r)})})}catch(o){if(d>0){R(e,n,t,i,a,r,d-1)}else new c({user:process.env.NOTICE_USER,logo:O,message:`Issue awarding ${t.owner}'s '${l.title}' to ${u.name}`,date:h,type:"admin",status:"new"}).save(),s.findOne({name:t.owner}).then(e=>{new c({user:e._id,logo:O,message:`Issue awarding '${l.title}' to ${u.name}! We are looking into the issue, feel free to manually award the achievement!`,date:h,type:"admin",status:"new"}).save()})}else B(e,u,t,l,r)}else{let n,i,s={};a.name?n=`https://api.twitch.tv/helix/users/?login=${a.name}`:a["integration.twitch.etid"]&&(n=`https://api.twitch.tv/helix/users/?id=${a["integration.twitch.etid"]}`),(i=n?new Promise((e,t)=>{o.get(n,{headers:{"Client-ID":process.env.TCID}}).then(n=>{n.data&&n.data.data&&n.data.data[0]&&(s.userID=n.data.data[0].id,s.name=n.data.data[0].login),e()})}):Promise.resolve()).then(()=>{s.userID&&s.name&&B(e,s,t,l,r)})}})})};i.post("/listeners",(e,n)=>{console.log("achievements to process...");let t=e.body,i=(new Date,{});t.forEach(e=>{i[e.channel]=i[e.channel]||[],i[e.channel].push(e)}),Object.keys(i).forEach(t=>{r.findOne({owner:t}).then(a=>{if(a){console.log("Issuing achievements for "+a.owner+" channel:"),i[t].forEach(t=>{let{channel:i,achievementID:o,tier:s,userID:r}=t,l={};t.userID||t.user;if(r)l["integration.twitch.etid"]=r;else if(t.user){let e=t.user;0===e.indexOf("@")&&(e=e.substr(1)),l.name=e.toLowerCase()}else console.log("<<<< No user came from IRC >>>>");R(e,n,a,{_id:o},l,s)})}})}),n.json({})});let U=(e,n,t,i,a)=>{d.find({achType:{$in:["0","1"]},channel:t.owner}).then(o=>{if(o){let s=o.findIndex(e=>e.achievement===i.id);if(s>=0){let i=o.splice(s,1)[0],r=i.achType,l=i.condition,d=[];if("1"===r&&(o.forEach(e=>{"0"===e.achType?parseInt(e.condition)<=parseInt(a)&&d.push(e):parseInt(e.condition)<=parseInt(l)&&d.push(e)}),d.length>0)){let i=[];d.forEach(a=>{i.push(B(e,n,t,{uid:a.aid},!1,!1))}),Promise.all(i).then(i=>{let o=!1;i.forEach(e=>{e&&(o=e)}),o&&a&&n._id&&new c({user:n._id,logo:t.logo,message:"Your previous subs have been backfilled!",date:new Date,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{_(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})})})}}}})};e.exports=i},function(e,n){let t={"{user}":"member","{achievement}":"achievement"};e.exports={build:e=>{console.log(e);let n=Object.keys(t),i=e.chatMessage;return i=(e=>e.replace(/[.*+?^$()|[\]\\]/g,"\\$&"))(i),n.forEach(n=>{i=i.replace(new RegExp(n,"gi"),e[t[n]])}),i}}},function(e,n,t){const i=t(3).Router(),a=t(1),o=t(12),s=(t(11),t(43));t(0);i.get("/init",(e,n)=>{s.findOne().then(e=>{e?n.json({at:e.at,rt:e.rt,last:e.last,expires_in:e.expires_in}):n.json({success:!1})})}),i.put("/init",(e,n)=>{s.findOne().then(t=>{t?(t.at=e.body.at,t.rt=e.body.rt,t.last=Date.now(),t.expires_in=e.body.expires_in,t.save().then(e=>{n.json({success:!0})})):new s({at:e.body.at,rt:e.body.rt,last:Date.now(),expires_in:e.body.expires_in}).save().then(e=>{n.json({success:!0})})})}),i.get("/channels",(e,n)=>{let t=parseInt(e.query.offset)||0,i=parseInt(e.query.limit)||50,o=parseInt(e.query.total)||void 0;o?l(t,i,o).then(e=>{e.err?(n.status(500),n.json({channels:[],err:e.err})):n.json(e)}):o=a.estimatedDocumentCount().exec().then(e=>{l(t,i,o=e).then(e=>{e.err?(n.status(500),n.json({channels:[],err:e.err})):n.json(e)})})}),i.get("/listeners",(e,n)=>{let t=parseInt(e.query.offset)||0,i=parseInt(e.query.limit)||50,a=parseInt(e.query.total)||void 0;a?r(t,i,a).then(e=>{e.err?(n.status(500),n.json({listeners:[],error:e.err})):n.json(e)}):a=o.estimatedDocumentCount().exec().then(e=>{r(t,i,a=e).then(e=>{e.err?(n.status(500),n.json({listeners:[],error:e.err})):n.json(e)})})});let r=(e,n,t)=>new Promise((i,a)=>{o.find().sort({_id:-1}).skip(e).limit(n).exec((a,o)=>{if(a)i({err:"Issue retrieving from Listener sets"});else{let a=o.map(e=>({channel:e.channel,achievement:e.achievement,achType:e.achType,resubType:e.resubType,query:e.query,bot:e.bot,condition:e.condition})),s={listeners:a,total:t};a.length===n&&(s.offset=e+a.length),i(s)}})}),l=(e,n,t)=>new Promise((i,o)=>{a.find({$or:[{type:"verified"},{type:"admin"}]}).sort({_id:-1}).skip(e).limit(n).exec((a,o)=>{if(a)i({err:"Issue retrieving from User sets"});else{let a=o.map(e=>{let n={name:e.name,full_access:!1},{patreon:t,streamlabs:i}=e.integration;return t&&(t.forever||t.is_gold)&&(n["full-access"]=!0),i&&(n.bot={bot:"streamlabs",st:i.st}),n}),s={channels:a,total:t};a.length===n&&(s.offset=e+a.length),i(s)}})});e.exports=i},function(e,n,t){const i=t(0);var a=new(0,i.Schema)({at:String,rt:String,last:Date,expires_in:Number});const o=i.model("irc",a);e.exports=o},function(e,n,t){const i=t(3).Router(),a=t(13),o=t(1),s=t(12),r=(t(11),t(45)),l=t(2),d=t(6),c=t(10),h=t(7),{isAdminAuthorized:u}=(t(0),t(9)),{emitOverlayAlert:m}=t(8);async function p(e,n){for(let t=0;t<e.length;t++)await n(e[t],t,e)}async function g(e,n,t){return new Promise((i,a)=>{let o={userID:e._id,channelID:n.channelID,achievementID:t.aid};new Promise((e,n)=>{setTimeout(e,500)}).then(async()=>{await h.findOne(o)?(console.log("entry exists in table"),i()):(console.log("not there"),o.earned=t.earned,console.log(o),new h(o).save().then(e=>{i(e)}))})})}i.post("/dedupMembers",u,(e,n)=>{l.findOne({owner:"phirehero"}).then(e=>{console.log(e.members);let n=e.members;console.log(n);let t=[];o.find({_id:{$in:n}}).sort({name:1}).exec((e,i)=>{i.forEach(e=>{let i=n.splice(n.indexOf(e.id),1);t.push(i[0])}),console.log(t),console.log(t.length)})})}),i.post("/dedup",u,(e,n)=>{o.find({}).then(e=>{e.forEach(e=>{console.log("dedup for "+e.name+"...");let n=[];e.channels.forEach(e=>{console.log(">>> checking channel: "+e.channelID);let t=e.achievements;console.log(t);let i=t.filter((e,n,t)=>t.findIndex(n=>n.aid===e.aid)===n);if(i.length!==t.length&&console.log(">>>>>> duplicates found: "+(t.length-i.length)),i.length>0){console.log("\n"),console.log(e),console.log("--------------------------------------------");let t={...e._doc,achievements:i};console.log(t),n.push(t)}else n.push(e)}),e.channels=n,e.save()})})}),i.post("/fixit",u,(e,n)=>{c.find({}).then(e=>{e&&e.forEach(e=>{e.listener&&s.findById(e.listener).then(n=>{n&&(console.log("updating: "+e.channel+": "+e.title),n.aid=e.uid,n.achievement=e.id,n.save())})})})}),i.post("/flush",u,(e,n)=>{r.find({}).then(e=>{e.length>0?e.forEach(e=>{try{console.log("finding "+e.channelID+" channel"),l.findOne({owner:e.channelID}).then(n=>{n?e&&e.achievementID&&c.findOne({uid:parseInt(e.achievementID),channel:n.owner}).then(t=>{t?o.findOne({"integration.twitch.etid":e.twitchID}).then(i=>{if(i){console.log("we found "+i.name);let a=i.channels,o=a.findIndex(e=>e.channelID===n.id);if(o>=0){a[o].achievements.filter(e=>{e.aid,t.uid})?(console.log(i.name+"already has "+t.title+". Delete it"),r.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)})):(console.log("achievement will be awarded to "+i.name),i.channels[o].achievements.push({aid:t.uid,earned:e.earned||Date.now()}),console.log("deleting entry"),console.log(e),r.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)}),i.save())}else console.log(i.name+"hasn't joined "+n.owner+"'s channel yet")}else console.log("no user")}):console.log("no achievement")}):console.log("no channel")})}catch(n){console.log(n),console.log("cast issue for "+e.channelID)}}):console.log("nothing in queue")})}),i.post("/fixpreferences",u,(e,n)=>{l.find({}).then(e=>{e&&e.forEach(e=>{e.overlay={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2},e.save().then(e=>{console.log("updated "+e.owner+"'s channel overlay")})})})}),i.post("/overlay",u,(e,n)=>{m(e,{user:e.user.name,channel:e.user.name,title:"I can show you the world",icon:"https://res.cloudinary.com/phirehero/image/upload/v1562881653/u9astg4olsdtfm2rjhxu.png",unlocked:!0})}),i.post("/sync",u,(e,n)=>{o.find({}).then(e=>{e&&e.forEach(e=>{let n=[],t=e.channels;t&&(t.forEach(e=>{let t={...e._doc,sync:!0};n.push(t)}),e.channels=n,e.save())})})}),i.post("/alertSync",u,(e,n)=>{c.find({}).then(e=>{e&&e.forEach(e=>{e.alert=!0,e.save()})})}),i.post("/testTable",u,(e,n)=>{h.find({channelID:"5d068493b87afc2f80cf21d5",achievementID:12}).limit(1).exec((e,n)=>{console.log(n)})}),i.post("/notice",u,(e,n)=>{new d({user:"5cfc5f04a33c32ad539abe0c",logo:"https://static-cdn.jtvnw.net/jtv_user_pictures/thorlar-profile_image-4bd4d7b82e71afc3-300x300.jpeg",message:'You earned the "Noisy Viking" Achievement!',date:Date.now()}).save().then(e=>{console.log(e),n.json(e)})}),i.post("/tier2",u,(e,n)=>{a({method:"post",url:"/api/achievement/listeners",data:[{channel:"phirehero",achievementID:"5d7661fa447cce56ece85ef8",tier:"2000",userID:"70967393"}]})}),i.post("/migrate",u,(e,n)=>{!async function(){let e,n,t=0,i=0;t=await o.countDocuments(),console.log("Migrating data for "+t+" members...");for(;i<t;)e=0,console.log("\n\nMigrating "+i+" - "+(i+25-1)+"...\n"),n=await o.find().sort({_id:-1}).skip(i).limit(25).exec(),await p(n,async e=>{let n=e.channels;console.log("> Migrating "+n.length+" channels for "+e.name),await p(n,async n=>{let t=n.achievements,i=0;console.log("  > "+t.length+" achievements found for channel: "+n.channelID),await p(t,async t=>{try{await g(e,n,t);console.log("    > Migrated "+t.aid+"!"),i+=1}catch(e){console.log(e),console.log("[31m    (!) Error occurred migrating entry. achievementID: "+t.aid+", channelID: "+n.channelID+"[0m")}}),i===t.length?console.log("[32m    > Migrated achievements successfully for channelID: "+n.channelID+"[0m"):console.log("[33m    > Not all achievements migrated successfully for channelID: "+n.channelID+"! Count awarded: "+i+"[0m")})}),i+=25}()}),e.exports=i},function(e,n,t){const i=t(0),a=new(0,i.Schema)({twitchID:String,name:String,channelID:String,achievementID:Number,earned:Date}),o=i.model("queue",a);e.exports=o}]);