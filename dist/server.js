!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=16)}([function(e,t){e.exports=require("mongoose")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({name:String,twitchID:String,logo:String,email:String,type:String,broadcaster_type:String,channels:[{channelID:String,achievements:[{aid:Number,earned:Date}],sync:Boolean}],integration:{twitch:Object,patreon:Object},preferences:{autojoin:Boolean},lastLogin:Date}),s=i.model("user",o);e.exports=s},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("passport")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({owner:String,twitchID:String,theme:String,logo:String,members:Array,icons:{default:String,hidden:String},oid:String,overlay:{chat:Boolean,chatMessage:String,sfx:String,enterEffect:String,exitEffect:String,duration:Number,volume:Number,delay:Number},gold:Boolean,nextUID:Number}),s=i.model("channel",o);e.exports=s},function(e,t,n){const i=n(1),o=new(n(6))(process.env.SCK);e.exports={authCheck:(e,t,n)=>{e.user?n():t.redirect("/auth/twitch")},isAuthorized:async(e,t,n)=>{if(e.cookies.etid){let s=o.decrypt(e.cookies.etid),a=await i.findOne({"integration.twitch.etid":s});a?(e.user=a,t.cookie("etid",e.cookies.etid,{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),n()):(t.clearCookie("etid"),t.status(401),t.redirect(process.env.WEB_DOMAIN))}else t.status(401),t.redirect(process.env.WEB_DOMAIN)},isAdminAuthorized:async(e,t,n)=>{let s=o.decrypt(e.cookies.etid),a=await i.findOne({"integration.twitch.etid":s});a&&(a.type="admin")?(e.user=a,t.cookie("etid",e.cookies.etid,{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),n()):(t.status(401),t.json({message:"You are not authorized to make this request."}),n())}}},function(e,t){e.exports=require("cryptr")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({uid:Number,channel:String,title:String,description:String,icon:String,earnable:Boolean,limited:Boolean,secret:Boolean,listener:String,first:String,earned:Date,alert:Boolean}),s=i.model("achievement",o);e.exports=s},function(e,t,n){const i=n(0);var o=new(0,i.Schema)({uid:String,token:String,created:Date});o.methods.hasExpired=function(){return Date.now()-Date.parse(this.created)>2592e5};const s=i.model("token",o);e.exports=s},function(e,t,n){const i=n(0),o=i.Schema,s=new o({uid:String,channel:String,achType:String,resubType:String,bot:String,query:o.Types.Mixed,condition:String,achievement:String,aid:Number}),a=i.model("listener",s);e.exports=a},function(e,t){e.exports={emitNewChannel:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");console.log(t),n.to(i).emit("new-channel",{name:t.name,"full-access":t["full-access"],connected:!1})},emitNewListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("new-listener",t)},emitUpdateListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("update-listener",t)},emitRemoveListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");console.log(i),n.to(i).emit("remove-listener",t)},emitBecomeGold:e=>{let t=e.app.get("ws"),n=e.app.get("IRCSOCKET");t.to(n).emit("become-gold",{})},emitRemoveGold:e=>{let t=e.app.get("ws"),n=e.app.get("IRCSOCKET");t.to(n).emit("remove-gold",{})},emitAwardedAchievement:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("achievement-awarded",t)},emitAwardedAchievementNonMember:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("achievement-awarded-nonMember",t)},emitTestListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("test",t)},emitOverlayAlert:(e,t)=>{let n=e.app.get("ws"),i=e.app.get(t.channel+"-OVERLAYS");console.log(t),i&&i.forEach(e=>{console.log("emitting to "+t.channel+": "+e),n.to(e).emit("alert-recieved",t)})},emitOverlaySettingsUpdate:(e,t)=>{let n=e.app.get("ws"),i=e.app.get(t.channel+"-OVERLAYS");i&&i.forEach(e=>{n.to(e).emit("update-settings",t.overlay)})}}},function(e,t,n){const i=n(0),o=new(0,i.Schema)({name:String,type:String,channel:String,cloudID:String,url:String,achievementID:String}),s=i.model("image",o);e.exports=s},function(e,t,n){const i=n(0),o=new(0,i.Schema)({twitchID:String,name:String,channelID:String,achievementID:Number,earned:Date}),s=i.model("queue",o);e.exports=s},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("uuid/v1")},function(e,t,n){const i=n(11);let o=n(36).v2;o.config({cloud_name:process.env.CLDNAME,api_key:process.env.CLDKEY,api_secret:process.env.CLDS});e.exports={uploadImage:(e,t,n,s)=>{return new Promise((a,r)=>{i.findOne({name:t,channel:n}).then(l=>{l?(console.log("\nimage already exists"),a(l)):(console.log("\nnew image"),o.uploader.upload(e,(e,o)=>{e?(console.log(e),r({error:e})):(console.log("\nimage uploaded successfully"),new i({name:t,channel:n,cloudID:o.public_id,url:o.url,type:s||"achievement"}).save().then(e=>{console.log("new image in DB"),a(e)}))}))})})},destroyImage:e=>new Promise((t,n)=>{o.uploader.destroy(e,function(e){t(e)})})}},function(e,t,n){e.exports=n(17)},function(e,t,n){(function(e){const t=n(2),i=n(18),o=n(0),s=(n(19),n(3)),a=(n(20),n(21),n(23)),r=n(24),l=n(25).allowAccess,{searchChannels:c,storeSocket:d,removeSocket:h}=n(26);let u=n(27),m=n(28),p=n(31);const g=process.env.PORT||5e3;let f=t();f.set("view engine","ejs"),f.use(a()),f.use(r({limit:"50mb",extended:!0})),o.connect(process.env.MDB,{useNewUrlParser:!0},()=>{console.log("connected to mongodb")}),f.use(s.initialize()),f.use(s.session()),f.use(t.static("public")),f.use("/auth",[l],m),f.use("/api",[l],p),f.use(t.static(i.join(e,"client/build")));let v;f.listen(g);v=u.listen(process.env.SOCKET_PORT),f.set("ws",v),v.on("connection",function(e){console.log("connected:",e.client.id),e.handshake&&e.handshake.query&&e.handshake.query.uid&&d(e,f),e.on("handshake",function(t){if(t.name="SAIRC")f.set("IRCSOCKET",e.id);else if(t.web){let n=f.get("USERSOCKETS");n?n[t.user]=e.id:((n={})[t.user]=e.id,f.set("USERSOCKETS",n))}}),e.on("search-directory",t=>{console.log(t),c(e,t)}),e.on("disconnect",()=>{h(e,f)})}),console.log(`Express app listening on port ${g}`)}).call(this,"/")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("cookie-session")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({socketID:String,name:String}),s=i.model("socket",o);e.exports=s},function(e,t,n){const i=n(3),o=n(22).Strategy,s=n(1),a=new(n(6))(process.env.SCK);i.serializeUser((e,t)=>{t(null,e)}),i.use(new o({clientID:process.env.TCID,clientSecret:process.env.TCS,callbackURL:process.env.TPR},(e,t,n,i)=>{let o=a.encrypt(e),r=a.encrypt(t),l={etid:n.id.toString(),token:o,refresh:r};s.findOne({"integration.twitch.etid":l.etid}).then(e=>{e?(e.integration.twitch=l,e.name!==n.login&&(e.name=n.login),e.logo!==n.profile_image_url&&(e.logo=n.profile_image_url),e.email!==n.email&&(e.email=n.email),e.broadcaster_type!==n.broadcaster_type&&(e.broadcaster_type=n.broadcaster_type),e.save().then(t=>{console.log("found user, logging in..."),i(null,e)})):new s({name:n.login,logo:n.profile_image_url,email:n.email,type:"user",channels:[],integration:{twitch:l},preferences:{autojoin:!0}}).save().then(e=>{i(null,e)})})}))},function(e,t){e.exports=require("passport-twitch.js")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("body-parser")},function(e,t,n){e.exports={allowAccess:async(e,t,n)=>{var i;i=["http://www.streamachievements.com","http://streamachievements.com","https://www.streamachievements.com","https://streamachievements.com"];var o=e.headers.origin;i.indexOf(o)>-1&&t.setHeader("Access-Control-Allow-Origin",o),t.header("Access-Control-Allow-Credentials",!0),t.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),n()}}},function(e,t,n){const i=n(4);e.exports={searchChannels:(e,t)=>{let n=new RegExp(t,"gi");i.find({owner:n}).sort({_id:-1}).limit(25).exec((t,n)=>{console.log(t);let i=n.map(e=>({owner:e.owner,logo:e.logo}));e.emit("channel-results",i)})},storeSocket:(e,t)=>{i.findOne({oid:e.handshake.query.uid}).then(n=>{if(n){let i=t.get(n.owner+"-OVERLAYS"),o=t.get("SOCKET-LOOKUP");o||(o={}),i?i.push(e.id):i=[e.id],console.log(n.owner+"'s sockets: "+i.join(",")),t.set(n.owner+"-OVERLAYS",i),o[e.id]=n.owner,t.set("SOCKET-LOOKUP",o)}else e.emit("connect-issue","Issue while connecting")})},removeSocket:(e,t)=>{let n=t.get("SOCKET-LOOKUP"),i=n[e.id],o=t.get(i+"-OVERLAYS");if(o){let n=o.filter(t=>t!==e.id);console.log(i.owner+"'s sockets: "+n.join(",")),t.set(i+"-OVERLAYS",n)}delete n[e.id],t.set("SOCKET-LOOKUP",n)}}},function(e,t){e.exports=require("socket.io")},function(e,t,n){const i=n(2).Router(),o=n(3),s=n(6),a=n(13),r=new s(process.env.SCK),l=n(5).isAuthorized,c=(n(1),n(4));n(29);let d=n(30),h=d.patreon,u=(0,d.oauth)(process.env.PCID,process.env.PCS);const m="https://www.patreon.com/api/oauth2/v2/identity?include=memberships&fields%5Buser%5D=thumb_url,vanity";i.get("/twitch",o.authenticate("twitch.js",{scope:["user_read","user:read:email"]})),i.get("/twitch/redirect",o.authenticate("twitch.js"),(e,t)=>{e.session.user=e.user;let n=r.encrypt(e.user.integration.twitch.etid);t.cookie("etid",n,{maxAge:144e5,httpOnly:!1,secure:!0,domain:"streamachievements.com"});let i=e.user.integration.patreon;if(i&&"lifetime"!==i.status){let n,{at:o,rt:s,id:l,expires:d}=i;p(d)?(console.log("patreon token expired"),n=new Promise((t,n)=>{g(e,i.rt).then(e=>{console.log("token is refreshed"),e&&(o=e.at,s=e.rt,d=e.expires),t()})})):n=Promise.resolve(),n.then(()=>{let n=r.decrypt(o);l?(console.log("getting up to date info from patreon"),a.get(`https://www.patreon.com/api/oauth2/v2/members/${l}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${n}`}}).then(n=>{console.log("up to date info obtained");let a=n.data.data.attributes.patron_status,r=n.data.data.attributes.is_follower,l=n.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,h={id:i.id,thumb_url:i.thumb_url,vanity:i.vanity,at:o,rt:s,is_follower:r,status:a,is_gold:l,expires:d},u=Object.assign({},e.user.integration);u.patreon={...h},e.user.integration=u,e.user.lastLogin=Date.now(),e.user.save().then(n=>{"verified"!==n.type&&"admin"!==n.type||c.findOne({owner:e.user.name}).then(e=>{e.gold!==n.integration.patreon.is_gold&&(e.gold=n.integration.patreon.is_gold,e.save())}),t.redirect(process.env.WEB_DOMAIN+"home")})}).catch(n=>{if(console.log(n.response.data.errors[0]),401===n.response.status)t.redirect("/auth/patreon");else if(404===n.response.status){let n=Object.assign({},e.user.integration),i={id:null,thumb_url:n.patreon.thumb_url,vanity:n.patreon.vanity,at:n.patreon.at,rt:n.patreon.rt,is_follower:null,status:null,is_gold:null,expires:n.patreon.expires};n.patreon={...i},e.user.integration=n,e.user.lastLogin=Date.now(),e.user.save().then(n=>{"verified"!==n.type&&"admin"!==n.type||c.findOne({owner:e.user.name}).then(e=>{e.gold!==n.integration.patreon.is_gold&&(e.gold=!1,e.save())}),t.redirect(process.env.WEB_DOMAIN+"home")})}})):(console.log("grabbing id from user"),(l=e.user.integration.patreon.id)||(e.user.lastLogin=Date.now(),e.user.save().then(e=>{t.redirect(process.env.WEB_DOMAIN+"home")})))})}else e.user.lastLogin=Date.now(),e.user.save().then(e=>{t.redirect(process.env.WEB_DOMAIN+"home")})}),i.get("/patreon",l,(e,t)=>{console.log("why tho?");let n="https://www.patreon.com/oauth2/authorize?";n+="response_type=code&",n+="client_id="+process.env.PCID+"&",n+="redirect_uri="+process.env.PPR,n+="&scope=campaigns%20identity%20identity%5Bemail%5D%20campaigns.members",t.redirect(n)}),i.get("/patreon/redirect",l,(e,t)=>{let n=e.query.code;return u.getTokens(n,process.env.PPR).then(t=>{h(t.access_token);let n=e.cookies.etid;return new Promise((e,i)=>{let o,s,l=r.encrypt(t.access_token),c=r.encrypt(t.refresh_token),d=new Date,h=(new Date).setDate(d.getDate()+14);a.get(m,{headers:{Authorization:`Bearer ${t.access_token}`}}).then(i=>{if(o=i.data.data.attributes.vanity,s=i.data.data.attributes.thumb_url,i.data.included){let r=i.data.included[0].id;a.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${t.access_token}`}}).then(t=>{let i=t.data.data.attributes.patron_status,a=t.data.data.attributes.is_follower,d=t.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0;e({id:r,thumb_url:s,vanity:o,at:l,rt:c,etid:n,is_follower:a,status:i,is_gold:d,expires:h})})}else e({thumb_url:s,vanity:o,at:l,rt:c,etid:n,expires:h})})})}).then(n=>{let{id:i,thumb_url:o,vanity:s,at:a,rt:r,etid:l,is_follower:d,status:h,is_gold:u,expires:m}=n,p=Object.assign({},e.user.integration);p.patreon={id:i,thumb_url:o,vanity:s,at:a,rt:r,is_follower:d,status:h,is_gold:u,expires:m},e.user.integration=p,e.user.save().then(n=>{"verified"===n.type&&c.findOne({owner:e.user.name}).then(e=>{e.gold!==u&&(e.gold=u,e.save())}),t.redirect(process.env.WEB_DOMAIN+"profile")})})}),i.post("/twitch/sync",l,(e,t)=>{f(e.user,e.cookies.etid).then(e=>{t.json(e)})}),i.post("/patreon/sync",l,(e,t)=>{v(e.user,e.cookies.etid).then(e=>{t.json(e)})}),i.post("/patreon/unlink",l,(e,t)=>{let n=Object.assign({},e.user.integration);delete n.patreon,e.user.integration=n,e.user.save().then(n=>{c.findOne({owner:e.user.name}).then(e=>{e?(e.icons={default:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",hidden:"https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png"},e.save().then(e=>{t.json({success:!0,service:"patreon"})})):t.json({success:!0,service:"patreon"})})})});let p=e=>{let t=new Date(e);return new Date>t},g=(e,t)=>new Promise((n,i)=>{let o=r.decrypt(t);console.log("calling to get a token refresh"),a.post(`https://www.patreon.com/api/oauth2/token?grant_type=refresh_token&refresh_token=${o}&client_id=${process.env.PCID}&client_secret=${process.env.PCS}`).then(t=>{console.log("token obtained");let i=r.encrypt(t.data.access_token),o=r.encrypt(t.data.refresh_token),s=new Date,a=(new Date).setDate(s.getDate()+14),l=Object.assign({},e.user.integration);l.patreon.at=i,l.patreon.rt=o,l.patreon.expires=a,e.user.integration=l,e.user.save().then(e=>{n({at:i,rt:o,expires:a})})}).catch(e=>{n(null)})}),f=(e,t)=>e.integration.twitch?new Promise((t,n)=>{a.get(`https://api.twitch.tv/helix/users/?id=${e.integration.twitch.etid}`,{headers:{"Client-ID":process.env.TCID}}).then(n=>{e.name=n.data.data[0].login,e.logo=n.data.data[0].profile_image_url,e.save().then(e=>{t({username:e.name,logo:e.logo})})})}):Promise.resolve(),v=(e,t)=>e.integration.patreon?new Promise((n,i)=>{let o,{at:s,rt:l,id:d,expires:h}=e.integration.patreon;(o=p(h)?new Promise((t,n)=>{g(e,l).then(e=>{e&&(s=e.at,l=e.rt,h=e.expires),t()})}):Promise.resolve()).then(()=>{let i=r.decrypt(s);a.get(m,{headers:{Authorization:`Bearer ${i}`}}).then(o=>{if(vanity=o.data.data.attributes.vanity,thumb_url=o.data.data.attributes.thumb_url,o.data.included){let r=o.data.included[0].id;a.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${i}`}}).then(i=>{let o=i.data.data.attributes.patron_status,a=i.data.data.attributes.is_follower,d=i.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,u={id:r,thumb_url:thumb_url,vanity:vanity,at:s,rt:l,etid:t,is_follower:a,status:o,is_gold:d,expires:h},m=Object.assign({},e.integration);m.patreon={...u},e.integration=m,e.save().then(t=>{"verified"===t.type&&c.findOne({owner:e.name}).then(e=>{e.gold!==t.integration.patreon.is_gold&&(e.gold=t.integration.patreon.is_gold,e.save())}),n({vanity:t.integration.patreon.vanity,thumb_url:t.integration.patreon.thumb_url,follower:t.integration.patreon.is_follower,status:t.integration.patreon.status,gold:t.integration.patreon.is_gold})})})}else n({thumb_url:thumb_url,vanity:vanity,at:s,rt:l,etid:t})})})}):Promise.resolve();i.get("/logout",(e,t)=>{e.logout(),t.clearCookie("etid",{domain:"streamachievements.com"}),t.redirect(process.env.WEB_DOMAIN)}),e.exports=i},function(e,t){e.exports=require("url")},function(e,t){e.exports=require("patreon")},function(e,t,n){const i=n(2).Router(),o=n(3),s=n(1),a=n(4),r=n(7),l=n(8),c=n(0);let d=n(32),h=n(38),u=n(40),m=n(41);const{isAuthorized:p,isAdminAuthorized:g}=n(5),{emitTestListener:f,emitNewChannel:v}=n(10);i.use("/channel",d),i.use("/achievement",h),i.use("/irc",u),i.use("/admin",m),i.get("/token",o.authenticate("twitch"),(e,t)=>t.json({success:!0,data:e.user.id}));let y=!1;i.get("/users",g,(e,t)=>{l.find({}).then(e=>{let n={},i=e.map(e=>(n[e.uid]=e.token,e.uid));s.find({_id:{$in:i}}).then(e=>{let i=e.map(e=>({name:e.name,logo:e.logo,status:"not issued"===n[e.id]?"new":"pending"}));t.json({users:i})})})}),i.get("/user",p,(e,t)=>{let n;if(setTimeout(()=>{y&&(console.log("timeout"),t.status(500),t.json({message:"Internal Server Issue"}))},1e4),e.user.integration.patreon){let t=e.user.integration.patreon;n={vanity:t.vanity,thumb_url:t.thumb_url,follower:t.is_follower,status:t.status,gold:t.is_gold}}else n=!1;a.findOne({twitchID:e.user.integration.twitch.etid}).then(i=>{if(y=!1,i)t.json({username:e.user.name,logo:e.user.logo,patreon:n,status:"verified",type:e.user.type,preferences:e.user.preferences});else{let i="viewer";l.findOne({uid:e.user._id}).then(o=>{o&&(i="not issued"===o.token?"review":"pending"),t.json({username:e.user.name,logo:e.user.logo,patreon:n,status:i,type:e.user.type,preferences:e.user.preferences})})}})}),i.get("/profile",p,(e,t)=>{let n=e.user.channels.map(e=>new c.Types.ObjectId(e.channelID));a.find({_id:{$in:n}}).then(n=>{let i=n.map(t=>{let n=e.user.channels.filter(e=>e.channelID===t.id),i=0;return new Promise((e,o)=>{r.countDocuments({channel:t.owner}).then(o=>{o>0&&(i=Math.round(n[0].achievements.length/o*100)),e({logo:t.logo,owner:t.owner,percentage:i})})})});Promise.all(i).then(n=>{e.user.preferences?t.json({channels:n,preferences:e.user.preferences}):(e.user.preferences={autojoin:!1},e.user.save().then(e=>{t.json({channels:n,preferences:e.preferences})}))})})}),i.post("/profile/preferences",p,(e,t)=>{let n={...e.user.preferences}||{};n={...e.body.preferences},e.user.preferences=n,e.user.save().then(n=>{t.json(e.user.preferences)})}),i.post("/test",g,(e,t)=>{v(e,{name:e.body.channel,"full-access":!1})}),e.exports=i},function(e,t,n){const i=n(2).Router(),o=(n(3),n(14)),{isAuthorized:s,isAdminAuthorized:a}=n(5),r=n(0),l=(new(n(6))(process.env.SCK),n(33)),c=n(34),d=n(35),h=n(1),u=n(4),m=n(7),p=n(9),g=n(11),f=n(8),v=n(12),{uploadImage:y,destroyImage:w}=n(15),{emitNewChannel:b,emitOverlaySettingsUpdate:_,emitOverlayAlert:I}=n(10),D="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",O="https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png",x=/^https:\/\/res\.cloudinary\.com\/phirehero\/.*\.(png|jpg|jpeg)$/gm,j=n(37);i.get("/create",s,(e,t)=>{u.findOne({twitchID:e.user.twitchID}).then(n=>{n?t.json({error:"Channel already exists!",channel:n}):new u({owner:e.user.name,twitchID:e.user.twitchID,theme:"",logo:e.user.logo,achievements:[],members:[],icons:{default:D,hidden:O},oid:o(),nextUID:1}).save().then(n=>{let i=!1;e.user.integration&&e.user.integration.patreon&&("forever"===e.user.integration.patreon.type||e.user.integration.patreon.is_gold)&&(i=!0),b({name:e.user.name,"full-access":i,online:!1}),e.user.channelID=n.id,e.user.save().then(i=>{t.json({channel:n,user:e.user})})})})}),i.post("/leave",s,(e,t)=>{u.findOne({owner:e.body.channel}).then(n=>{if(n){let i,o=n.members;o.length>0&&o.includes(e.user.id)?(i=o.findIndex(t=>{e.user.id}),o.splice(i,1),n.save().then(n=>{i=0,i=e.user.channels.findIndex(e=>e.channelID===n.id),e.user.channels.splice(i,1),e.user.save().then(e=>{t.json({leave:!0})})})):t.send("User isn't a part of this channel")}else t.send("Channel doesn't exist")})}),i.post("/join",s,(e,t)=>{u.findOne({owner:e.body.channel}).then(n=>{if(n){let i=e.user.channels.some(e=>e.channelID===n.id),o=n.members.includes(e.user.id);if(i)o?t.json({user:e.user,channel:n}):(n.members.push(e.user.id),n.save().then(n=>{t.json({user:e.user,channel:n})}));else if(o)i?t.json({user:e.user,channel:n}):(e.user.channels.push({channelID:n.id,achievements:[],sync:!0}),e.user.save().then(e=>{t.json({user:e,channel:n})}));else{let i={channelID:n.id,achievements:[],sync:!0};console.log("checking queues..."),v.find({twitchID:e.user.integration.twitch.etid,channelID:n.id}).then(o=>{o&&o.forEach(e=>{i.achievements.push({aid:e.achievementID,earned:e.earned||new Date}),v.deleteOne({_id:e.id}).then(e=>{console.log(e)})}),e.user.channels.push(i),e.user.save().then(e=>{n.members.push(e.id),n.save().then(n=>{t.json({user:e,channel:n})})})})}}else t.status(405),t.send("Channel requested to join does not exist!")})}),i.get("/list",(e,t)=>{u.find({},(e,n)=>{t.json(n)})}),i.get("/retrieve",s,(e,t)=>{let n=e.query.id;e.query.bb&&u.find({watcher:!0}).then(e=>{e.map(e=>({name:e.owner,listeners:e.listeners}))}),n?u.findOne({owner:n}).then(i=>{i?m.find({channel:n}).then(o=>{let s,a,r=i.members.includes(e.user.id);r?(earnedAchievements=e.user.channels.filter(e=>e.channelID===i.id)[0],s=earnedAchievements.achievements.map(e=>e.aid),a=o.map(e=>{let t=Object.assign({},e._doc),n=s.findIndex(e=>e===t.uid);return n>=0&&(t.earned=earnedAchievements.achievements[n].earned),t})):a=o;let l=a.map(e=>{let t=e._doc?{...e._doc}:e;return delete t.__v,delete t._id,t});h.findOne({name:n}).then(e=>{if(e){let n=!1;e.integration.patreon&&e.integration.patreon.is_gold&&(n=!0);let o={...i._doc};delete o.__v,delete o._id,t.json({channel:o,achievements:l,joined:r,fullAccess:n})}else t.json({error:"Channel doesn't exist"})})}):t.json({error:"No channel found for the name: "+n})}):u.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let n=new Promise((t,n)=>{m.find({channel:e.owner}).then(e=>{if(e){let n=e.map(e=>e.listener);p.find({_id:{$in:n}}).then(n=>{let i=e.map(e=>{let t=n.find(t=>t.id===e.listener);if(t){let n={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:t.code};return t.resubType&&(n.resubType=t.resubType),t.query&&(n.query=t.query),n}return e});t(i)})}else t(e)})}),i=new Promise((t,n)=>{g.find({channel:e.owner}).then(e=>{t(e?{gallery:e}:{gallery:[]})})}),s=new Promise((t,n)=>{h.find({_id:{$in:e.members}}).then(n=>{let i=n.map(t=>({name:t.name,logo:t.logo,achievements:t.channels.filter(t=>t.channelID===e.id)[0].achievements}));t(i)})});Promise.all([n,i,s]).then(n=>{let i;e.oid?e.overlay&&0!==Object.keys(e.overlay).length?(delete(i={...e._doc}).__v,delete i._id,t.json({channel:i,achievements:n[0],images:n[1],members:n[2]})):(console.log("foo"),e.overlay=j,e.save().then(e=>{delete(i={...e._doc}).__v,delete i._id,t.json({channel:i,achievements:n[0],images:n[1],members:n[2]})})):(e.oid=o(),e.overlay&&0!==Object.keys(e.overlay).length||(e.overlay=j),e.save().then(e=>{delete(i={...e._doc}).__v,delete i._id,t.json({channel:i,achievements:n[0],images:n[1],members:n[2]})}))})}else t.json({error:"User doesn't manage a channel"})})}),i.post("/update",s,(e,t)=>{u.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{})}),i.post("/preferences",s,(e,t)=>{u.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{let i,o,s;i=new Promise((t,i)=>{e.body.defaultIcon&&d(e.body.defaultIcon)?y(e.body.defaultIcon,e.body.defaultIconName,n.owner,"default").then(e=>{t(e.url)}):e.body.defaultImage&&x.test(e.body.defaultImage)?t(e.body.defaultImage):t()}),o=new Promise((t,i)=>{e.body.hiddenIcon&&d(e.body.hiddenIcon)?y(e.body.hiddenIcon,e.body.hiddenIconName,n.owner,"hidden").then(e=>{t(e.url)}):e.body.hiddenImage&&x.test(e.body.hiddenImage)?t(e.body.hiddenImage):t()}),s=new Promise((t,i)=>{if(e.body.overlay){let{chat:i,chatMessage:o,sfx:s,enterEffect:a,exitEffect:r,duration:l,volume:c,delay:d}=e.body.overlay,h=n.overlay||{};i&&(h.chat=i),o&&(h.chatMessage=o),s&&(h.sfx=process.env.WEB_DOMAIN+"sounds/achievement."+s+".mp3"),a&&(h.enterEffect=a),r&&(h.exitEffect=r),l&&(h.duration=l),c&&(h.volume=c),d&&(h.delay=d),t(h)}else t()}),Promise.all([i,o,s]).then(i=>{let o={default:n.icons.default,hidden:n.icons.hidden};i[0]&&(o.default=i[0]),i[1]&&(o.hidden=i[1]),i[2]&&(n.overlay=i[2],updateSettings=!0),n.icons=o,n.save().then(o=>{i[0]!==o.icons.default&&console.log("uh oh"),updateSettings&&_(e,{channel:o.owner,overlay:o.overlay}),g.find({channel:n.owner}).then(e=>{e?t.json({channel:o,images:{gallery:e}}):t.json({channel:o})})})})})}),i.post("/image",s,(e,t)=>{let n=e.body.image;w(n.cloudID).then(i=>{let o,s=new Promise((t,i)=>{""!==n.achievementID?m.findOne({_id:n.achievementID}).then(n=>{n?(n.icon="",n.save().then(()=>{m.find({channel:e.user.name}).then(e=>{t(e)})})):t()}):t()}),a=new Promise((t,i)=>{g.deleteOne({_id:n._id}).then(n=>{g.find({channel:e.user.name}).then(e=>{console.log("\nGetting all images after delete"),t(e?{gallery:e,default:""}:{gallery:[],default:""})})})});o="hidden"===n.type||"default"===n.type?new Promise((t,i)=>{u.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{let i={...e.icons};"default"===n.type?i.default=D:"hidden"===n.type&&(i.hidden=O),e.icons=i,e.save().then(e=>{t(e)})})}):Promise.resolve(),Promise.all([s,a,o]).then(e=>{let n={images:e[1]};e[0]&&(n.achievements=e[0]),e[2]&&(n.channel=e[2]),t.json(n)})})}),i.get("/user",s,(e,t)=>{let n=e.user.channels.map(e=>new r.Types.ObjectId(e.channelID));u.find({_id:{$in:n}}).then(n=>{let i=n.map(t=>{let n=e.user.channels.filter(e=>e.channelID===t.id),i=0;return new Promise((e,o)=>{m.countDocuments({channel:t.owner}).then(o=>{o>0&&(i=Math.round(n[0].achievements.length/o*100)),e({logo:t.logo,owner:t.owner,percentage:i})})})});Promise.all(i).then(e=>{t.json(e)})})}),i.post("/signup",s,(e,t)=>{let n=e.body.uid;f.findOne({uid:n}).then(n=>{if(n)t.json({error:"You have already signed up!"});else{new f({uid:e.user._id,token:"not issued"}).save().then(e=>{t.json({signup:!0})})}})}),i.post("/queue",a,(e,t)=>{let n=e.body.uid;f.deleteOne({uid:n}).then(e=>{h.findById(n).then(e=>{e.email;c.createTransport({service:"gmail",auth:{user:process.env.GML,pass:process.env.GMLP}});process.env.GML})})}),i.post("/confirm",a,(e,t)=>{h.findOne({name:e.body.name}).then(e=>{let n=e._id;f.findOne({uid:n}).then(n=>{let i=l.randomBytes(16).toString("hex");n.token=i,n.created=Date.now(),n.save().then(n=>{let o=e.email;var s={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},a=c.createTransport({service:"gmail",auth:s});const r={from:process.env.GML,to:o,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We reviewed your channel and feel you are a perfect fit to join in on this pilot, and test the new features we aim to provide for streamers!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+i+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of Achievements, and can\'t wait to see how much your community engages!</p></div>'};a.sendMail(r,function(e,n){e?console.log(e):t.json({message:"email sent"})})})})})}),i.post("/verify",s,(e,t)=>{let n=e.body.id;f.findOne({uid:e.user._id,token:n}).then(i=>{i?i.hasExpired()?(f.deleteOne({uid:e.user._id,token:n}).then(e=>{t.json({expired:!0})}),t.json({expired:!0})):new u({owner:e.user.name,twitchID:e.user.integration.twitch.etid,theme:"",logo:e.user.logo,members:[],icons:{default:D,hidden:O},oid:o(),overlay:j,nextUID:1}).save().then(i=>{e.user.type="verified",e.user.save().then(i=>{f.deleteOne({uid:e.user._id,token:n}).then(e=>{t.json({verified:!0})})})}):t.json({error:"Unauthorized"})})}),i.get("/overlay",(e,t)=>{let n=e.query.id;u.findOne({oid:n}).then(e=>{e&&t.json({overlay:e.overlay,icons:e.icons})})}),i.get("/testOverlay",s,(e,t)=>{I(e,{user:e.user.name,channel:e.user.name,title:"Test Achievement",icon:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",unlocked:!0}),t.json({})}),e.exports=i},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("nodemailer")},function(e,t){e.exports=require("valid-data-url")},function(e,t){e.exports=require("cloudinary")},function(e,t){e.exports={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2}},function(e,t,n){const i=n(2).Router(),o=(n(3),n(14)),s=n(13),a=n(1),r=n(4),l=n(7),c=n(9),d=n(12),h=n(39),u=n(11),{isAuthorized:m}=n(5),{emitNewListener:p,emitUpdateListener:g,emitRemoveListener:f,emitAwardedAchievement:v,emitAwardedAchievementNonMember:y,emitOverlayAlert:w}=n(10),b=n(15).uploadImage;n(0);let _=(e,t)=>{let n={_id:e._id,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,achType:t.achType,condition:t.condition};return t.query&&(n.query=t.query),n},I=(e,t,n,i,s,a)=>new Promise((r,d)=>{let h;(h=a?new Promise((e,t)=>{u.findOne({achievementID:n._id}).then(t=>{t?(t.achievementID="",t.save().then(()=>{a.achievementID=n._id,a.save().then(t=>{e()})})):(a.achievementID=n._id,a.save().then(t=>{e()}))})}):Promise.resolve()).then(()=>{l.findOneAndUpdate({_id:n._id},{$set:i},{new:!0}).then(i=>{if(Object.keys(s).length>0)if(s.achType&&"3"===s.achType&&i.listener)c.findOne({_id:i.listener}).then(n=>{n&&(f(e,{uid:n.uid,channel:t,achievement:n.achievement,achType:n.achType,query:n.query,bot:n.bot,condition:n.condition}),c.deleteOne({_id:i.listener}).then(e=>{i.listener=void 0,i.save().then(e=>{r({update:!0,achievement:e})})}))});else if(s.achType&&"3"!==s.achType&&!n.listener){let n={channel:t,uid:o(),...s,achievement:i.id,aid:i.uid};new c(n).save().then(t=>{p(e,{uid:t.uid,channel:t.channel,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition}),i.listener=t.id,i.save().then(e=>{r({created:!0,achievement:e})})})}else c.findOneAndUpdate({_id:i.listener},{$set:s},{new:!0}).then(n=>{g(e,{uid:n.uid,channel:t,achievement:n.achievement,achType:n.achType,query:n.query,bot:n.bot,condition:n.condition});let o=_(i,n);r({update:!0,achievement:o})});else c.findOne({_id:i.listener}).then(e=>{let t=_(i,e);r({update:!0,achievement:t})})})})}),D=e=>new Promise((t,n)=>{u.find({channel:e,type:"achievement"}).then(e=>{if(e){let n={active:[],inactive:[]};e.map(e=>{e.achievementID&&""!==e.achievementID?n.active.push(e):n.inactive.push(e)}),t(n.active.concat(n.inactive))}else t([])})});i.post("/update",m,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{n?l.findOne({_id:e.body.id,channel:n.owner}).then(i=>{if(i){let o=e.body,{achType:s,query:a,bot:r,condition:l}=o,c={};s&&(c.achType=s,delete o.achType),a&&(c.query=a,delete o.query),r&&(c.bot=r,delete o.bot),l&&(c.condition=l,delete o.condition),o.icon&&o.iconName?b(o.icon,o.iconName,n.owner).then(s=>{o.icon=s.url,I(e,n.owner,i,o,c,s).then(e=>{t.json(e)})}):I(e,n.owner,i,o,c).then(e=>{t.json(e)})}else t.json({update:!1,message:"The achievement you tried to update doesn't exist!"})}):t.json({update:!1,message:"The channel you tried to update the achievement for doesn't exist!"})})}),i.post("/create",m,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{if(n){let i={};e.body.id?i._id=e.body.id:i.title=e.body.title,i.channel=n.owner,l.findOne(i).then(i=>{if(i)t.json({created:!1,message:"An achievement with this name already exists!",achievement:i});else{let i={uid:n.nextUID,channel:n.owner,title:e.body.title,description:e.body.description,icon:e.body.icon,earnable:e.body.earnable,limited:e.body.limited,secret:e.body.secret,listener:e.body.listener},s={channel:n.owner,achType:e.body.achType,uid:o()};"0"!==s.achType&&(s.condition=e.body.condition,"4"===s.achType&&(s.bot=e.body.bot,s.query=e.body.query)),c.findOne(s).then(o=>{o?l.findOne({listener:o._id}).then(e=>{t.json({created:!1,message:'The conditions you selected are already taken by the "'+e.title+'" achievement!'})}):e.body.icon?b(e.body.icon,e.body.iconName,n.owner).then(o=>{i.icon=o.url,new l(i).save().then(i=>{console.log("new achievement in DB"),s.achievement=i.id,s.aid=i.uid,o.achievementID=i.id,o.save().then(o=>{n.nextUID=i.uid+1,n.save().then(n=>{"3"!==e.body.achType?new c(s).save().then(n=>{p(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),i.listener=n.id,i.save().then(e=>{t.json({created:!0,achievement:e})})}):t.json({created:!0,achievement:i})})})})}):new l(i).save().then(i=>{s.achievement=i.id,s.aid=i.uid,n.nextUID=i.uid+1,n.save().then(n=>{"3"!==e.body.achType?new c(s).save().then(n=>{p(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),i.listener=n.id,i.save().then(e=>{t.json({created:!0,achievement:e})})}):t.json({created:!0,achievement:i})})})})}})}else t.json({created:!1,message:"This channel you are creating for doesn't exist!"})})}),i.post("/delete",m,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{if(n){let i={};i._id=e.body.achievementID,i.channel=n.owner,l.findOne(i).then(o=>{if(o){let s=o.listener;l.deleteOne(i).then(i=>{let a={_id:s,channel:o.channel};c.findOne(a).then(i=>{i?(f(e,{uid:i.uid,channel:n.owner,achievement:i.achievement,achType:i.achType,query:i.query,bot:i.bot,condition:i.condition}),c.deleteOne(a).then(n=>{u.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{t.json({deleted:!0})})})):u.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{t.json({deleted:!0})})})})}else t.json({deleted:!1,message:"The achievement you requested to delete doesn't exist!"})})}else t.json({delete:!1,message:"This channel you are deleting for doesn't exist!"})})}),i.get("/retrieve",m,(e,t)=>{let n=e.user.name,i=e.query.aid;i?r.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let n=new Promise((t,n)=>{l.findOne({uid:i,channel:e.owner}).then(e=>{if(e){e.listener;c.findOne({_id:e.listener,channel:e.channel}).then(n=>{if(n){let i=Object.assign({},n._doc),o=Object.assign({},e._doc);delete i._id;let s=Object.assign(o,i);t(s)}else t(e)})}else t(null)})}),o=D(e.owner);Promise.all([n,o]).then(n=>{t.json({achievement:n[0],images:n[1],defaultIcons:e.icons})})}else t.json({error:"User isn't a verified channel owner"})}):n&&l.find({channel:n}).then(e=>{if(e){let n=e.map(e=>e.listener);c.find({_id:{$in:n}}).then(n=>{e.forEach(e=>{let t=n.find(t=>t._id=e.listener);return delete t._id,Object.assign(e,t)}),t.json(e)})}else t.json(e)})}),i.post("/award",m,(e,t)=>{let n=e.body.members,i=e.body.aid;r.findOne({twitchID:e.user.integration.twitch.etid}).then(o=>{l.findOne({uid:i,channel:e.user.name}).then(s=>{a.find({name:{$in:n}}).then(n=>{let r=n.map((t,n)=>{let a=t.channels,r=a.findIndex(e=>e.channelID===o.id);return a[r].achievements.push({aid:i,earned:Date.now()}),t.channels=a,t.save().then(t=>{if(o.overlay.chat){let n={channel:o.owner,member:t.name,achievement:s.title};v(e,n)}let n=s.alert||!0,i=!1;o.gold&&(i=!0),n&&w(e,{user:t.name,channel:o.owner,title:s.title,icon:s.icon,unlocked:i})})});Promise.all(r).then(e=>{a.find({_id:{$in:o.members}}).then(e=>{let n=e.map(e=>({name:e.name,logo:e.logo,achievements:e.channels.filter(e=>e.channelID===o.id)[0].achievements}));t.json({members:n})})})})})})}),i.get("/icons",m,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{e?D(e.owner).then(n=>{let i=n.map(e=>{let t={...e._doc};return delete t.__v,delete t._id,t});t.json({images:i,defaultIcons:e.icons})}):t.json({error:!0})})}),i.get("/listeners",(e,t)=>{let n=e.query.channel;Array.isArray(n)||(n=n.split(",")),console.log(n),l.find({owner:{$in:n}}).then(e=>{e.map(e=>{if(e.earnable&&e.listener)return e.listener})}),c.find({channel:{$in:n}}).then(e=>{e.length>0?t.json(e):t.json([])})}),i.post("/listeners",(e,t)=>{console.log("achievements to process...");let n=e.body,i=new Date,o={};n.forEach(e=>{o[e.channel]=o[e.channel]||[],o[e.channel].push(e)}),Object.keys(o).forEach(t=>{r.findOne({owner:t}).then(n=>{if(n){console.log("Issuing achievements for "+n.owner+" channel:"),o[t].forEach(o=>{let{channel:r,achievementID:c,tier:u,userID:m}=o,p={};o.userID||o.user;if(m)console.log(">>> userID: "+m),p["integration.twitch.etid"]=m;else if(o.user){console.log(">>> userName: "+o.user);let e=o.user;0===e.indexOf("@")&&(e=e.substr(1)),p.name=e.toLowerCase(),console.log(p)}else console.log("<<<< No user came from IRC >>>>"),console.log(Date.now());l.findById(c).then(r=>{r?(console.log("> Achievement: "+r.title),a.findOne(p).then(a=>{if(a){console.log("> User: "+a.name),m=a.integration.twitch.etid;let o=a.channels.findIndex(e=>e.channelID===n.id);if(o>=0){console.log("> "+a.name+" is a part of this channel");let s=a.channels[o].achievements,l=a.channels[o].sync;s.findIndex(e=>e.aid===r.uid)<0&&(console.log("> "+a.name+" doesn't have this achievement yet"),a.channels[o].achievements.push({aid:r.uid,earned:i}),a.save().then(i=>{if(l&&u){if(console.log("syncing for "+i.name),O(r.id,i,n),n.overlay.chat){let n={channel:t,member:i.name,achievement:r.title};console.log("> Sending achievement to alert the stream"),v(e,n)}let o=r.alert||!0,s=!1;n.gold&&(s=!0),o&&w(e,{user:i.name,channel:t,title:r.title,icon:r.icon,unlocked:s})}else{if(n.overlay.chat){let n={channel:t,member:i.name,achievement:r.title};v(e,n)}let o=r.alert||!0,s=!1;n.gold&&(s=!0),o&&w(e,{user:i.name,channel:t,title:r.title,icon:r.icon,unlocked:s})}}))}else if(console.log("couldn't find the channel"),console.log(n.id),a.preferences.autojoin)a.channels.push({channelID:n.id,achievements:[{id:c,earned:i}]}),a.save().then(i=>{n.members.push(i.id),n.save().then(i=>{new h({twitchID:m,channelID:n._id,achievementID:r.uid}).save().then(i=>{if(n.overlay.chat){let n={channel:t,member:a.name,achievement:r.title};v(e,n)}let o=r.alert||!0,s=!1;n.gold&&(s=!0),o&&w(e,{user:a.name,channel:t,title:r.title,icon:r.icon,unlocked:s})})})});else{if(new d({twitchID:a.integration.twitch.etid,name:a.name,channelID:n._id,achievementID:r.uid,earned:i}).save(),new h({twitchID:m,channelID:n._id,achievementID:c}).save(),n.overlay.chat){let n={channel:t,member:a.name,achievement:r.title};v(e,n)}let o=r.alert||!0,s=!1;n.gold&&(s=!0),o&&w(e,{user:a.name,channel:t,title:r.title,icon:r.icon,unlocked:s})}}else{let a,l,c={userID:o.userID,name:o.user};c.userID?c.name||(a=`https://api.twitch.tv/helix/users/?id=${o.userID}`):a=`https://api.twitch.tv/helix/users/?login=${o.user}`,(l=a?new Promise((e,t)=>{s.get(a,{headers:{"Client-ID":process.env.TCID}}).then(t=>{c.userID=t.data.data[0].id,c.name=t.data.data[0].login,e()})}):Promise.resolve()).then(()=>{d.findOne({twitchID:c.userID,channelID:n._id,achievementID:r.uid}).then(o=>{o||new d({twitchID:c.userID,name:c.name,channelID:n._id,achievementID:r.uid,earned:i}).save().then(i=>{if(n.overlay.chat){let n={channel:t,member:c.name,achievement:r.title};y(e,n)}let o=r.alert||!0,s=!1;n.gold&&(s=!0),o&&w(e,{user:c.name,channel:t,title:r.title,icon:r.icon,unlocked:s})})})})}})):console.log("uh oh, no achievement found while awarding "+c)})})}})}),t.json({})});let O=(e,t,n)=>{c.find({achType:{$in:["0","1"]},channel:n.owner}).then(i=>{if(i){let o=i.findIndex(t=>t.achievement===e);if(o>=0){let s=i.splice(o,1)[0],a=s.achType,r=s.condition,l=[];if("1"===a){if(console.log("> sub backfilling"),i.forEach(e=>{"0"===e.achType?l.push(e):parseInt(e.condition)<=parseInt(r)&&l.push(e)}),l.length>0){console.log("> Potentially Backfilling "+l.length+" achievements");let i=t.channels,o=i.findIndex(e=>e.channelID===n.id),s=t.channels[o].achievements;l.forEach(a=>{s.findIndex(e=>e.aid===a.aid)<0?(i[o].achievements.push({aid:a.aid,earned:Date.now()}),new h({twitchID:t.integration.twitch.etid,channelID:n._id,achievementID:e}).save()):console.log("> Achievement already earned: "+a.aid)}),i[o].sync=!1,t.channels=i,t.save().then(e=>{console.log(`> ${e.name} has been synced`)})}}else console.log("> The achievement wasn't a resub")}}})};e.exports=i},function(e,t,n){const i=n(0),o=new(0,i.Schema)({twitchID:String,channelID:String,achievementID:String}),s=i.model("notice",o);e.exports=s},function(e,t,n){const i=n(2).Router(),o=n(1),s=n(9);n(8),n(0);i.get("/channels",(e,t)=>{let n=parseInt(e.query.offset)||0,i=parseInt(e.query.limit)||50,s=parseInt(e.query.total)||void 0;s?r(n,i,s).then(e=>{e.err?(t.status(500),t.json({channels:[],err:e.err})):t.json(e)}):s=o.estimatedDocumentCount().exec().then(e=>{r(n,i,s=e).then(e=>{e.err?(t.status(500),t.json({channels:[],err:e.err})):t.json(e)})})}),i.get("/listeners",(e,t)=>{let n=parseInt(e.query.offset)||0,i=parseInt(e.query.limit)||50,o=parseInt(e.query.total)||void 0;o?a(n,i,o).then(e=>{e.err?(t.status(500),t.json({listeners:[],error:e.err})):t.json(e)}):o=s.estimatedDocumentCount().exec().then(e=>{a(n,i,o=e).then(e=>{e.err?(t.status(500),t.json({listeners:[],error:e.err})):t.json(e)})})});let a=(e,t,n)=>new Promise((i,o)=>{s.find().sort({_id:-1}).skip(e).limit(t).exec((o,s)=>{if(o)i({err:"Issue retrieving from Listener sets"});else{let o=s.map(e=>({channel:e.channel,achievement:e.achievement,achType:e.achType,resubType:e.resubType,query:e.query,bot:e.bot,condition:e.condition})),a={listeners:o,total:n};o.length===t&&(a.offset=e+o.length),i(a)}})}),r=(e,t,n)=>new Promise((i,s)=>{o.find({$or:[{type:"verified"},{type:"admin"}]}).sort({_id:-1}).skip(e).limit(t).exec((o,s)=>{if(o)i({err:"Issue retrieving from User sets"});else{let o=s.map(e=>{let t={name:e.name,full_access:!1},n=e.integration.patreon;return n&&(n.forever||n.is_gold)&&(t["full-access"]=!0),t}),a={channels:o,total:n};o.length===t&&(a.offset=e+o.length),i(a)}})});e.exports=i},function(e,t,n){const i=n(2).Router(),o=n(1),s=n(9),a=(n(8),n(12)),r=n(4),l=n(7),{isAdminAuthorized:c}=(n(0),n(5)),{emitOverlayAlert:d}=n(10);i.post("/dedup",c,(e,t)=>{o.find({}).then(e=>{e.forEach(e=>{console.log("dedup for "+e.name+"...");let t=[];e.channels.forEach(e=>{console.log(">>> checking channel: "+e.channelID);let n=e.achievements;console.log(n);let i=n.filter((e,t,n)=>n.findIndex(t=>t.aid===e.aid)===t);if(i.length!==n.length&&console.log(">>>>>> duplicates found: "+(n.length-i.length)),i.length>0){console.log("\n"),console.log(e),console.log("--------------------------------------------");let n={...e._doc,achievements:i};console.log(n),t.push(n)}else t.push(e)}),e.channels=t,e.save()})})}),i.post("/fixit",c,(e,t)=>{l.find({}).then(e=>{e&&e.forEach(e=>{e.listener&&s.findById(e.listener).then(t=>{t&&(console.log("updating: "+e.channel+": "+e.title),t.aid=e.uid,t.achievement=e.id,t.save())})})})}),i.post("/flush",c,(e,t)=>{a.find({}).then(e=>{e.length>0?e.forEach(e=>{try{console.log("finding "+e.channelID+" channel"),r.findOne({owner:e.channelID}).then(t=>{t?e&&e.achievementID&&l.findOne({uid:parseInt(e.achievementID),channel:t.owner}).then(n=>{n?o.findOne({"integration.twitch.etid":e.twitchID}).then(i=>{if(i){console.log("we found "+i.name);let o=i.channels,s=o.findIndex(e=>e.channelID===t.id);if(s>=0){o[s].achievements.filter(e=>{e.aid,n.uid})?(console.log(i.name+"already has "+n.title+". Delete it"),a.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)})):(console.log("achievement will be awarded to "+i.name),i.channels[s].achievements.push({aid:n.uid,earned:e.earned||Date.now()}),console.log("deleting entry"),console.log(e),a.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)}),i.save())}else console.log(i.name+"hasn't joined "+t.owner+"'s channel yet")}else console.log("no user")}):console.log("no achievement")}):console.log("no channel")})}catch(t){console.log(t),console.log("cast issue for "+e.channelID)}}):console.log("nothing in queue")})}),i.post("/fixpreferences",c,(e,t)=>{r.find({}).then(e=>{e&&e.forEach(e=>{e.overlay={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2},e.save().then(e=>{console.log("updated "+e.owner+"'s channel overlay")})})})}),i.post("/overlay",c,(e,t)=>{d(e,{user:e.user.name,channel:e.user.name,title:"I can show you the world",icon:"https://res.cloudinary.com/phirehero/image/upload/v1562881653/u9astg4olsdtfm2rjhxu.png",unlocked:!0})}),i.post("/sync",c,(e,t)=>{o.find({}).then(e=>{e&&e.forEach(e=>{let t=[],n=e.channels;n&&(n.forEach(e=>{let n={...e._doc,sync:!0};t.push(n)}),e.channels=t,e.save())})})}),i.post("/alertSync",c,(e,t)=>{l.find({}).then(e=>{e&&e.forEach(e=>{e.alert=!0,e.save()})})}),e.exports=i}]);