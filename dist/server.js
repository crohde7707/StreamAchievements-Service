!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t){e.exports=require("mongoose")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({name:String,twitchID:String,logo:String,email:String,type:String,channels:[{channelID:String,achievements:[{aid:Number,earned:Date}]}],integration:Object,lastLogin:Date}),s=i.model("user",o);e.exports=s},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("passport")},function(e,t){e.exports=require("cryptr")},function(e,t,n){const i=n(1),o=new(n(4))(process.env.SCK);e.exports={authCheck:(e,t,n)=>{e.user?n():t.redirect("/auth/twitch")},isAuthorized:async(e,t,n)=>{let s=o.decrypt(e.cookies.etid),r=await i.findOne({"integration.twitch.etid":s});r?(e.user=r,t.cookie("etid",e.cookies.etid,{maxAge:864e5,httpOnly:!1,domain:"streamachievements.com"}),n()):(t.clearCookie("etid"),t.status(401),t.redirect(process.env.WEB_DOMAIN))},isAdminAuthorized:async(e,t,n)=>{let s=o.decrypt(e.cookies.etid),r=await i.findOne({"integration.twitch.etid":s});r&&(r.type="admin")?(t.user=r,t.cookie("etid",e.cookies.etid,{maxAge:864e5,httpOnly:!1,domain:"streamachievements.com"}),n()):(t.status(401),t.json({message:"You are not authorized to make this request."}),n())}}},function(e,t,n){const i=n(0),o=new(0,i.Schema)({owner:String,twitchID:String,theme:String,logo:String,achievements:Array,members:Array,icons:{default:String,hidden:String}}),s=i.model("channel",o);e.exports=s},function(e,t,n){const i=n(0);var o=new(0,i.Schema)({uid:String,token:String,created:Date});o.methods.hasExpired=function(){return Date.now()-Date.parse(this.created)>2592e5};const s=i.model("token",o);e.exports=s},function(e,t,n){const i=n(0),o=i.Schema,s=new o({uid:String,channel:String,code:String,type:String,bot:String,query:o.Types.Mixed,condition:String,achievement:String}),r=i.model("listener",s);e.exports=r},function(e,t,n){const i=n(0),o=new(0,i.Schema)({name:String,type:String,channel:String,cloudID:String,url:String,achievementID:String}),s=i.model("image",o);e.exports=s},function(e,t,n){const i=n(0),o=new(0,i.Schema)({uid:Number,channel:String,title:String,description:String,icon:String,earnable:Boolean,limited:Boolean,secret:Boolean,listener:String,first:String,earned:Date}),s=i.model("achievement",o);e.exports=s},function(e,t,n){const i=n(9);let o=n(34).v2;o.config({cloud_name:process.env.CLDNAME,api_key:process.env.CLDKEY,api_secret:process.env.CLDS});e.exports={uploadImage:(e,t,n,s)=>{return new Promise((r,a)=>{i.findOne({name:t,channel:n}).then(c=>{c?(console.log("\nimage already exists"),r(c)):(console.log("\nnew image"),o.uploader.upload(e,(e,o)=>{e?(console.log(e),a({error:e})):(console.log("\nimage uploaded successfully"),new i({name:t,channel:n,cloudID:o.public_id,url:o.url,type:s||"achievement"}).save().then(e=>{console.log("new image in DB"),r(e)}))}))})})},destroyImage:e=>new Promise((t,n)=>{o.uploader.destroy(e,function(e){t(e)})})}},function(e,t){e.exports={emitNewChannel:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("new-channel",{name:t.name,"full-access":t["full-access"],online:!1})},emitNewListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("new-listener",t)},emitUpdateListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");n.to(i).emit("update-listener",t)},emitRemoveListener:(e,t)=>{let n=e.app.get("ws"),i=e.app.get("IRCSOCKET");console.log(i),n.to(i).emit("remove-listener",t)},emitBecomeGold:e=>{let t=e.app.get("ws"),n=e.app.get("IRCSOCKET");t.to(n).emit("become-gold",{})},emitRemoveGold:e=>{let t=e.app.get("ws"),n=e.app.get("IRCSOCKET");t.to(n).emit("remove-gold",{})},emitAchievementAwarded:()=>{let e=req.app.get("ws"),t=req.app.get("IRCSOCKET");e.to(t).emit("achievement-awarded",{})}}},function(e,t,n){e.exports=n(14)},function(e,t,n){(function(e){const t=n(2),i=n(15),o=n(0),s=n(16),r=n(3),a=(n(17),n(18),n(20)),c=n(21),l=n(22).refreshCookie,d=n(23).allowAccess;let h=n(24),u=n(25),m=n(29);const p=process.env.PORT||5e3;let g=t();g.set("view engine","ejs"),g.use(a()),g.use(c({limit:"50mb",extended:!0})),o.connect(process.env.MDB,{useNewUrlParser:!0},()=>{console.log("connected to mongodb")}),g.use(s({name:"e2tid",maxAge:1e3,keys:process.env.SCK,cookie:{httpOnly:!0,expires:new Date(Date.now()+36e5)}})),g.use(r.initialize()),g.use(r.session()),g.use(t.static("public")),g.use("/auth",[d,l],u),g.use("/api",[d,l],m),g.use(t.static(i.join(e,"client/build")));let f=g.listen(p),v=h.listen(f);console.log(p),g.set("ws",v),v.on("connection",function(e){console.log("connected:",e.client.id),e.on("handshake",function(t){(t.name="SAIRC")&&(console.log("Hello, SAIRC"),g.set("IRCSOCKET",e.id))}),e.emit("new-channel","phirehero has joined the frey"),console.log("message sent to IRC")}),console.log(`Express app listening on port ${p}`)}).call(this,"/")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("cookie-session")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({socketID:String,name:String}),s=i.model("socket",o);e.exports=s},function(e,t,n){const i=n(3),o=n(19).Strategy,s=n(1),r=new(n(4))(process.env.SCK);i.serializeUser((e,t)=>{t(null,e)}),i.use(new o({clientID:process.env.TCID,clientSecret:process.env.TCS,callbackURL:process.env.TPR},(e,t,n,i)=>{let o=r.encrypt(e),a=r.encrypt(t),c={etid:n.id.toString(),token:o,refresh:a};s.findOne({"integration.twitch.etid":c.etid}).then(e=>{e?(e.integration.twitch=c,e.name!==n.username&&(e.name=n.username),e.logo!==n._json.logo&&(e.logo=n._json.logo),e.email!==n.email&&(e.email=n.email),e.save().then(t=>{console.log("found user, logging in..."),i(null,e)})):new s({name:n.username,logo:n._json.logo,email:n.email,type:"user",channels:[],integration:{twitch:c}}).save().then(e=>{i(null,e)})})}))},function(e,t){e.exports=require("passport-twitch")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports={refreshCookie:async(e,t,n)=>{console.log(e.session),e.session.fake=Date.now(),n()}}},function(e,t,n){e.exports={allowAccess:async(e,t,n)=>{var i;i=["http://www.streamachievements.com","http://streamachievements.com","https://www.streamachievements.com","https://streamachievements.com"];var o=e.headers.origin;i.indexOf(o)>-1&&t.setHeader("Access-Control-Allow-Origin",o),t.header("Access-Control-Allow-Credentials",!0),t.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),n()}}},function(e,t){e.exports=require("socket.io")},function(e,t,n){const i=n(2).Router(),o=n(3),s=n(4),r=n(26),a=new s(process.env.SCK),c=n(5).isAuthorized;n(1);n(27);let l=n(28),d=l.patreon,h=(0,l.oauth)(process.env.PCID,process.env.PCS);const u="https://www.patreon.com/api/oauth2/v2/identity?include=memberships&fields%5Buser%5D=thumb_url,vanity";i.get("/twitch",o.authenticate("twitch",{scope:["user_read"]})),i.get("/twitch/redirect",o.authenticate("twitch"),(e,t)=>{e.session.user=e.user;let n=a.encrypt(e.user.integration.twitch.etid);t.cookie("etid",n,{maxAge:144e5,httpOnly:!1,domain:"streamachievements.com"});e.user.integration.patreon;e.user.lastLogin=Date.now(),e.user.save().then(e=>{t.redirect(process.env.WEB_DOMAIN+"home")})}),i.get("/patreon",c,(e,t)=>{let n="https://www.patreon.com/oauth2/authorize?";n+="response_type=code&",n+="client_id="+process.env.PCID+"&",n+="redirect_uri="+process.env.PPR,n+="&scope=campaigns%20identity%20identity%5Bemail%5D%20campaigns.members",t.redirect(n)}),i.get("/patreon/redirect",c,(e,t)=>{let n=e.query.code;return h.getTokens(n,process.env.PPR).then(t=>{d(t.access_token);let n=e.cookies.etid;return new Promise((e,i)=>{let o,s,c=a.encrypt(t.access_token),l=a.encrypt(t.refresh_token),d=new Date,h=(new Date).setDate(d.getDate()+26);r.get(u,{headers:{Authorization:`Bearer ${t.access_token}`}}).then(i=>{if(o=i.data.data.attributes.vanity,s=i.data.data.attributes.thumb_url,i.data.included){let a=i.data.included[0].id;r.get(`https://www.patreon.com/api/oauth2/v2/members/${a}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${t.access_token}`}}).then(t=>{let i=t.data.data.attributes.patron_status,r=t.data.data.attributes.is_follower,d=t.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0;e({id:a,thumb_url:s,vanity:o,at:c,rt:l,etid:n,is_follower:r,status:i,is_gold:d,expires:h})})}else e({thumb_url:s,vanity:o,at:c,rt:l,etid:n})})})}).then(n=>{let{id:i,thumb_url:o,vanity:s,at:r,rt:a,etid:c,is_follower:l,status:d,is_gold:h,expires:u}=n,m=Object.assign({},e.user.integration);m.patreon={id:i,thumb_url:o,vanity:s,at:r,rt:a,is_follower:l,status:d,is_gold:h,expires:u},e.user.integration=m,e.user.save().then(e=>{t.redirect(process.env.WEB_DOMAIN+"profile")})})}),i.post("/patreon/sync",c,(e,t)=>{m(e.user,e.cookies.etid).then(e=>{t.json(e)})});let m=(e,t)=>e.integration.patreon?new Promise((n,i)=>{let o,{at:s,rt:c,id:l,expires:d}=e.integration.patreon;(o=(e=>{let t=new Date(e);return new Date>t})(d)?new Promise((t,n)=>{((e,t)=>new Promise((n,i)=>{let o=a.decrypt(t);r.post(`https://www.patreon.com/api/oauth2/token?grant_type=refresh_token&refresh_token=${o}&client_id=${process.env.PCID}&client_secret=${process.env.PCS}`).then(t=>{let i=a.encrypt(t.data.access_token),o=a.encrypt(t.data.refresh_token),s=new Date,r=(new Date).setDate(s.getDate()+26),c=Object.assign({},e.integration);c.patreon.at=i,c.patreon.rt=o,c.patreon.expires=r,e.integration=c,e.save().then(e=>{n({at:i,rt:o,expires:r})})}).catch(e=>{n(null)})}))(e,c).then(e=>{e&&(s=e.at,c=e.rt,d=e.expires),t()})}):Promise.resolve()).then(()=>{let i=a.decrypt(s);r.get(u,{headers:{Authorization:`Bearer ${i}`}}).then(o=>{if(vanity=o.data.data.attributes.vanity,thumb_url=o.data.data.attributes.thumb_url,o.data.included){let a=o.data.included[0].id;r.get(`https://www.patreon.com/api/oauth2/v2/members/${a}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${i}`}}).then(i=>{let o=i.data.data.attributes.patron_status,r=i.data.data.attributes.is_follower,l=i.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,h={id:a,thumb_url:thumb_url,vanity:vanity,at:s,rt:c,etid:t,is_follower:r,status:o,is_gold:l,expires:d},u=Object.assign({},e.integration);u.patreon={...h},e.integration=u,e.save().then(e=>{n({vanity:e.integration.patreon.vanity,thumb_url:e.integration.patreon.thumb_url,follower:e.integration.patreon.is_follower,status:e.integration.patreon.status,gold:e.integration.patreon.is_gold})})})}else n({thumb_url:thumb_url,vanity:vanity,at:s,rt:c,etid:t})})})}):Promise.resolve();i.get("/logout",(e,t)=>{e.logout(),t.clearCookie("etid",{domain:"streamachievements.com"}),t.redirect(process.env.WEB_DOMAIN)}),e.exports=i},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("url")},function(e,t){e.exports=require("patreon")},function(e,t,n){const i=n(2).Router(),o=n(3),s=n(1),r=n(6),a=n(7),c=n(0);let l=n(30),d=n(35),h=n(39);const{isAuthorized:u,isAdminAuthorized:m}=n(5);i.use("/channel",l),i.use("/achievement",d),i.use("/irc",h),i.get("/token",o.authenticate("twitch"),(e,t)=>t.json({success:!0,data:e.user.id}));let p=!1;i.get("/users",m,(e,t)=>{a.find({}).then(e=>{let n=e.map(e=>e.uid);s.find({_id:{$in:n}}).then(e=>{let n=e.map(e=>({name:e.name,logo:e.logo}));t.json({users:n})})})}),i.get("/user",u,(e,t)=>{let n;if(setTimeout(()=>{p&&(console.log("timeout"),t.status(500),t.json({message:"Internal Server Issue"}))},1e4),e.user.integration.patreon){let t=e.user.integration.patreon;n={vanity:t.vanity,thumb_url:t.thumb_url,follower:t.is_follower,status:t.status,gold:t.is_gold}}else n=!1;r.findOne({twitchID:e.user.integration.twitch.etid}).then(i=>{if(p=!1,i)t.json({username:e.user.name,logo:e.user.logo,patreon:n,status:"verified",type:e.user.type});else{let i="viewer";console.log(e.user),a.findOne({uid:e.user._id}).then(o=>{console.log(o),o&&(i="not issued"===o.token?"review":"pending"),t.json({username:e.user.name,logo:e.user.logo,patreon:n,status:i,type:e.user.type})})}})}),i.get("/profile",u,(e,t)=>{let n=e.user.channels.map(e=>new c.Types.ObjectId(e.channelID));r.find({_id:{$in:n}}).then(n=>{responseData=n.map(t=>{let n=0,i=e.user.channels.filter(e=>e.channelID===t.id);return 0!==t.achievements.length&&(n=Math.round(i[0].achievements.length/t.achievements.length*100)),{logo:t.logo,owner:t.owner,percentage:n}}),t.json(responseData)})}),e.exports=i},function(e,t,n){const i=n(2).Router(),{isAuthorized:o,isAdminAuthorized:s}=(n(3),n(5)),r=n(0),a=(new(n(4))(process.env.SCK),n(31)),c=n(32),l=n(33),d=n(1),h=n(6),u=n(10),m=n(8),p=n(9),g=n(7),{uploadImage:f,destroyImage:v}=n(11),{emitNewChannel:y}=n(12),w="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",b="https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png",_=/^https:\/\/res\.cloudinary\.com\/phirehero\/.*\.(png|jpg|jpeg)$/gm;i.get("/create",o,(e,t)=>{h.findOne({twitchID:e.user.twitchID}).then(n=>{n?t.json({error:"Channel already exists!",channel:n}):new h({owner:e.user.name,twitchID:e.user.twitchID,theme:"",logo:e.user.logo,achievements:[],members:[],icons:{default:w,hidden:b}}).save().then(n=>{let i=!1;e.user.integration&&e.user.integration.patreon&&("forever"===e.user.integration.patreon.type||e.user.integration.patreon.is_gold)&&(i=!0),y({name:e.user.name,"full-access":i,online:!1}),e.user.channelID=n.id,e.user.save().then(i=>{t.json({channel:n,user:e.user})})})})}),i.post("/leave",o,(e,t)=>{h.findOne({owner:e.body.channel}).then(n=>{if(n){let i,o=n.members;o.length>0&&o.includes(e.user.id)?(i=o.findIndex(t=>{e.user.id}),o.splice(i,1),n.save().then(n=>{i=0,i=e.user.channels.findIndex(e=>e.channelID===n.id),e.user.channels.splice(i,1),e.user.save().then(e=>{t.json({leave:!0})})})):t.send("User isn't a part of this channel")}else t.send("Channel doesn't exist")})}),i.post("/join",o,(e,t)=>{h.findOne({owner:e.body.channel}).then(n=>{if(n){let i=e.user.channels.some(e=>e.channelID===n.id),o=n.members.includes(e.user.id);i?o?t.json({user:e.user,channel:n}):(n.members.push(e.user.id),n.save().then(n=>{t.json({user:e.user,channel:n})})):o?i?t.json({user:e.user,channel:n}):(e.user.channels.push({channelID:n.id,achievements:[]}),e.user.save().then(e=>{t.json({user:e,channel:n})})):(e.user.channels.push({channelID:n.id,achievements:[]}),e.user.save().then(e=>{n.members.push(e.id),n.save().then(n=>{t.json({user:e,channel:n})})}))}else t.status(405),t.send("Channel requested to join does not exist!")})}),i.get("/list",(e,t)=>{h.find({},(e,n)=>{t.json(n)})}),i.get("/retrieve",o,(e,t)=>{let n=e.query.id;e.query.bb&&h.find({watcher:!0}).then(e=>{e.map(e=>({name:e.owner,listeners:e.listeners}))}),n?h.findOne({owner:n}).then(i=>{i?u.find({channel:n}).then(o=>{let s,r,a=i.members.includes(e.user.id);a?(earnedAchievements=e.user.channels.filter(e=>e.channelID===i.id)[0],s=earnedAchievements.achievements.map(e=>e.aid),r=o.map(e=>{let t=Object.assign({},e._doc),n=s.findIndex(e=>e===t.uid);return n>=0&&(t.earned=earnedAchievements.achievements[n].earned),t})):r=o,d.findOne({name:n}).then(e=>{let n=!1;e.integration.patreon&&e.integration.patreon.is_gold&&(n=!0),t.json({channel:i,achievements:r,joined:a,fullAccess:n})})}):t.json({error:"No channel found for the name: "+n})}):h.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let n=new Promise((t,n)=>{u.find({channel:e.owner}).then(e=>{if(e){let n=e.map(e=>e.listener);m.find({_id:{$in:n}}).then(n=>{let i=e.map(e=>{let t=n.find(t=>t.id===e.listener);if(t){let n={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:t.code};return t.resubType&&(n.resubType=t.resubType),t.query&&(n.query=t.query),n}return e});t(i)})}else t(e)})}),i=new Promise((t,n)=>{p.find({channel:e.owner}).then(e=>{t(e?{gallery:e}:{gallery:[]})})}),o=new Promise((t,n)=>{d.find({_id:{$in:e.members}}).then(n=>{let i=n.map(t=>({name:t.name,logo:t.logo,achievements:t.channels.filter(t=>t.channelID===e.id)[0].achievements}));t(i)})});Promise.all([n,i,o]).then(n=>{t.json({channel:e,achievements:n[0],images:n[1],members:n[2]})})}else t.json({error:"User doesn't manage a channel"})})}),i.post("/update",o,(e,t)=>{h.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{})}),i.post("/preferences",o,(e,t)=>{h.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{let i,o;console.log(e.body),i=new Promise((t,i)=>{e.body.defaultIcon&&l(e.body.defaultIcon)?f(e.body.defaultIcon,e.body.defaultIconName,n.owner,"default").then(e=>{t(e.url)}):e.body.defaultImage&&_.test(e.body.defaultImage)?(console.log("successful match"),t(e.body.defaultImage)):t()}),o=new Promise((t,i)=>{e.body.hiddenIcon&&l(e.body.hiddenIcon)?f(e.body.hiddenIcon,e.body.hiddenIconName,n.owner,"hidden").then(e=>{t(e.url)}):e.body.hiddenImage&&_.test(e.body.hiddenImage)?t(e.body.hiddenImage):t()}),Promise.all([i,o]).then(e=>{let i={default:n.icons.default,hidden:n.icons.hidden};e[0]&&(i.default=e[0]),e[1]&&(i.hidden=e[1]),n.icons=i,n.save().then(i=>{e[0]!==i.icons.default&&console.log("uh oh"),p.find({channel:n.owner}).then(e=>{e?t.json({channel:i,images:{gallery:e}}):t.json({channel:i})})})})})}),i.post("/image",o,(e,t)=>{let n=e.body.image;v(n.cloudID).then(i=>{let o,s=new Promise((t,i)=>{""!==n.achievementID?u.findOne({_id:n.achievementID}).then(n=>{n?(n.icon="",n.save().then(()=>{u.find({channel:e.user.name}).then(e=>{t(e)})})):t()}):t()}),r=new Promise((t,i)=>{p.deleteOne({_id:n._id}).then(n=>{p.find({channel:e.user.name}).then(e=>{console.log("\nGetting all images after delete"),t(e?{gallery:e,default:""}:{gallery:[],default:""})})})});o="hidden"===n.type||"default"===n.type?new Promise((t,i)=>{h.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{let i={...e.icons};"default"===n.type?i.default=w:"hidden"===n.type&&(i.hidden=b),e.icons=i,e.save().then(e=>{t(e)})})}):Promise.resolve(),Promise.all([s,r,o]).then(e=>{console.log(e);let n={images:e[1]};e[0]&&(n.achievements=e[0]),e[2]&&(n.channel=e[2]),t.json(n)})})}),i.get("/user",o,(e,t)=>{let n=e.user.channels.map(e=>new r.Types.ObjectId(e.channelID));h.find({_id:{$in:n}}).then(n=>{let i=n.map(t=>{let n=e.user.channels.filter(e=>e.channelID===t.id),i=0;return new Promise((e,o)=>{u.countDocuments({channel:t.owner}).then(o=>{console.log(o),o>0&&(i=Math.round(n[0].achievements.length/o*100)),e({logo:t.logo,owner:t.owner,percentage:i})})})});Promise.all(i).then(e=>{t.json(e)})})}),i.post("/signup",o,(e,t)=>{let n=e.body.uid;g.findOne({uid:n}).then(n=>{if(n)t.json({error:"You have already signed up!"});else{new g({uid:e.user._id,token:"not issued"}).save().then(e=>{t.json({signup:!0})})}})}),i.post("/queue",s,(e,t)=>{let n=e.body.uid;g.deleteOne({uid:n}).then(e=>{d.find({_id:n}).then(e=>{e.email;c.createTransport({service:"gmail",auth:{user:process.env.GML,pass:process.env.GMLP}});process.env.GML})})}),i.post("/confirm",s,(e,t)=>{d.findOne({name:e.body.name}).then(e=>{let n=e._id;console.log(n),g.findOne({uid:n}).then(e=>{let n=a.randomBytes(16).toString("hex");e.token=n,e.created=Date.now(),e.save().then(e=>{d.find({_id:e.uid}).then(e=>{let i=e.email;var o={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},s=c.createTransport({service:"gmail",auth:o});const r={from:process.env.GML,to:i,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We reviewed your channel and feel you are a perfect fit to join in on this pilot, and test the new features we aim to provide for streamers!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+n+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of Achievements, and can\'t wait to see how much your community engages!</p></div>'};s.sendMail(r,function(e,n){e?console.log(e):t.json({message:"email sent"})})})})})})}),i.post("/verify",o,(e,t)=>{let n=e.body.id;console.log(e.user._id),console.log(n),g.findOne({uid:e.user._id,token:n}).then(i=>{i?(console.log(i),i.hasExpired()?t.json({expired:!0}):new h({owner:e.user.name,twitchID:e.user.integration.twitch.etid,theme:"",logo:e.user.logo,achievements:[],members:[]}).save().then(i=>{e.user.channelID=i.id,e.user.save().then(i=>{g.deleteOne({uid:e.user._id,token:n}).then(e=>{t.json({verified:!0})})})})):t.json({error:"Unauthorized"})})}),e.exports=i},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("nodemailer")},function(e,t){e.exports=require("valid-data-url")},function(e,t){e.exports=require("cloudinary")},function(e,t,n){const i=n(2).Router(),o=(n(3),n(36)),s=n(1),r=n(6),a=n(10),c=n(8),l=n(37),d=n(38),h=n(9),{isAuthorized:u}=n(5),{emitNewListener:m,emitUpdateListener:p,emitRemoveListener:g}=n(12),f=n(11).uploadImage;n(0);let v=(e,t)=>{let n={_id:e._id,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:t.code};return t.resubType&&(n.resubType=t.resubType),t.query&&(n.query=t.query),n},y=(e,t,n,i)=>new Promise((o,s)=>{let r;(r=i?new Promise((t,n)=>{h.findOne({achievementID:e._id}).then(n=>{n?(n.achievementID="",n.save().then(()=>{i.achievementID=e._id,i.save().then(e=>{t()})})):(i.achievementID=e._id,i.save().then(e=>{t()}))})}):Promise.resolve()).then(()=>{a.findOneAndUpdate({_id:e._id},{$set:t},{new:!0}).then(e=>{Object.keys(n).length>0?c.findOneAndUpdate({_id:e.listener},{$set:n},{new:!0}).then(t=>{p(req,{uid:t.uid,achievement:t.achievement,type:t.type,code:t.code,query:t.query,bot:t.bot,condition:t.condition});let n=v(e,t);o({update:!0,achievement:n})}):c.findOne({_id:e.listener}).then(t=>{let n=v(e,t);o({update:!0,achievement:n})})})})}),w=e=>new Promise((t,n)=>{h.find({channel:e,type:"achievement"}).then(e=>{if(e){let n={active:[],inactive:[]};e.map(e=>{e.achievementID&&""!==e.achievementID?n.active.push(e):n.inactive.push(e)}),t(n.active.concat(n.inactive))}else t([])})});i.post("/update",u,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{n?a.findOne({_id:e.body.id,channel:n.owner}).then(i=>{if(i){let o=e.body,{code:s,resubType:r,query:a,bot:c,condition:l}=o,d={};s&&(d.code=s,delete o.code),r&&(d.resubType=r,delete o.resubType),a&&(d.query=a,delete o.query),c&&(d.bot=c,delete o.bot),l&&(d.condition=l,delete o.condition),o.icon&&o.iconName?f(o.icon,o.iconName,n.owner).then(e=>{o.icon=e.url,y(i,o,d,e).then(e=>{t.json(e)})}):y(i,o,d).then(e=>{t.json(e)})}else t.json({update:!1,message:"The achievement you tried to update doesn't exist!"})}):t.json({update:!1,message:"The channel you tried to update the achievement for doesn't exist!"})})}),i.post("/create",u,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{if(n){let i={};e.body.id?i._id=e.body.id:i.title=e.body.title,i.channel=n.owner,a.findOne(i).then(i=>{i?t.json({created:!1,message:"An achievement with this name already exists!",achievement:i}):a.count().then(i=>{let s={uid:i+1,channel:n.owner,title:e.body.title,description:e.body.description,icon:e.body.icon,earnable:e.body.earnable,limited:e.body.limited,secret:e.body.secret,listener:e.body.listener},r={channel:n.owner,code:e.body.code,uid:o()};"0"!==r.code&&(r.condition=e.body.condition,"1"===r.code&&(r.resubType=parseInt(e.body.resubType)),"4"===r.code&&(r.bot=e.body.bot,r.query=e.body.query)),c.findOne(r).then(i=>{i?a.findOne({listener:i._id}).then(e=>{t.json({created:!1,message:'The conditions you selected are already taken by the "'+e.title+'" achievement!'})}):e.body.icon?f(e.body.icon,e.body.iconName,n.owner).then(n=>{s.icon=n.url,new a(s).save().then(i=>{console.log("new achievement in DB"),r.achievement=i.id,new c(r).save().then(o=>{m(e,{uid:r.uid,achievement:r.achievement,type:r.type,code:r.code,query:r.query,bot:r.bot,condition:r.condition}),i.listener=o.id,i.save().then(e=>{n.achievementID=e.id,n.save().then(n=>{t.json({created:!0,achievement:e})})})})})}):new a(s).save().then(n=>{r.achievement=n.id,new c(r).save().then(i=>{m(e,{uid:r.uid,achievement:r.achievement,type:r.type,code:r.code,query:r.query,bot:r.bot,condition:r.condition}),n.listener=i.id,n.save().then(e=>{t.json({created:!0,achievement:e})})})})})})})}else t.json({created:!1,message:"This channel you are creating for doesn't exist!"})})}),i.post("/delete",u,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(n=>{if(n){let i={};i._id=e.body.achievementID,i.channel=n.owner,a.findOne(i).then(n=>{if(n){let o=n.listener;a.deleteOne(i).then(i=>{let s={_id:o,channel:n.channel};c.findOne(s).then(n=>{n?(g(e,{uid:n.uid,achievement:n.achievement,type:n.type,code:n.code,query:n.query,bot:n.bot,condition:n.condition}),c.deleteOne(s).then(n=>{h.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{t.json({deleted:!0})})})):h.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{t.json({deleted:!0})})})})}else t.json({deleted:!1,message:"The achievement you requested to delete doesn't exist!"})})}else t.json({delete:!1,message:"This channel you are deleting for doesn't exist!"})})}),i.get("/retrieve",u,(e,t)=>{let n=e.user.name,i=e.query.aid;i?r.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let n=new Promise((t,n)=>{a.findOne({uid:i,channel:e.owner}).then(e=>{if(e){e.listener;c.findOne({_id:e.listener,channel:e.channel}).then(n=>{if(n){let i=Object.assign({},n._doc),o=Object.assign({},e._doc);delete i._id;let s=Object.assign(o,i);t(s)}else t(e)})}else t(null)})}),o=w(e.owner);Promise.all([n,o]).then(n=>{t.json({achievement:n[0],images:n[1],defaultIcons:e.icons})})}else t.json({error:"User isn't a verified channel owner"})}):n&&a.find({channel:n}).then(e=>{if(e){let n=e.map(e=>e.listener);c.find({_id:{$in:n}}).then(n=>{e.forEach(e=>{let t=n.find(t=>t._id=e.listener);return delete t._id,Object.assign(e,t)}),t.json(e)})}else t.json(e)})}),i.post("/award",u,(e,t)=>{let n=e.body.members,i=e.body.aid;r.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{s.find({name:{$in:n}}).then(n=>{let o=n.map((t,n)=>{let o=t.channels,s=o.findIndex(t=>t.channelID===e.id);return o[s].achievements.push({aid:i,earned:Date.now()}),t.channels=o,console.log(t.channels[0].achievements),t.save().then(e=>{console.log(e.channels[0].achievements)})});Promise.all(o).then(n=>{s.find({_id:{$in:e.members}}).then(n=>{let i=n.map(t=>({name:t.name,logo:t.logo,achievements:t.channels.filter(t=>t.channelID===e.id)[0].achievements}));t.json({members:i})})})})})}),i.get("/icons",u,(e,t)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{e?w(e.owner).then(n=>{t.json({images:n,defaultIcons:e.icons})}):t.json({error:!0})})}),i.get("/listeners",(e,t)=>{console.log("/achievement/listeners");let n=e.query.channel;Array.isArray(n)||(n=n.split(",")),console.log(n),c.find({channel:{$in:n}}).then(e=>{e.length>0?t.json(e):t.json([])})}),i.post("/listeners",(e,t)=>{console.log("achievements to process..."),console.log(e.body);let n=e.body,i=new Date;n.forEach(e=>{let{channel:n,achievement:o,tier:a,userID:c}=e;s.findOne({"integration.twitch.etid":c}).then(e=>{e?r.find({owner:n}).then(n=>{let s=e.channels.findIndex(e=>e.channelID===n._id);s>=0?e.channels[s].achievements.includes(o.achievementID)?t.json({message:"This user already earned this achievement!"}):e.channels[s].achievements.push({id:o.achievementID,earned:i}):(e.channels.push({channelID:n._id,achievements:[{id:o.achievementID,earned:i}]}),e.save().then(e=>{new d({twitchID:c,channelID:n._id,achievementID:o.achievementID}).save().then(e=>{t.json({message:"Achievement has been awarded!"})})}))}):r.find({owner:n}).then(e=>{new l({twitchID:c,channelID:e._id,achievementID:o.achievementID}).save().then(e=>{t.json({message:"User hasn't signed up yet, but their achievement earning is stored!"})})})})})}),e.exports=i},function(e,t){e.exports=require("uuid/v1")},function(e,t,n){const i=n(0),o=new(0,i.Schema)({twitchID:String,channelID:String,achievement:String}),s=i.model("queue",o);e.exports=s},function(e,t,n){const i=n(0),o=new(0,i.Schema)({twitchID:String,channelID:String,achievementID:String}),s=i.model("notice",o);e.exports=s},function(e,t,n){const i=n(2).Router(),o=n(1),s=n(8);n(7),n(0);i.get("/channels",(e,t)=>{o.find({$or:[{type:"verified"},{type:"admin"}]}).then(e=>{let n=e.map(e=>{let t={name:e.name,full_access:!1},n=e.integration.patreon;return n&&(n.forever||n.is_gold)&&(t.full_access=!0),t});console.log(n),t.json({channels:n})})}),i.get("/listeners",(e,t)=>{let n=parseInt(e.query.offset)||0,i=parseInt(e.query.limit)||50,o=parseInt(e.query.total)||void 0;o?r(n,i,o).then(e=>{e.err?(t.status(500),t.json({listeners:[],error:e.err})):t.json(e)}):o=s.estimatedDocumentCount().exec().then(e=>{r(n,i,o=e).then(e=>{e.err?(t.status(500),t.json({listeners:[],error:e.err})):t.json(e)})})});let r=(e,t,n)=>new Promise((i,o)=>{s.find().sort({_id:-1}).skip(e).limit(t).exec((o,s)=>{if(o)i({err:"Issue retrieving from Listener sets"});else{let o=s.map(e=>({achievement:e.achievement,type:e.type,code:e.code,query:e.query,bot:e.bot,condition:e.condition})),r={listeners:o,total:n};o.length===t&&(r.offset=e+o.length),i(r)}})});e.exports=i}]);