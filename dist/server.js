!function(e){var n={};function t(a){if(n[a])return n[a].exports;var i=n[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(a,i,function(n){return e[n]}.bind(null,i));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=23)}([function(e,n){e.exports=require("mongoose")},function(e,n,t){const a=t(0),i=new(0,a.Schema)({name:String,twitchID:String,logo:String,email:String,type:String,broadcaster_type:String,channels:[{channelID:String,achievements:[{aid:Number,earned:Date}],sync:Boolean,banned:Boolean}],favorites:Array,delegate:Array,integration:{twitch:Object,patreon:Object,streamlabs:Object},preferences:{autojoin:Boolean},lastLogin:Date,new:Boolean,consent:{date:Date,needed:Boolean}}),o=a.model("user",i);e.exports=o},function(e,n,t){const a=t(0),i=new(0,a.Schema)({owner:String,twitchID:String,theme:String,logo:String,members:Array,moderators:[{uid:String,permissions:{channel:Boolean,chat:Boolean}}],icons:{default:String,hidden:String},integration:{streamlabs:Object,streamelements:Object},oid:String,overlay:{chat:Boolean,chatMessage:String,sfx:String,enterEffect:String,exitEffect:String,duration:Number,volume:Number,delay:Number,custom:Boolean,graphic:String,layout:Number,textColor:String,titleFontSize:Number,showDescription:Boolean,descFontSize:Number},gold:Boolean,nextUID:Number,broadcaster_type:{twitch:String,mixer:String,youtube:String},referral:{referred:Number,code:String}}),o=a.model("channel",i);e.exports=o},function(e,n){e.exports=require("express")},function(e,n,t){const a=t(0),i=new(0,a.Schema)({user:String,logo:String,message:String,date:Date,type:String,channel:String,status:String}),o=a.model("notice",i);e.exports=o},function(e,n){e.exports=require("cryptr")},function(e,n,t){const a=t(0),i=new(0,a.Schema)({userID:String,channelID:String,achievementID:Number,earned:Date,first:Boolean}),o=a.model("earned",i);e.exports=o},function(e,n,t){const a=t(0),i=new(0,a.Schema)({uid:Number,channel:String,cid:String,title:String,description:String,shortDescription:String,icon:String,earnable:Boolean,limited:Boolean,secret:Boolean,listener:String,first:String,earned:Date,alert:Boolean,order:Number,rank:Number}),o=a.model("achievement",i);e.exports=o},function(e,n,t){const a=t(0),i=a.Schema,o=new i({uid:String,channel:String,cid:String,achType:String,resubType:String,bot:String,query:i.Types.Mixed,condition:String,achievement:String,aid:Number,unlocked:Boolean}),s=a.model("listener",o);e.exports=s},function(e,n){e.exports=require("passport")},function(e,n){e.exports=require("axios")},function(e,n,t){const a=t(1),i=t(36),o=t(2),s=new(t(5))(process.env.SCK),r=t(37),l=t(10);e.exports={authCheck:(e,n,t)=>{e.user?t():n.redirect("/auth/twitch")},isAuthorized:async(e,n,t)=>{if(e.cookies.etid)try{let i=s.decrypt(e.cookies.etid),o=await a.findOne({"integration.twitch.etid":i});o?(e.user=o,n.cookie("etid",e.cookies.etid,{maxAge:288e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),t()):(n.clearCookie("etid"),n.status(401),n.json({}))}catch(e){n.clearCookie("etid"),n.status(401),n.json({})}else r(e,n),n.status(401),n.json({})},isModAuthorized:async(e,n,t)=>{if(e.cookies.etid&&e.query.channel){let i=s.decrypt(e.cookies.etid),r=await a.findOne({"integration.twitch.etid":i});if(r){e.user=r;let a=await o.findOne({owner:e.query.channel,"moderators.uid":e.user._id});a?(e.channel=a,t()):(n.status(401),n.redirect(process.env.WEB_DOMAIN+"/mod"))}else n.clearCookie("etid"),n.status(401),n.redirect(process.env.WEB_DOMAIN)}else n.status(401),n.redirect(process.env.WEB_DOMAIN)},isAdminAuthorized:async(e,n,t)=>{if(e.cookies.etid){let i=s.decrypt(e.cookies.etid),o=await a.findOne({"integration.twitch.etid":i});o&&(o.type="admin")?(e.user=o,n.cookie("etid",e.cookies.etid,{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),t()):(n.status(401),n.json({message:"You are not authorized to make this request."}),t())}else n.status(401),n.redirect(process.env.WEB_DOMAIN)},isExtensionAuthorized:async(e,n,t)=>{let i=e.query.user||e.body.user,o=i.substr(0,1);if("A"===o)e.user={exists:!1,loggedIn:!1,user:void 0},t();else if("U"===o)e.user={exists:!1,loggedIn:!0,user:void 0},t();else{let n=await a.findOne({"integration.twitch.etid":i});n?(e.user={exists:!0,loggedIn:!0,user:n},t()):(e.user={exists:!1,loggedIn:!0,uid:i},t())}},getTwitchAxiosInstance:()=>new Promise((e,n)=>{let t=l.create();t.defaults.headers.common={"Client-ID":process.env.TCID},i.findOne({env:"p"}).then(n=>{if(n){let a=s.decrypt(n.at);try{t.get("https://id.twitch.tv/oauth2/validate",{headers:{Authorization:`OAuth ${a}`}}).then(n=>{console.log("token valid"),t.defaults.headers.common.Authorization=`Bearer ${a}`,e(t)}).catch(a=>{console.log("token invalid"),t.post(`https://id.twitch.tv/oauth2/token?client_id=${process.env.TCID}&client_secret=${process.env.TCS}&grant_type=client_credentials`).then(a=>{n.at=s.encrypt(a.data.access_token),n.expires_in=a.data.expires_in,n.save().then(n=>{console.log("new token retrieved"),t.defaults.headers.common.Authorization=`Bearer ${a.data.access_token}`,e(t)})})})}catch(e){console.log(e)}}else t.post(`https://id.twitch.tv/oauth2/token?client_id=${process.env.TCID}&client_secret=${process.env.TCS}&grant_type=client_credentials`).then(n=>{new i({at:s.encrypt(n.data.access_token),expires_in:n.data.expires_in,env:"p"}).save().then(a=>{t.defaults.headers.common.Authorization=`Bearer ${n.data.access_token}`,e(t)})})})})}},function(e,n){let t=(e,n,t)=>{let a=e.app.get("ws"),i=e.app.get("IRCSOCKET");a.to(i).emit(n,t)};e.exports={emitNewChannel:(e,n)=>{console.log("emitting new channel to IRC bot"),t(e,"new-channel",n)},emitDeleteChannel:(e,n)=>{t(e,"delete-channel",n)},emitChannelUpdate:(e,n)=>{t(e,"channel-update",n)},emitNewListener:(e,n)=>{t(e,"new-listener",n)},emitUpdateListener:(e,n)=>{t(e,"update-listener",n)},emitRemoveListener:(e,n)=>{t(e,"remove-listener",n)},emitBecomeGold:(e,n)=>{t(e,"become-gold",n)},emitRemoveGold:(e,n)=>{t(e,"remove-gold",n)},emitConnectBot:(e,n)=>{t(e,"connect-bot",n)},emitDisconnectBot:(e,n)=>{t(e,"disconnect-bot",n)},emitAwardedAchievement:(e,n)=>{t(e,"achievement-awarded",n)},emitAwardedAchievementNonMember:(e,n)=>{t(e,"achievement-awarded-nonMember",n)},emitTestListener:(e,n)=>{t(e,"test",n)},emitOverlayAlert:(e,n)=>{let t=e.app.get("ws"),a=e.app.get(n.channel+"-OVERLAYS");a&&a.forEach(e=>{t.to(e).emit("alert-recieved",n)})},emitOverlaySettingsUpdate:(e,n)=>{let t=e.app.get("ws"),a=e.app.get(n.channel+"-OVERLAYS");a&&a.forEach(e=>{t.to(e).emit("update-settings",n.overlay)})},emitNotificationsUpdate:(e,n)=>{let t=e.app.get("ws"),a=e.app.get(n.user+"-NOTIFICATIONS");a&&a.forEach(e=>{t.to(e).emit("notification-received",n)})},emitExtensionAchievementEarned:(e,n)=>{let t=e.app.get("ws"),a=e.app.get("EXTENSIONSOCKETS");if(a){let e=a[n.user];e&&t.to(e).emit("achievement-earned",n.aid)}}}},function(e,n,t){const a=t(0);var i=new(0,a.Schema)({uid:String,token:String,referral:String,created:Date,notified:Boolean});i.methods.hasExpired=function(){return Date.now()-Date.parse(this.created)>1728e5};const o=a.model("token",i);e.exports=o},function(e,n,t){const a=t(0),i=new(0,a.Schema)({name:String,type:String,channel:String,cloudID:String,url:String,achievementID:String}),o=a.model("image",i);e.exports=o},function(e,n){e.exports=require("uuid/v1")},function(e,n,t){const a=t(14),i=["image/jpeg","image/png","image/gif"];let o=t(42).v2;o.config({cloud_name:process.env.CLDNAME,api_key:process.env.CLDKEY,api_secret:process.env.CLDS});e.exports={uploadImage:(e,n,t,s,r)=>{return new Promise((l,d)=>{i.includes(t)?a.findOne({name:n,channel:s}).then(t=>{t?(console.log("\nimage already exists"),l(t)):(console.log("\nnew image"),o.uploader.upload(e,(e,t)=>{e?(console.log(e),d({error:e})):(console.log("\nimage uploaded successfully"),new a({name:n,channel:s,cloudID:t.public_id,url:t.secure_url,type:r||"achievement"}).save().then(e=>{console.log("new image in DB"),l(e)}))}))}):d({error:"Image type isn't allowed"})})},destroyImage:e=>new Promise((n,t)=>{o.uploader.destroy(e,function(e){n(e)})})}},function(e,n){e.exports=require("crypto")},function(e,n){e.exports=require("nodemailer")},function(e,n){e.exports=require("valid-data-url")},function(e,n){let t={"{user}":"member","{achievement}":"achievement"};e.exports={build:e=>{console.log(e);let n=Object.keys(t),a=e.chatMessage;return a=(e=>e.replace(/[.*+?^$()|[\]\\]/g,"\\$&"))(a),n.forEach(n=>{a=a.replace(new RegExp(n,"gi"),e[t[n]])}),a}}},function(e,n,t){const a=t(0),i=new(0,a.Schema)({channelID:String,member:String,achievement:String,date:Date}),o=a.model("event",i);e.exports=o},function(e,n){e.exports={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2,custom:!1,graphic:"",layout:1,textColor:"#000000",titleFontSize:64,showDescription:!0,descFontSize:40}},function(e,n,t){e.exports=t(24)},function(e,n,t){(function(e){const n=t(3),a=t(25),i=t(0),o=(t(26),t(9)),s=(t(27),t(28),t(30)),r=t(31),l=t(32).allowAccess,{searchChannels:d,searchMembers:c,searchMembersDetailed:h,searchMod:u,storeSocket:m,removeSocket:p,markNotificationRead:g,deleteNotification:f}=t(33);let v=t(34),w=t(35),y=t(40);const b=process.env.PORT||5e3;let _=n();_.set("view engine","ejs"),_.use(s()),_.use(r({limit:"50mb",extended:!0})),i.connect(process.env.MDB,{useNewUrlParser:!0},()=>{console.log("connected to mongodb")}),_.use(o.initialize()),_.use(o.session()),_.use(n.static("public")),_.use("/auth",[l],w),_.use("/api",[l],y),_.use(n.static(a.join(e,"client/build")));let I;_.listen(b);I=v.listen(process.env.SOCKET_PORT),_.set("ws",I),I.on("connection",function(e){e.handshake&&e.handshake.query&&m(e,_),e.on("handshake",function(n){if("SAIRC"===n.name)_.set("IRCSOCKET",e.id);else if(n.extension){let t=_.get("EXTENSIONSOCKETS");t||(t={}),t[n.user]=e.id,_.set("EXTENSIONSOCKETS",t)}else if(n.web){let t=_.get("USERSOCKETS");t?t[n.user]=e.id:((t={})[n.user]=e.id,_.set("USERSOCKETS",t))}}),e.on("search-directory",n=>{d(e,n)}),e.on("search-members",n=>{h(e,n)}),e.on("search-gift-member",n=>{c(e,n)}),e.on("search-mod",n=>{u(e,n)}),e.on("mark-notification-read",n=>{g(e,n)}),e.on("delete-notification",n=>{f(e,n)}),e.on("disconnect",()=>{p(e,_)})}),console.log(`Express app listening on port ${b}`)}).call(this,"/")},function(e,n){e.exports=require("path")},function(e,n){e.exports=require("cookie-session")},function(e,n,t){const a=t(0),i=new(0,a.Schema)({socketID:String,name:String}),o=a.model("socket",i);e.exports=o},function(e,n,t){const a=t(9),i=t(29).Strategy,o=t(1),s=t(2),r=t(4),l=(t(6),t(7)),d=t(8),c=new(t(5))(process.env.SCK);a.serializeUser((e,n)=>{n(null,e)}),a.use(new i({clientID:process.env.TCID,clientSecret:process.env.TCS,callbackURL:process.env.TPR},(e,n,t,a)=>{let i=c.encrypt(e),h=c.encrypt(n),u={etid:t.id.toString(),token:i,refresh:h};o.findOne({"integration.twitch.etid":u.etid}).then(e=>{let n=!1;e?(e.integration.twitch=u,e.name!==t.login&&(e.name=t.login,n=!0),e.logo!==t.profile_image_url&&(e.logo=t.profile_image_url,n=!0),e.email!==t.email&&(e.email=t.email,n=!0),e.broadcaster_type!==t.broadcaster_type&&(e.broadcaster_type=t.broadcaster_type,n=!0),e.save().then(e=>{s.findOne({twitchID:e.integration.twitch.etid}).then(t=>{if(t){let i=!1;t.owner!==e.name&&(n=!0,i=t.owner,t.owner=e.name),t.logo!==e.logo&&(n=!0,t.logo=e.logo),t.save().then(t=>{n?(new r({user:e._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),i&&(l.find({channel:i}).then(e=>{e.length>0&&e.forEach(e=>{e.channel=t.owner,e.save()})}),d.find({channel:i}).then(e=>{e.length>0&&e.forEach(e=>{e.channel=t.owner,e.save()})}),e.update={old:i,new:t.owner}),a(null,e)):a(null,e)})}else n&&new r({user:e._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),a(null,e)})})):new o({name:t.login,logo:t.profile_image_url,email:t.email,type:"user",channels:[],integration:{twitch:u},preferences:{autojoin:!0},new:!0}).save().then(e=>{a(null,e)})})}))},function(e,n){e.exports=require("passport-twitch.js")},function(e,n){e.exports=require("cookie-parser")},function(e,n){e.exports=require("body-parser")},function(e,n,t){e.exports={allowAccess:async(e,n,t)=>{var a;a=["http://www.streamachievements.com","http://streamachievements.com","https://www.streamachievements.com","https://streamachievements.com","https://4obxn0z3n8lbkjwfp8dw8ka6hoajc7.ext-twitch.tv"];var i=e.headers.origin;a.indexOf(i)>-1&&n.setHeader("Access-Control-Allow-Origin",i),n.header("Access-Control-Allow-Credentials",!0),n.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),t()}}},function(e,n,t){const a=t(2),i=t(1),o=t(4),s=t(6),r=new(t(5))(process.env.SCK);e.exports={searchChannels:(e,n)=>{let t=n.replace(/[^\w\s]/gi,""),i=new RegExp(t,"gi");a.find({owner:i}).sort({_id:-1}).limit(25).exec((n,t)=>{let a=t.map(e=>({owner:e.owner,logo:e.logo}));e.emit("channel-results",a)})},searchMembers:(e,n)=>{if(n&&n.value){let t=n.value.replace(/[^\w\s]/gi,""),o=new RegExp(t,"gi");a.findOne({owner:n.owner}).then(t=>{t&&i.find({_id:{$in:t.members},name:o}).sort({_id:-1}).limit(25).exec((a,i)=>{let o=i.map(e=>e.id),r={};s.find({userID:{$in:o},channelID:t.id,achievementID:n.aid}).then(n=>{n.forEach(e=>{r[e.userID]=!0});let t=i.map(e=>{let n=r[e.id]||!1;return{name:e.name,logo:e.logo,earned:n}});e.emit("members-retrieved",t)})})})}else console.log("> Issue in SearchMembers"),console.log(n)},searchMembersDetailed:(e,n)=>{if(n&&n.value){let t=n.value.replace(/[^\w\s]/gi,""),o=new RegExp(t,"gi");a.findOne({owner:n.owner}).then(n=>{n&&i.find({_id:{$in:n.members},name:o}).sort({_id:-1}).limit(25).exec((t,a)=>{let i=a.map(e=>{let t=e.channels.findIndex(e=>e.channelID===n.id);return{name:e.name,logo:e.logo,banned:e.channels[t].banned||!1}});e.emit("member-results",i)})})}else console.log("> Issue in SearchMembersDetailed"),console.log(n)},searchMod:(e,n)=>{if(n&&n.value){let t=n.value.replace(/[^\w\s]/gi,""),o=new RegExp(t,"gi");a.findOne({owner:n.owner}).then(n=>{n&&i.find({_id:{$in:n.members},name:o}).sort({_id:-1}).limit(25).exec((t,a)=>{let i=a.map(e=>{let t=n.moderators.findIndex(n=>n.uid===e.id);return{name:e.name,logo:e.logo,isMod:t>=0}});e.emit("members-retrieved",i)})})}else console.log("> Issue in SearchMod"),console.log(n)},storeSocket:(e,n)=>{if(e.handshake.query.uid)a.findOne({oid:e.handshake.query.uid}).then(t=>{if(t){let a=n.get(t.owner+"-OVERLAYS"),i=n.get("SOCKET-LOOKUP");i||(i={}),a?a.push(e.id):a=[e.id],n.set(t.owner+"-OVERLAYS",a),i[e.id]={name:t.owner,type:"OVERLAYS"},n.set("SOCKET-LOOKUP",i)}else e.emit("connect-issue","Issue while connecting")});else if(e.handshake.query.nid){let t=r.decrypt(e.handshake.query.nid);i.findById(t).then(t=>{if(t){let a=n.get(t.name+"-NOTIFICATIONS"),i=n.get("SOCKET-LOOKUP");i||(i={}),a?a.push(e.id):a=[e.id],n.set(t.name+"-NOTIFICATIONS",a),i[e.id]={name:t.name,type:"NOTIFICATIONS"},n.set("SOCKET-LOOKUP",i)}else console.log("Error: Unknown handshake connection for overlay pannel: "+e.handshake.query.nid)})}},removeSocket:(e,n)=>{let t=n.get("SOCKET-LOOKUP");if(t){let a=t[e.id];if(a){let i=n.get(`${a.name}-${a.type}`);if(i){let t=i.filter(n=>n!==e.id);n.set(`${a.name}-${a.type}`,t)}delete t[e.id],n.set("SOCKET-LOOKUP",t)}}},markNotificationRead:(e,n)=>{if(n.notification)o.findById(n.notification.id).then(n=>{n.status="read",n.save().then(n=>{e.emit("notification-read",n.id)})});else if(n.nid){let t=r.decrypt(n.nid);o.find({user:t}).then(n=>{n&&(n.forEach(e=>{"read"!==e.status&&(e.status="read",e.save())}),e.emit("notification-read","all"))})}},deleteNotification:(e,n)=>{o.findOne({_id:n.id}).then(t=>{t?o.findByIdAndRemove(n.id).then(n=>{e.emit("notification-removed",n.id)}):e.emit("notification-removed",n.id)})}}},function(e,n){e.exports=require("socket.io")},function(e,n,t){const a=t(3).Router(),i=t(5),o=t(10),s=new i(process.env.SCK),{isAuthorized:r,getTwitchAxiosInstance:l}=t(11),d=t(1),c=t(2),h=t(7),u=t(8),m=t(4),{emitBecomeGold:p,emitRemoveGold:g,emitConnectBot:f,emitDisconnectBot:v,emitChannelUpdate:w}=t(12);t(38);let y=t(39),b=y.patreon,_=(0,y.oauth)(process.env.PCID,process.env.PCS);const I="https://www.patreon.com/api/oauth2/v2/identity?include=memberships&fields%5Buser%5D=thumb_url,vanity";a.get("/twitch",async(e,n)=>{n.redirect(`https://id.twitch.tv/oauth2/authorize?response_type=code&client_id=${process.env.TCID}&redirect_uri=${process.env.TPR}&scope=user_read%20user:read:email`)}),a.get("/twitch/redirect",async(e,n)=>{if(e.query.code){let t,a=await o.post(`https://id.twitch.tv/oauth2/token?client_id=${process.env.TCID}&client_secret=${process.env.TCS}&code=${e.query.code}&grant_type=authorization_code&redirect_uri=${process.env.TPR}`),{access_token:i,refresh_token:r}=a.data;if(i&&r){let e=(await o.get("https://api.twitch.tv/helix/users",{headers:{"client-id":`${process.env.TCID}`,Authorization:`Bearer ${i}`}})).data.data[0],n=s.encrypt(i),a=s.encrypt(r),l={etid:e.id.toString(),token:n,refresh:a},p=await d.findOne({"integration.twitch.etid":l.etid}),g=!1;if(p){p.integration.twitch=l,p.name!==e.login&&(p.name=e.login,g=!0),p.logo!==e.profile_image_url&&(p.logo=e.profile_image_url,g=!0),p.email!==e.email&&(p.email=e.email,g=!0),p.broadcaster_type!==e.broadcaster_type&&(p.broadcaster_type=e.broadcaster_type,g=!0),t=await p.save();let n=await c.findOne({twitchID:t.integration.twitch.etid});if(n){let e=!1;n.owner!==t.name&&(g=!0,e=n.owner,n.owner=t.name),n.logo!==t.logo&&(g=!0,n.logo=t.logo);let a=await n.save();g&&(new m({user:t._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),e&&(h.find({channel:e}).then(e=>{e.length>0&&e.forEach(e=>{e.channel=a.owner,e.save()})}),u.find({channel:e}).then(e=>{e.length>0&&e.forEach(e=>{e.channel=a.owner,e.save()})}),t.update={old:e,new:a.owner}))}else g&&new m({user:t._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save()}else t=await new d({name:e.login,logo:e.profile_image_url,email:e.email,type:"user",channels:[],integration:{twitch:l},preferences:{autojoin:!0},new:!0}).save()}let l=s.encrypt(t.integration.twitch.etid);if(n.cookie("etid",l,{maxAge:144e5,httpOnly:!1,secure:!0,domain:"streamachievements.com"}),"user"!==t.type){let n=await c.findOne({owner:t.name});if(n){if(t.update&&t.update.old&&t.update.new){let a={old:t.update.old,new:t.update.new,fullAccess:n.gold||!1};w(e,a)}if(n.broadcaster_type){if(n.broadcaster_type.twitch!==t.broadcaster_type){n.broadcaster_type.twitch=t.broadcaster_type;await n.save()}}else{n.broadcaster_type={twitch:t.broadcaster_type};await n.save()}}}let f=t.integration.patreon;if(f&&"lifetime"!==f.status){let{at:a,rt:i,id:r,expires:l}=f;if(x(l)){let n=await O(e,f.rt);n&&(a=n.at,i=n.rt,l=n.expires)}let d=s.decrypt(a);if(r)try{let s=await o.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${d}`}}),h=s.data.data.attributes.patron_status,u=s.data.data.attributes.is_follower,v=s.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,w={id:f.id,thumb_url:f.thumb_url,vanity:f.vanity,at:a,rt:i,is_follower:u,status:h,is_gold:v,expires:l};t.integration.patreon?!t.integration.patreon.is_gold&&v?(p(e,t.name),new m({user:process.env.NOTICE_USER,logo:t.logo,message:`${t.name} just backed on Patreon!!`,date:Date.now(),type:"achievement",channel:t.name,status:"new"}).save()):t.integration.patreon.is_gold&&!v&&(new m({user:process.env.NOTICE_USER,logo:t.logo,message:`${t.name} stopped backing on Patreon`,date:Date.now(),type:"achievement",channel:t.name,status:"new"}).save(),g(e,t.name)):v?(new m({user:process.env.NOTICE_USER,logo:t.logo,message:`${t.name} just backed on Patreon!!`,date:Date.now(),type:"achievement",channel:t.name,status:"new"}).save(),p(e,t.name)):(new m({user:process.env.NOTICE_USER,logo:t.logo,message:`${t.name} stopped backing on Patreon`,date:Date.now(),type:"achievement",channel:t.name,status:"new"}).save(),g(e,t.name));let y=Object.assign({},t.integration);y.patreon={...w},t.integration=y,t.lastLogin=Date.now();let b=await t.save();if("verified"===b.type||"admin"===b.type){let e=await c.findOne({owner:t.name});e.gold!==b.integration.patreon.is_gold&&(e.gold=b.integration.patreon.is_gold,e.save())}D(e,n)}catch(a){if(console.log(a.response),401===a.response.status||403===a.response.status)n.redirect("/auth/patreon");else if(404===a.response.status){let a=Object.assign({},t.integration),i={id:null,thumb_url:a.patreon.thumb_url,vanity:a.patreon.vanity,at:a.patreon.at,rt:a.patreon.rt,is_follower:null,status:null,is_gold:null,expires:a.patreon.expires};a.patreon={...i},t.integration=a,t.lastLogin=Date.now();let o=await t.save();if("verified"===o.type||"admin"===o.type){let e=await c.findOne({owner:t.name});e.gold!==o.integration.patreon.is_gold&&(e.gold=!1,e.save())}D(e,n)}}else if(!(r=t.integration.patreon.id)){t.lastLogin=Date.now();await t.save();D(e,n)}}else{t.lastLogin=Date.now();t.save();D(e,n)}}}),a.get("/streamlabs",r,(e,n)=>{let t="https://www.streamlabs.com/api/v1.0/authorize?";t+="client_id="+process.env.SLCID+"&",t+="redirect_uri="+process.env.SLCPR+"&",t+="response_type=code&scope=socket.token",n.redirect(t)}),a.get("/streamlabs/redirect",r,(e,n)=>{o.post("https://streamlabs.com/api/v1.0/token",{grant_type:"authorization_code",client_id:process.env.SLCID,client_secret:process.env.SLCCS,code:e.query.code,redirect_uri:process.env.SLCPR}).then(t=>{o.get("https://streamlabs.com/api/v1.0/socket/token?access_token="+t.data.access_token).then(t=>{let a=s.encrypt(t.data.socket_token);c.findOne({owner:e.user.name}).then(t=>{let i;(i=t.integration?Object.assign({},t.integration):{}).streamlabs={st:a},t.integration=i,t.save().then(t=>{f(e,{channel:e.user.name,st:t.integration.streamlabs.st,bot:"streamlabs"}),n.redirect(process.env.WEB_DOMAIN+"profile?tab=integration")})})})})}),a.get("/patreon",r,(e,n)=>{let t="https://www.patreon.com/oauth2/authorize?";t+="response_type=code&",t+="client_id="+process.env.PCID+"&",t+="redirect_uri="+process.env.PPR,t+="&scope=campaigns%20identity%20identity%5Bemail%5D%20campaigns.members",n.redirect(t)}),a.get("/patreon/redirect",r,(e,n)=>{let t=e.query.code;return _.getTokens(t,process.env.PPR).then(n=>{b(n.access_token);let t=e.cookies.etid;return new Promise((e,a)=>{let i,r,l=s.encrypt(n.access_token),d=s.encrypt(n.refresh_token),c=new Date,h=(new Date).setDate(c.getDate()+14);o.get(I,{headers:{Authorization:`Bearer ${n.access_token}`}}).then(a=>{if(i=a.data.data.attributes.vanity,r=a.data.data.attributes.thumb_url,a.data.included){let s=a.data.included[0].id;o.get(`https://www.patreon.com/api/oauth2/v2/members/${s}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${n.access_token}`}}).then(n=>{let a=n.data.data.attributes.patron_status,o=n.data.data.attributes.is_follower,c=n.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0;e({id:s,thumb_url:r,vanity:i,at:l,rt:d,etid:t,is_follower:o,status:a,is_gold:c,expires:h})})}else e({thumb_url:r,vanity:i,at:l,rt:d,etid:t,expires:h})})})}).then(t=>{let{id:a,thumb_url:i,vanity:o,at:s,rt:r,etid:l,is_follower:d,status:h,is_gold:u,expires:m}=t,f=Object.assign({},e.user.integration);f.patreon={id:a,thumb_url:i,vanity:o,at:s,rt:r,is_follower:d,status:h,is_gold:u,expires:m},u?p(e,e.user.name):g(e,e.user.name),e.user.integration=f,e.user.save().then(t=>{"verified"===t.type&&c.findOne({owner:e.user.name}).then(e=>{e.gold!==u&&(e.gold=u,e.save())}),n.redirect(process.env.WEB_DOMAIN+"profile?tab=integration")})})}),a.post("/twitch/sync",r,(e,n)=>{j(e,e.user,e.cookies.etid).then(e=>{n.json(e)})}),a.post("/patreon/sync",r,(e,n)=>{S(e,e.cookies.etid).then(e=>{n.json(e)})}),a.post("/streamlabs/unlink",r,(e,n)=>{c.findOne({owner:e.user.name}).then(t=>{let a=Object.assign({},t.integration);delete a.streamlabs,t.integration=a,t.save().then(t=>{v(e,{channel:e.user.name,bot:"streamlabs"}),n.json({success:!0,service:"streamlabs"})})})}),a.post("/patreon/unlink",r,(e,n)=>{let t=Object.assign({},e.user.integration);delete t.patreon,"verified"===e.user.type&&g(e,e.user.name),e.user.integration=t,e.user.save().then(t=>{c.findOne({owner:e.user.name}).then(e=>{e?(e.icons={default:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",hidden:"https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png"},e.save().then(e=>{n.json({success:!0,service:"patreon"})})):n.json({success:!0,service:"patreon"})})})});let D=(e,n)=>{let t=e.cookies._ru;if(t){let e=s.decrypt(t);n.clearCookie("_ru",{domain:"streamachievements.com"}),e?0!=e.indexOf(process.env.WEB_DOMAIN)?n.redirect(process.env.WEB_DOMAIN+"home"):n.redirect(e):n.redirect(process.env.WEB_DOMAIN+"home")}else n.redirect(process.env.WEB_DOMAIN+"home")},x=e=>{let n=new Date(e);return new Date>n},O=(e,n)=>new Promise((t,a)=>{let i=s.decrypt(n);o.post(`https://www.patreon.com/api/oauth2/token?grant_type=refresh_token&refresh_token=${i}&client_id=${process.env.PCID}&client_secret=${process.env.PCS}`).then(n=>{let a=s.encrypt(n.data.access_token),i=s.encrypt(n.data.refresh_token),o=new Date,r=(new Date).setDate(o.getDate()+14),l=Object.assign({},e.user.integration);l.patreon.at=a,l.patreon.rt=i,l.patreon.expires=r,e.user.integration=l,e.user.save().then(e=>{t({at:a,rt:i,expires:r})})}).catch(e=>{t(null)})}),j=(e,n,t)=>n.integration.twitch?new Promise((t,a)=>{l().then(a=>{a.get(`https://api.twitch.tv/helix/users/?id=${n.integration.twitch.etid}`).then(a=>{n.name=a.data.data[0].login,n.logo=a.data.data[0].profile_image_url,n.save().then(n=>{c.findOne({twitchID:n.integration.twitch.etid}).then(a=>{if(a){let i=!1;a.owner!==n.name&&(i=a.owner,a.owner=n.name),a.logo!==n.logo&&(a.logo=n.logo),i&&(h.find({channel:i}).then(e=>{e.length>0&&e.forEach(e=>{e.channel=n.name,e.save()})}),u.find({channel:i}).then(e=>{e.length>0&&e.forEach(e=>{e.channel=n.name,e.save()})}),w(e,{old:i,new:n.name,fullAccess:a.gold||!1})),a.save().then(e=>{t({username:n.name,logo:n.logo})})}else t({username:n.name,logo:n.logo})})})})})}):Promise.resolve(),S=(e,n)=>e.user.integration.patreon?new Promise((t,a)=>{let i,{at:r,rt:l,id:d,expires:h}=e.user.integration.patreon;(i=x(h)?new Promise((n,t)=>{O(e.user,l).then(e=>{e&&(r=e.at,l=e.rt,h=e.expires),n()})}):Promise.resolve()).then(()=>{let a=s.decrypt(r);o.get(I,{headers:{Authorization:`Bearer ${a}`}}).then(i=>{if(vanity=i.data.data.attributes.vanity,thumb_url=i.data.data.attributes.thumb_url,i.data.included){let s=i.data.included[0].id;o.get(`https://www.patreon.com/api/oauth2/v2/members/${s}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${a}`}}).then(a=>{let i=a.data.data.attributes.patron_status,o=a.data.data.attributes.is_follower,d=a.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,u={id:s,thumb_url:thumb_url,vanity:vanity,at:r,rt:l,etid:n,is_follower:o,status:i,is_gold:d,expires:h};!e.user.integration.patreon.is_gold&&d?(p(e,e.user.name),new m({user:process.env.NOTICE_USER,logo:e.user.logo,message:`${e.user.name} just backed on Patreon!!`,date:Date.now(),type:"achievement",channel:e.user.name,status:"new"}).save()):e.user.integration.patreon.is_gold&&!d&&g(e,e.user.name);let f=Object.assign({},e.user.integration);f.patreon={...u},e.user.integration=f,e.user.save().then(e=>{"verified"===e.type&&c.findOne({owner:e.name}).then(n=>{n.gold!==e.integration.patreon.is_gold&&(n.gold=e.integration.patreon.is_gold,n.save())}),t({vanity:e.integration.patreon.vanity,thumb_url:e.integration.patreon.thumb_url,follower:e.integration.patreon.is_follower,status:e.integration.patreon.status,gold:e.integration.patreon.is_gold})})})}else t({thumb_url:thumb_url,vanity:vanity,at:r,rt:l,etid:n})})})}):Promise.resolve();a.get("/logout",(e,n)=>{e.logout(),n.clearCookie("etid",{domain:"streamachievements.com"}),n.redirect(process.env.WEB_DOMAIN)}),e.exports=a},function(e,n,t){const a=t(0);var i=new(0,a.Schema)({at:String,expires_in:Number,env:String});const o=a.model("ttkn",i);e.exports=o},function(e,n,t){const a=new(t(5))(process.env.SCK),i={"/api/profile":"profile","/api/achievement/retrieve":"dashboard","/api/channel/dashboard":"dashboard","/api/channel/retrieve":"channel/{channel}","/api/channel/mod":"mod","/api/channel/mod/retrieve":"mod/{channel}","/api/achievement/mod/retrieve":"mod/{channel}"};e.exports=(e,n)=>{let{originalUrl:t,params:o,query:s,headers:r}=e,l=process.env.WEB_DOMAIN;if(r.origin+"/"===process.env.WEB_DOMAIN){let e=t.split("?")[0];e&&(l+=i[e],l=s&&s.channel?l.replace(new RegExp("{channel}","gi"),s.channel):l.replace(new RegExp("/{channel}","gi"),""),n.cookie("_ru",a.encrypt(l),{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}))}}},function(e,n){e.exports=require("url")},function(e,n){e.exports=require("patreon")},function(e,n,t){const a=t(3).Router(),i=t(9),o=t(1),s=t(2),r=t(4),l=t(7),d=t(6),c=t(13),h=t(0),u=new(t(5))(process.env.SCK);let m=t(41),p=t(43),g=t(44),f=t(46),v=t(48);const{isAuthorized:w,isAdminAuthorized:y}=t(11),{emitTestListener:b,emitNewChannel:_}=t(12);a.use("/channel",m),a.use("/achievement",p),a.use("/irc",g),a.use("/admin",f),a.use("/extension",v),a.get("/token",i.authenticate("twitch"),(e,n)=>n.json({success:!0,data:e.user.id}));let I=!1;a.get("/users",y,(e,n)=>{c.find({}).then(e=>{let t={},a=e.map(e=>(t[e.uid]=e.token,e.uid));o.find({_id:{$in:a}}).then(e=>{let a=e.map(e=>({name:e.name,logo:e.logo,status:"not issued"===t[e.id]?"new":"pending"}));n.json({users:a})})})}),a.get("/user",w,(e,n)=>{let t,a,i=u.encrypt(e.user._id),o=!1,l=!0;if(e.user.consent&&void 0!==e.user.consent.needed&&(l=e.user.consent.needed),setTimeout(()=>{I&&(n.status(500),n.json({message:"Internal Server Issue"}))},1e4),e.user.integration.patreon){let n=e.user.integration.patreon;t={vanity:n.vanity,thumb_url:n.thumb_url,follower:n.is_follower,status:n.status,gold:n.is_gold}}else t=!1;r.countDocuments({user:e.user._id,status:"new"}).exec().then(d=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(h=>{a=!!(h&&h.integration&&h.integration.streamlabs),s.find({"moderators.uid":e.user._id}).then(s=>{if(s.length>0&&(o=!0),I=!1,h)n.json({username:e.user.name,logo:e.user.logo,patreon:t,streamlabs:a,status:"verified",type:e.user.type,preferences:e.user.preferences,notificationCount:d,uid:i,isMod:o,new:e.user.new,terms:l});else{let s="viewer";c.findOne({uid:e.user._id}).then(c=>{let h={username:e.user.name,logo:e.user.logo,patreon:t,streamlabs:a,status:s,type:e.user.type,preferences:e.user.preferences,notificationCount:d,uid:i,isMod:o,new:e.user.new,terms:l};c&&(s="not issued"===c.token?"review":"pending",c.hasExpired()&&!c.notified&&new r({user:e.user._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"It has been 48 hours since your confirmation email was sent, and your confirmation token has expired! Click here to generate a new one, so you can get started with your channel today!",date:Date.now(),type:"token",status:"new"}).save().then(e=>{c.notified=!0,c.save()})),n.json(h)})}})})})}),a.get("/user/catch",w,(e,n)=>{let t=!1;void 0!==e.user.consent&&void 0!==e.user.consent.needed&&e.user.consent.needed||(t=!0),d.find({userID:e.user.integration.twitch.etid}).then(a=>{if(a.length>0){let i=a.map(e=>e.channelID);s.find({_id:{$in:i}}).then(i=>{let o=i.map(e=>({name:e.owner,logo:e.logo,termsNeeded:t})),s=a.map(n=>new Promise((t,a)=>{n.userID=e.user.id,n.save().then(()=>{t()})}));Promise.all(s).then(()=>{n.json({catch:!0,channels:o,termsNeeded:t})})})}else n.json({catch:!1,channels:[],termsNeeded:t})})}),a.post("/user/catch",w,(e,n)=>{e.user.new=!1,e.user.preferences.autojoin=e.body.autojoin,e.user.consent=e.user.consent||{},e.user.consent.needed=!1,e.user.consent.date=Date.now(),e.user.save().then(e=>{n.json({})})}),a.get("/profile",w,(e,n)=>{let t=e.user.channels.map(e=>new h.Types.ObjectId(e.channelID));s.find({_id:{$in:t}}).then(t=>{let a=t.map(n=>{e.user.channels.filter(e=>e.channelID===n.id);return new Promise((t,a)=>{d.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let a=0;l.countDocuments({channel:n.owner}).then(i=>{i>0&&(a=Math.round(e/i*100)),t({logo:n.logo,owner:n.owner,percentage:a})})})})}),i=new Promise((n,t)=>{r.countDocuments({user:e.user._id}).exec().then(t=>{r.find({user:e.user._id}).sort({date:-1}).limit(15).exec((e,t)=>{if(t){let e=!1,a=t.map(e=>({id:e._id,logo:e.logo,message:e.message,date:e.date,type:e.type,channel:e.channel,status:e.status}));15===a.length&&(e=15),n({notifications:a,next:e})}else n([])})})});Promise.all(a).then(t=>{i.then(a=>{e.user.preferences?n.json({channels:t,preferences:e.user.preferences,notifications:a.notifications,next:a.next}):(e.user.preferences={autojoin:!1},e.user.save().then(e=>{n.json({channels:t,preferences:e.preferences,notifications:a.notifications,next:a.next})}))})})})}),a.get("/notifications",w,(e,n)=>{let t=parseInt(e.query.next);r.find({user:e.user._id}).sort({date:-1}).skip(t).limit(15).exec((e,t)=>{if(t){let e=!1,a=t.map(e=>({id:e._id,logo:e.logo,message:e.message,date:e.date,type:e.type,channel:e.channel,status:e.status}));15===a.length&&(e+=15),n.json({notifications:a,next:e})}else n.json([])})}),a.post("/profile/preferences",w,(e,n)=>{let t={...e.user.preferences}||{};t={...e.body.preferences},e.user.preferences=t,e.user.save().then(t=>{n.json(e.user.preferences)})}),a.post("/test",y,(e,n)=>{b(e,{type:"follow",for:"twitch_account",message:[{_id:"cdf271793355b2c542b2bcbb32c35ba7",id:"462302230",name:"arda_celikkanat",priority:10}],event_id:"evt_5ed407e33bf25ba5d4a1d96ffcd034de"}),n.json({})}),e.exports=a},function(e,n,t){const a=t(3).Router(),i=(t(9),t(15)),{isAuthorized:o,isModAuthorized:s,isAdminAuthorized:r,isExtensionAuthorized:l,getTwitchAxiosInstance:d}=t(11),c=t(0),h=(new(t(5))(process.env.SCK),t(17)),u=t(18),m=t(19),{build:p}=(t(10),t(20)),g=t(1),f=t(2),v=t(7),w=t(8),y=t(14),b=t(13),_=t(4),I=t(6),D=t(21),{uploadImage:x,destroyImage:O}=t(16),{emitNewChannel:j,emitOverlaySettingsUpdate:S,emitOverlayAlert:k,emitNotificationsUpdate:T,emitDeleteChannel:E,emitAwardedAchievement:C}=t(12),A="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",$="https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png",P=/^https:\/\/res\.cloudinary\.com\/phirehero\/.*\.(png|jpg|jpeg)$/gm,N=t(22);a.post("/delete",o,(e,n)=>{!async function(e,n){let t=await f.findOne({owner:e.user.name});if(t){await I.deleteMany({channelID:t.id}),await w.deleteMany({channel:t.owner}),await v.deleteMany({channel:t.owner}),await y.deleteMany({channel:t.owner}),await f.deleteOne({owner:e.user.name});e.user.type="user",e.user.delegate=[];await e.user.save();E(e,e.user.name),n.json({delete:!0})}else n.json({delete:!1,err:"Channel not found"})}(e,n)}),a.post("/leave",o,(e,n)=>{f.findOne({owner:e.body.channel}).then(t=>{if(t){let a,i=t.members;i.length>0&&i.includes(e.user.id)?(a=i.findIndex(n=>{e.user.id}),i.splice(a,1),t.save().then(t=>{a=0,a=e.user.channels.findIndex(e=>e.channelID===t.id),e.user.channels.splice(a,1),e.user.save().then(e=>{n.json({leave:!0})})})):n.send("User isn't a part of this channel")}else n.send("Channel doesn't exist")})}),a.post("/setup/join",o,(e,n)=>{f.findOne({owner:e.body.channel}).then(t=>{if(t){let a=e.user.channels.some(e=>e.channelID===t.id),i=t.members.includes(e.user.id);if(a)i?n.json({user:e.user,channel:t}):(t.members.push(e.user.id),t.save().then(t=>{n.json({user:e.user,channel:t})}));else if(i)a?n.json({user:e.user,channel:t}):(e.user.channels.push({channelID:t.id,sync:!0,banned:!1}),e.user.save().then(e=>{n.json({user:e,channel:t})}));else{let a={channelID:t.id,sync:!0,banned:!1};e.user.channels.push(a),e.user.save().then(a=>{t.members.push(a.id),t.save().then(t=>{I.countDocuments({userID:e.user.id,channelID:t.id}).then(e=>{let a=0;v.countDocuments({channel:t.owner}).then(i=>{i>0&&(a=Math.round(e/i*100)),n.json({owner:t.owner,logo:t.logo,percentage:a})})})})})}}else n.status(405),n.send("Channel requested to join does not exist!")})}),a.post("/join",o,(e,n)=>{f.findOne({owner:e.body.channel}).then(t=>{if(t){let a=e.user.channels.some(e=>e.channelID===t.id),i=t.members.includes(e.user.id);if(a)i?n.json({user:e.user,channel:t}):(t.members.push(e.user.id),t.save().then(t=>{n.json({user:e.user,channel:t})}));else if(i)a?n.json({user:e.user,channel:t}):(e.user.channels.push({channelID:t.id,sync:!0,banned:!1}),e.user.save().then(e=>{n.json({user:e,channel:t})}));else{let a={channelID:t.id,sync:!0,banned:!1};e.user.channels.push(a),e.user.save().then(e=>{t.members.push(e.id),t.save().then(t=>{n.json({user:e,channel:t})})})}}else n.status(405),n.send("Channel requested to join does not exist!")})}),a.get("/list",(e,n)=>{f.find({},(e,t)=>{n.json(t)})}),a.get("/extension/list",l,(e,n)=>{f.find({}).then(e=>{n.json(e)})}),a.get("/retrieve",o,(e,n)=>{let t=e.query.channel;if(e.query.bb&&f.find({watcher:!0}).then(e=>{e.map(e=>({name:e.owner,listeners:e.listeners}))}),t){let a=!1;f.findOne({owner:t}).then(i=>{if(i){if(e.user.favorites){e.user.favorites.findIndex(e=>e===i.id)>=0&&(a=!0)}v.find({channel:t}).then(o=>{let s,r,l,d,c=i.members.includes(e.user.id);(d=new Promise((n,t)=>{let a=e.user.channels.findIndex(e=>e.channelID===i.id);l=a>=0&&e.user.channels[a].banned;let d={userID:e.user.id,channelID:i.id};e.user.new&&(d.userID={$in:[e.user.id,e.user.integration.twitch.etid]}),I.find(d).then(e=>{s=e.map(e=>({aid:e.achievementID,date:e.earned})),r=o.map(e=>{let n=Object.assign({},e._doc),t=s.findIndex(e=>e.aid===n.uid);return t>=0?(n.earned=!0,n.earnedDate=s[t].date):n.earned=!1,n}),n()})})).then(()=>{let e=r.map(e=>{let n=e._doc?{...e._doc}:e;return delete n.__v,delete n._id,n});e.sort((e,n)=>e.order>n.order?1:-1),g.findOne({name:t}).then(t=>{if(t){let o=!1;t.integration.patreon&&t.integration.patreon.is_gold&&(o=!0);let s={...i._doc};delete s.__v,delete s._id,n.json({channel:s,achievements:e,joined:c,fullAccess:o,favorited:a,banned:l})}else n.json({error:"Channel doesn't exist"})})})})}else n.json({error:"No channel found for the name: "+t})})}}),a.post("/update",async(e,n)=>{let t=e.body,a=[];await B(t,async e=>{let n=!1,t=await g.findOne({name:e});if(t){let i=await d(),o=await i.get(`https://api.twitch.tv/helix/users/?id=${t.integration.twitch.etid}`);t.name=o.data.data[0].login,t.logo=o.data.data[0].profile_image_url;let s=await t.save(),r=await f.findOne({twitchID:s.integration.twitch.etid});if(r){if(r.owner!==s.name&&(n=!0,r.owner=s.name),r.logo!==s.logo&&(n=!0,r.logo=s.logo),n){await r.save()}let t=await v.find({channel:e});t.length>0&&B(t,e=>{e.channel=s.name,e.save()});let i=await w.find({channel:e});i.length>0&&B(i,e=>{e.channel=s.name,e.save()}),a.push({old:e,new:s.name})}}}),n.json({updatedChannels:a})}),a.get("/dashboard",o,(e,n)=>{f.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let t=new Promise((n,t)=>{v.find({channel:e.owner}).then(e=>{if(e){let t=e.map(e=>e.listener);w.find({_id:{$in:t}}).then(t=>{let a=e.map(e=>{let n=t.find(n=>n.id===e.listener);if(n){return{uid:e.uid,title:e.title,description:e.description,shortDescription:e.shortDescription,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,order:e.order,unlocked:n.unlocked||!1,achType:n.achType}}return e});a.sort((e,n)=>e.order>n.order?1:-1),n(a)})}else n(e)})}),a=new Promise((n,t)=>{y.find({channel:e.owner}).then(e=>{n(e?{gallery:e}:{gallery:[]})})}),o=new Promise((n,t)=>{let a=e.moderators.map(e=>e.uid);g.find({_id:{$in:a}}).then(t=>{let a=t.map(n=>{let t=e.moderators.find(e=>e.uid===n.id);return{id:n.id,name:n.name,logo:n.logo,permissions:t.permissions}});n(a)})}),s=new Promise((n,t)=>{D.find({channelID:e.id}).sort({_id:-1}).limit(30).exec((e,t)=>{let a=t.map(e=>({member:e.member,achievement:e.achievement,date:e.date}));n(a)})});Promise.all([t,a,o,s]).then(t=>{let a;if(e.oid)if(e.overlay&&0!==Object.keys(e.overlay).length)if(e.referral&&e.referral.code)delete(a={...e._doc}).__v,delete a._id,n.json({channel:a,achievements:t[0],images:t[1],moderators:t[2],events:t[3]});else{let i="";for(i+=e.owner.toUpperCase();i.length<6;)i+="1";f.find({"referral.code":{$regex:i,$options:"i"}}).then(o=>{o.length>0&&(i+=o.length+1),e.referral={referred:0,code:i},e.save().then(e=>{delete(a={...e._doc}).__v,delete a._id,n.json({channel:a,achievements:t[0],images:t[1],moderators:t[2],events:t[3]})})})}else e.overlay=N,e.save().then(e=>{delete(a={...e._doc}).__v,delete a._id,n.json({channel:a,achievements:t[0],images:t[1],moderators:t[2],events:t[3]})});else e.oid=i(),e.overlay&&0!==Object.keys(e.overlay).length||(e.overlay=N),e.save().then(e=>{delete(a={...e._doc}).__v,delete a._id,n.json({channel:a,achievements:t[0],images:t[1],moderators:t[2],events:t[3]})})})}else n.json({error:"User doesn't manage a channel"})})}),a.post("/mod",o,(e,n)=>{let t=e.body.mods,a=[];f.findOne({owner:e.user.name}).then(e=>{g.find({name:{$in:t}}).then(t=>{let i=e.moderators;t.forEach(e=>{i.push({uid:e.id,permissions:{channel:!0,chat:!0}}),a.push({name:e.name,logo:e.logo,permissions:{channel:!0,chat:!0}})}),e.moderators=i,e.save().then(e=>{n.json({moderators:a})})})})}),a.post("/mod/revoke",o,(e,n)=>{let t=e.body.mod;f.findOne({owner:e.user.name}).then(e=>{e&&g.findOne({name:t}).then(t=>{if(t){let a=e.moderators,i=a.findIndex(e=>e.uid===t.id);i>=0?(a.splice(i,1),e.moderators=a,e.save().then(e=>{n.json({removed:i})})):n.json({error:"Error removing mod"})}})})}),a.post("/mod/preferences",s,(e,n)=>{q(e,n,e.channel)}),a.post("/preferences",o,(e,n)=>{f.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?q(e,n,t):n.json({error:"Issue updating preferences"})})});let q=async(e,n,t)=>{let a,i,o,s;if(e.body.defaultIcon&&m(e.body.defaultIcon)?(s=await x(e.body.defaultIcon,e.body.defaultIconName,e.body.defaultIconType,t.owner,"default")).error?n.json({error:s.error}):a=s.url:e.body.defaultImage&&P.test(e.body.defaultImage)&&(a=e.body.defaultImage),e.body.hiddenIcon&&m(e.body.hiddenIcon)?(s=await x(e.body.hiddenIcon,e.body.hiddenIconName,e.body.hiddenIconType,t.owner,"hidden")).error?n.json({error:s.error}):i=s.url:e.body.hiddenImage&&P.test(e.body.hiddenImage)&&(i=e.body.hiddenImage),e.body.overlay){let{chat:a,chatMessage:i,sfx:r,enterEffect:l,exitEffect:d,duration:c,volume:h,delay:u,custom:p,graphic:g,graphicName:f,graphicType:v,layout:w,textColor:y,titleFontSize:b,showDescription:_,descFontSize:I}=e.body.overlay;if(o=t.overlay||{},void 0!==a&&(o.chat=a),void 0!==i&&(o.chatMessage=i),r&&(o.sfx=process.env.WEB_DOMAIN+"sounds/achievement."+r+".mp3"),l&&(o.enterEffect=l),d&&(o.exitEffect=d),c&&(o.duration=c),h&&(o.volume=h),u&&(o.delay=u),t.gold){if(void 0!==p&&(o.custom=p),g&&m(g)){let e=await x(g,f,v,t.owner,"graphic");e.error?n.json({error:s.error}):o.graphic=e.url}else g&&P.test(g)?o.graphic=g:o.graphic=void 0;w&&(o.layout=w),y&&(o.textColor=y),b&&(o.titleFontSize=b),void 0!==_&&(o.showDescription=_),I&&(o.descFontSize=I)}}let r={default:t.icons.default,hidden:t.icons.hidden};a&&(r.default=a),i&&(r.hidden=i),o&&Object.keys(o).length>0&&(t.overlay=o,updateSettings=!0),Object.keys(N).forEach(e=>{t.overlay[e]&&void 0!==t.overlay[e]||(t.overlay[e]=N[e])}),t.icons=r;let l=await t.save();updateSettings&&S(e,{channel:l.owner,overlay:l.overlay});let d=await y.find({channel:t.owner});d?n.json({channel:l,images:{gallery:d}}):n.json({channel:l})};a.post("/image",o,(e,n)=>{let t=e.body.image;O(t.cloudID).then(a=>{let i,o=new Promise((n,a)=>{""!==t.achievementID?v.findOne({_id:t.achievementID}).then(t=>{t?(t.icon="",t.save().then(()=>{v.find({channel:e.user.name}).then(e=>{n(e)})})):n()}):n()}),s=new Promise((n,a)=>{y.deleteOne({_id:t._id}).then(t=>{y.find({channel:e.user.name}).then(e=>{console.log("\nGetting all images after delete"),n(e?{gallery:e,default:""}:{gallery:[],default:""})})})});i="hidden"===t.type||"default"===t.type?new Promise((n,a)=>{f.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{let a={...e.icons};"default"===t.type?a.default=A:"hidden"===t.type&&(a.hidden=$),e.icons=a,e.save().then(e=>{n(e)})})}):Promise.resolve(),Promise.all([o,s,i]).then(e=>{let t={images:e[1]};e[0]&&(t.achievements=e[0]),e[2]&&(t.channel=e[2]),n.json(t)})})}),a.get("/user",o,(e,n)=>{let t,a,i,o={};e.user.favorites&&e.user.favorites.forEach(e=>{o[e]=!0});let s=e.user.favorites.map(e=>new c.Types.ObjectId(e)),r=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new c.Types.ObjectId(e.channelID)),l=new Promise((n,a)=>{f.find({_id:{$in:s}}).exec((a,i)=>{let o=i.map(n=>new Promise((t,a)=>{I.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let a=0;v.countDocuments({channel:n.owner}).then(i=>{i>0&&(a=Math.round(e/i*100)),t({logo:n.logo,owner:n.owner,percentage:a,favorite:!0})})})}));Promise.all(o).then(e=>{t=e,n()})})}),d=new Promise((n,t)=>{f.find({_id:{$in:r}}).limit(15).exec((t,o)=>{let s=o.map(n=>new Promise((t,a)=>{I.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let a=0;v.countDocuments({channel:n.owner}).then(i=>{i>0&&(a=Math.round(e/i*100)),t({logo:n.logo,owner:n.owner,percentage:a,favorite:!1})})})}));Promise.all(s).then(t=>{a=t,i=t.length<e.user.channels.length?t.length:-1,n()})})});Promise.all([l,d]).then(e=>{n.json({channels:t.concat(a),offset:i})})}),a.get("/member/select",o,(e,n)=>{g.findOne({name:e.query.uid}).then(t=>{t&&f.findOne({owner:e.query.owner}).then(e=>{e&&I.find({userID:t.id,channelID:e.id},["achievementID"]).then(a=>{let i=t.channels.findIndex(n=>n.channelID===e.id),o=t.channels[i].banned,s=a.map(e=>e.achievementID);n.json({name:t.name,logo:t.logo,achievements:s,banned:o})})})})}),a.post("/member/save",o,(e,n)=>{let t=Date.now();g.findOne({name:e.body.id}).then(a=>{a&&f.findOne({owner:e.user.name}).then(i=>{if(i){let o=a.channels.findIndex(e=>e.channelID===i.id);if(o>=0&&!a.channels[o].banned){let s=e.body.achievements;I.find({achievementID:{$in:s},userID:a.id,channelID:i.id}).then(s=>{let r=s.map(e=>e.achievementID);e.body.achievements.map(e=>{r.indexOf(e)<0&&new I({userID:a.id,channelID:i.id,achievementID:e,earned:t,first:!1}).save()});I.deleteMany({achievementID:{$in:r},userID:a.id,channelID:i.id}).then(t=>{new _({user:a._id,logo:i.logo,message:"Your achievements have been adjusted by the owner of the channel!",date:Date.now(),type:"achievement",channel:i.owner,status:"new"}).save().then(t=>{T(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:a.name}),I.find({userID:a.id,channelID:i.id},["achievementID"]).then(e=>{let t=e.map(e=>e.achievementID);n.json({member:{name:a.name,logo:a.logo,achievements:t,banned:a.channels[o].banned}})})})})})}}})})}),a.post("/member/reset",o,(e,n)=>{g.findOne({name:e.body.id}).then(t=>{t?f.findOne({owner:e.user.name}).then(a=>{a&&I.deleteMany({userID:t.id,channelID:a.id}).then(i=>{new _({user:t._id,logo:a.logo,message:"Your achievements have been adjusted by the owner of the channel!",date:Date.now(),type:"achievement",channel:a.owner,status:"new"}).save().then(n=>{T(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:t.name})}),n.json({member:{name:t.name,logo:t.logo,achievements:[]}})})}):n.json({error:"Unexpected error occured"})})}),a.post("/member/ban",o,(e,n)=>{g.findOne({name:e.body.id}).then(t=>{t?f.findOne({owner:e.user.name}).then(a=>{if(a){let i=t.channels.findIndex(e=>e.channelID===a.id);i>=0&&(t.channels[i].banned=!0,e.body.resetAchievements&&I.deleteMany({userID:t.id,channelID:a.id}).then(e=>{}),t.save().then(e=>{I.find({userID:t.id,channelID:a.id},["achievementID"]).then(t=>{let a=t.map(e=>e.achievementID);n.json({member:{name:e.name,logo:e.logo,achievements:a,banned:!0}})})}))}}):n.json({error:"Unexpected error occured"})})}),a.post("/member/unban",o,(e,n)=>{g.findOne({name:e.body.id}).then(t=>{t?f.findOne({owner:e.user.name}).then(e=>{if(e){let a=t.channels.findIndex(n=>n.channelID===e.id);a>=0&&(t.channels[a].banned=!1,t.save().then(a=>{I.find({userID:t.id,channelID:e.id},["achievementID"]).then(e=>{let t=e.map(e=>e.achievementID);n.json({member:{name:a.name,logo:a.logo,achievements:t,banned:!1}})})}))}}):n.json({error:"Unexpected error occured"})})}),a.get("/user/retrieve",o,(e,n)=>{let t=parseInt(e.query.offset),a=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new c.Types.ObjectId(e.channelID));f.find({_id:{$in:a}}).skip(t).limit(15).exec((a,i)=>{let o=i.map(n=>{e.user.channels.find(e=>e.channelID===n.id);return new Promise((t,a)=>{I.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let a=0;v.countDocuments({channel:n.owner}).then(i=>{i>0&&(a=Math.round(e/i*100)),t({logo:n.logo,owner:n.owner,percentage:a,favorite:!1})})})})});Promise.all(o).then(a=>{t=a.length+t<e.user.channels.length?a.length+t:-1,n.json({channels:a,offset:t})})})}),a.post("/signup",o,(e,n)=>{let t=e.body.referral,a=new b({uid:e.user._id,token:"not issued",referral:t,notified:!1}),i=h.randomBytes(16).toString("hex");a.token=i,a.created=Date.now(),a.save().then(t=>{let a=e.user.email;var o={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},s=u.createTransport({service:"gmail",auth:o});const r={from:process.env.GML,to:a,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">You are ready to start creating achievements that your community will be able to hunt for and earn!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+i+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of achievements, and can\'t wait to see how much your community engages and enjoys them!</p></div>'};s.sendMail(r,function(t,a){t?console.log(t):new _({user:e.user._id,logo:A,message:"Your channel is ready to begin! Go check your email for your confirmation code, and don't forget to check your spam folder!",date:Date.now(),type:"confirmation",status:"new"}).save().then(n=>{T(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,status:n.status},user:e.user.name})}),n.json({message:"email sent"})})})}),a.post("/verify",o,(e,n)=>{let t=e.body.id;b.findOne({uid:e.user._id,token:t}).then(a=>{if(a)if(a.hasExpired())b.deleteOne({uid:e.user._id,token:t}).then(e=>{n.json({expired:!0})}),n.json({expired:!0});else{let o=!1,s=a.referral,r=e.user.broadcaster_type,l=e.user.integration.patreon;l&&("forever"===l.type||l.is_gold)&&(o=!0),s&&f.findOne({"referral.code":s}).then(n=>{n.referral.referred+=1,n.save().then(t=>{1===t.referral.referred&&g.findOne({"integration.twitch.etid":t.twitchID}).then(t=>{new _({user:t.id,logo:A,message:"Someone just created their channel using your referral code! You now have one extra custom achievement you can create! Go try it out!",date:Date.now(),type:"dashboard",channel:n.owner,status:"new"}).save().then(n=>{T(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,status:n.status},user:t.name})})})})}),new f({owner:e.user.name,twitchID:e.user.integration.twitch.etid,theme:"",logo:e.user.logo,members:[],moderators:[],icons:{default:A,hidden:$},oid:i(),overlay:N,nextUID:1,gold:o,broadcaster_type:{twitch:r}}).save().then(a=>{console.log("--------------------"),console.log(`${a.owner} just created their channel!`),console.log("--------------------"),new _({user:process.env.NOTICE_USER,logo:a.logo,message:`${a.owner} just created their channel!`,date:Date.now(),type:"achievement",channel:a.owner,status:"new"}).save(),j(e,{name:a.owner,"full-access":o,online:!1}),e.user.type="verified",e.user.save().then(a=>{b.deleteOne({uid:e.user._id,token:t}).then(e=>{console.log(e)}),n.json({verified:!0})})})}else n.json({error:"Unauthorized"})})}),a.post("/token/generate",o,(e,n)=>{b.findOne({uid:e.user._id}).then(t=>{if(t){let a=h.randomBytes(16).toString("hex");t.token=a,t.created=Date.now(),t.notified=!1,t.save().then(t=>{let i=e.user.email;var o={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},s=u.createTransport({service:"gmail",auth:o});const r={from:process.env.GML,to:i,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">You are ready to start creating achievements that your community will be able to hunt for and earn!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+a+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of achievements, and can\'t wait to see how much your community engages and enjoys them!</p></div>'};s.sendMail(r,function(t,a){t?(console.log(t),n.json({token:!1})):(new _({user:e.user._id,logo:A,message:"A new confirmation code has been sent to your email, and don't forget to check your spam folder!",date:Date.now(),type:"confirmation",status:"new"}).save().then(n=>{T(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,status:n.status},user:e.user.name})}),n.json({token:!0}))})})}else n.json({token:!1})})}),a.get("/overlay",(e,n)=>{let t=e.query.id;f.findOne({oid:t}).then(e=>{if(e){let t=Object.keys(e.overlay),a=Object.keys(N);if(t.length-1!==a.length){let t=e.overlay;a.forEach(e=>{void 0===t[e]&&(t[e]=N[e])}),e.overlay=t,e.save().then(e=>{n.json({overlay:e.overlay,icons:e.icons})})}else n.json({overlay:e.overlay,icons:e.icons})}})}),a.get("/testOverlay",o,(e,n)=>{f.findOne({owner:e.user.name}).then(n=>{if(n){k(e,{user:"testUser",channel:n.owner,title:"Test Achievement",icon:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",unlocked:!0});let t,a=n.overlay;t=a.chatMessage&&""!==a.chatMessage?p({chatMessage:a.chatMessage,member:"testUser",achievement:"Test Achievement"}):`${achievementData.member} just earned the "${achievementData.achievement}" achievement! PogChamp`,C(e,{channel:n.owner,message:t})}}),n.json({})}),a.post("/reorder",o,(e,n)=>{let t=e.body.achievements;if(t){let a={};t.forEach(e=>{a[e.uid]=e.order}),v.find({channel:e.user.name}).then(e=>{e?(e.forEach(e=>{let n=a[e.uid];e.order&&e.order===n||(e.order=n,e.save())}),n.json({})):n.json({error:"Issue updating achievements. Try again later."})})}else n.json({error:"Unexpected use of the API"})}),a.post("/favorite",o,(e,n)=>{let t=e.body.channel,a=e.body.task;f.findOne({owner:t}).then(t=>{if(t){if("add"===a)e.user.favorites.push(t.id),e.user.save().then(e=>{n.json({favorited:!0,favorites:e.favorites})});else if("remove"===a&&e.user.favorites){var i=e.user.favorites.findIndex(e=>e===t.id);e.user.favorites.splice(i,1),e.user.save().then(e=>{n.json({favorited:!1,favorites:e.favorites})})}}else n.json({error:"Channel doesn't exist!"})})}),a.get("/mod",o,(e,n)=>{f.find({"moderators.uid":e.user._id}).then(e=>{let t=e.map(e=>({owner:e.owner,logo:e.logo}));n.json({channels:t})})}),a.get("/mod/retrieve",s,(e,n)=>{M(e,n,e.channel)});let M=(e,n,t)=>{let a=new Promise((e,n)=>{v.find({channel:t.owner}).then(n=>{if(n){let t=n.map(e=>e.listener);w.find({_id:{$in:t}}).then(t=>{let a=n.map(e=>{let n=t.find(n=>n.id===e.listener);if(n){let t={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:n.code,order:e.order};return n.resubType&&(t.resubType=n.resubType),n.query&&(t.query=n.query),t}return e});a.sort((e,n)=>e.order>n.order?1:-1),e(a)})}else e(n)})});Promise.all([a]).then(e=>{let a;t.oid?t.overlay&&0!==Object.keys(t.overlay).length?(delete(a={...t._doc}).__v,delete a._id,n.json({channel:a,achievements:e[0]})):(t.overlay=N,t.save().then(t=>{delete(a={...t._doc}).__v,delete a._id,n.json({channel:a,achievements:e[0]})})):(t.oid=i(),t.overlay&&0!==Object.keys(t.overlay).length||(t.overlay=N),t.save().then(t=>{delete(a={...t._doc}).__v,delete a._id,n.json({channel:a,achievements:e[0]})}))})};async function B(e,n){for(let t=0;t<e.length;t++)await n(e[t],t,e)}e.exports=a},function(e,n){e.exports=require("cloudinary")},function(e,n,t){const a=t(3).Router(),i=(t(9),t(15)),o=(t(10),t(1)),s=t(2),r=t(7),l=t(8),d=t(4),c=t(14),h=t(6),u=t(21),{isAuthorized:m,isModAuthorized:p,getTwitchAxiosInstance:g}=t(11),{emitNewListener:f,emitUpdateListener:v,emitRemoveListener:w,emitAwardedAchievement:y,emitAwardedAchievementNonMember:b,emitOverlayAlert:_,emitNotificationsUpdate:I,emitExtensionAchievementEarned:D}=t(12),{build:x}=t(20),O=t(16).uploadImage,j="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png";t(0);let S=(e,n)=>{if(e&&n){let t={_id:e._id,channel:e.owner,title:e.title,description:e.description,shortDescription:e.shortDescription,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,achType:n.achType,condition:n.condition,rank:e.rank};return n.query&&(t.query=n.query),t}return!1},k=(e,n,t,a,o,s)=>new Promise((d,h)=>{let u;(u=s?new Promise((e,n)=>{c.findOne({achievementID:t._id}).then(n=>{n?(n.achievementID="",n.save().then(()=>{s.achievementID=t._id,s.save().then(n=>{e()})})):(s.achievementID=t._id,s.save().then(n=>{e()}))})}):Promise.resolve()).then(()=>{r.findOneAndUpdate({_id:t._id},{$set:a},{new:!0}).then(a=>{if(Object.keys(o).length>0)if(o.achType&&"3"===o.achType&&a.listener)l.findOne({_id:a.listener}).then(t=>{t&&(w(e,{uid:t.uid,channel:n.owner,cid:n.id,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition}),l.deleteOne({_id:a.listener}).then(e=>{a.listener=void 0,a.save().then(e=>{d({update:!0,achievement:e})})}))});else if(o.achType&&"3"!==o.achType&&!t.listener){let t={channel:n.owner,cid:n.id,uid:i(),...o,achievement:a.id,aid:a.uid};new l(t).save().then(n=>{f(e,{uid:n.uid,channel:n.channel,achievement:n.achievement,achType:n.achType,query:n.query,bot:n.bot,condition:n.condition}),a.listener=n.id,a.save().then(e=>{d({created:!0,achievement:e})})})}else l.findOneAndUpdate({_id:a.listener},{$set:o},{new:!0}).then(t=>{if(t){let i={uid:t.uid,channel:n.owner,cid:n.id,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition,unlocked:t.unlocked};v(e,i);let o=S(a,t);d({update:!0,achievement:o})}else d({update:!1})});else l.findOne({_id:a.listener}).then(e=>{let n=S(a,e);d({update:!0,achievement:n})})})})}),T=e=>new Promise((n,t)=>{c.find({channel:e,type:"achievement"}).then(e=>{if(e){let t={active:[],inactive:[]};e.map(e=>{e.achievementID&&""!==e.achievementID?t.active.push(e):t.inactive.push(e)}),n(t.active.concat(t.inactive))}else n([])})});a.post("/mod/update",p,(e,n)=>{E(e,n,e.channel,!0)}),a.post("/update",m,(e,n)=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?E(e,n,t,!1):n.json({update:!1,message:"The channel you tried to update the achievement for doesn't exist!"})})});let E=(e,n,t,a)=>{r.findOne({_id:e.body.id,channel:t.owner}).then(a=>{if(a){let i=e.body,{achType:o,query:s,bot:r,condition:l}=i,d={};o&&(d.achType=o,delete i.achType),s&&(d.query=s,delete i.query),r&&(d.bot=r,delete i.bot),l&&(d.condition=l,delete i.condition),i.icon&&i.iconName?O(i.icon,i.iconName,i.iconType,t.owner).then(o=>{o.error?n.json({update:!1,error:o.error}):(i.icon=o.url,k(e,t,a,i,d,o).then(e=>{n.json(e)}))}):k(e,t,a,i,d).then(e=>{n.json(e)})}else n.json({update:!1,error:"The achievement you tried to update doesn't exist!"})})};a.post("/mod/create",p,(e,n)=>{C(e,n,e.channel,!0)}),a.post("/create",m,(e,n)=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?C(e,n,t,!1):n.json({created:!1,message:"This channel you are creating for doesn't exist!"})})});let C=(e,n,t,a)=>{let s={};e.body.id?s._id=e.body.id:s.title=e.body.title,s.channel=t.owner;let d=M(t);"4"!==e.body.achType||t.gold||0!==d?o.findOne({name:t.owner}).then(a=>{let o=a.integration.streamlabs;"5"!==e.body.achType&&"6"!==e.body.achType||o?r.findOne(s).then(a=>{a?n.json({created:!1,message:"An achievement with this name already exists!",achievement:a}):r.countDocuments({channel:t.owner}).then(a=>{let o={uid:t.nextUID,channel:t.owner,cid:t.id,title:e.body.title,description:e.body.description,shortDescription:e.body.shortDescription,icon:e.body.icon,earnable:e.body.earnable,limited:e.body.limited,secret:e.body.secret,listener:e.body.listener,alert:e.body.alert||!0,rank:e.body.rank||0,order:a},s={channel:t.owner,cid:t.id,achType:e.body.achType,uid:i()};s.condition=e.body.condition,"4"!==s.achType&&"5"!==s.achType||(s.bot=e.body.bot,s.query=e.body.query),l.findOne(s).then(a=>{a?r.findOne({listener:a._id}).then(e=>{n.json({created:!1,message:'The conditions you selected are already taken by the "'+e.title+'" achievement!'})}):e.body.icon?O(e.body.icon,e.body.iconName,e.body.iconType,t.owner).then(a=>{a.error?n.json({created:!1,error:a.error}):(o.icon=a.url,new r(o).save().then(i=>{s.achievement=i.id,s.aid=i.uid,a.achievementID=i.id,a.save().then(a=>{t.nextUID=i.uid+1,t.save().then(t=>{"3"!==e.body.achType?new l(s).save().then(t=>{f(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),i.listener=t.id,i.save().then(e=>{n.json({created:!0,achievement:e})})}):n.json({created:!0,achievement:i})})})}))}):new r(o).save().then(a=>{s.achievement=a.id,s.aid=a.uid,t.nextUID=a.uid+1,t.save().then(t=>{"3"!==e.body.achType?new l(s).save().then(t=>{f(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),a.listener=t.id,a.save().then(e=>{n.json({created:!0,achievement:e})})}):n.json({created:!0,achievement:a})})})})})}):n.json({created:!1,message:"This type of achievement requires Streamlabs integration! Head over to your Profile and connect!"})}):n.json({created:!1,message:"This type of achievement is for Stream Achievements Gold! Sync your Patreon if your account is, or reach out on Discord!"})};a.post("/delete",m,(e,n)=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{if(t){let a={};a._id=e.body.achievementID,a.channel=t.owner,r.findOne(a).then(i=>{if(i){let o=i.listener,s=i.uid;r.deleteOne(a).then(a=>{let r={_id:o,channel:i.channel};l.findOne(r).then(a=>{a?(w(e,{uid:a.uid,channel:t.owner,achievement:a.achievement,achType:a.achType,query:a.query,bot:a.bot,condition:a.condition}),l.deleteOne(r).then(a=>{c.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{h.deleteMany({channelID:t.id,achievementID:s}).then(e=>{n.json({deleted:!0})})})})):c.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{h.deleteMany({channelID:t.id,achievementID:s}).then(e=>{n.json({deleted:!0})})})})})}else n.json({deleted:!1,message:"The achievement you requested to delete doesn't exist!"})})}else n.json({delete:!1,message:"This channel you are deleting for doesn't exist!"})})}),a.post("/enable",m,(e,n)=>{let t=e.body.aid;l.findOne({channel:e.user.name,unlocked:!0}).then(a=>{a&&(a.unlocked=!1,a.save().then(n=>{v(e,{channel:n.channel,achievement:n.achievement,achType:n.achType,query:n.query,bot:n.bot,condition:n.condition,unlocked:!1})})),l.findOne({channel:e.user.name,aid:t}).then(t=>{t.unlocked=!0,t.save().then(t=>{v(e,{channel:t.channel,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition,unlocked:!0}),n.json({unlocked:t.unlocked})})})})}),a.get("/mod/retrieve",p,(e,n)=>{let t=e.query.aid;A(e,n,e.channel,t)}),a.get("/retrieve",m,(e,n)=>{let t=e.user.name,a=e.query.aid;a?s.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?A(e,n,t,a):n.json({error:"User isn't a verified channel owner"})}):t&&r.find({channel:t}).then(e=>{if(e){let t=e.map(e=>e.listener);l.find({_id:{$in:t}}).then(t=>{e.forEach(e=>{let n=t.find(n=>n._id=e.listener);return delete n._id,Object.assign(e,n)}),n.json(e)})}else n.json(e)})});let A=(e,n,t,a)=>{let i=new Promise((e,n)=>{r.findOne({uid:a,channel:t.owner}).then(n=>{if(n){n.listener;l.findOne({_id:n.listener,channel:n.channel}).then(t=>{if(t){let a=Object.assign({},t._doc),i=Object.assign({},n._doc);delete a._id;let o=Object.assign(i,a);o.unlocked||(o.unlocked=!1),e(o)}else e(n)})}else e(null)})}),o=T(t.owner),s=M(t);Promise.all([i,o,s]).then(a=>{n.json({achievement:a[0],images:a[1],defaultIcons:t.icons,isGoldChannel:e.channel&&e.channel.gold,customAllowed:a[2],referred:t.referral.referred>0})})};a.post("/mod/award",p,(e,n)=>{P(e,n,e.channel)}),a.post("/award",m,(e,n)=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{P(e,n,t)})});let $=(e,n)=>{let t,a=e.overlay;return t=a.chatMessage&&""!==a.chatMessage?x({chatMessage:a.chatMessage,member:n.member,achievement:n.achievement}):`${n.member} just earned the "${n.achievement}" achievement! PogChamp`,{channel:e.owner,message:t}},P=(e,n,t)=>{let a,i=e.body.members,s=e.body.aid,l=Date.now(),c=!1,u=i.findIndex(e=>!0===e.nonMember);u>=0&&(a=i.splice(u,1)[0]),r.findOne({uid:s,channel:t.owner}).then(s=>{i=i.map(e=>e.name),o.find({name:{$in:i}}).then(i=>{i.length>0?h.find({channelID:t.id,achievementID:s.uid}).limit(1).exec((o,r)=>{c=0===r.length,i.map((n,a)=>{let i={userID:n.id,channelID:t.id,achievementID:s.uid};h.findOne(i).then(a=>{a||new h({...i,earned:Date.now(),first:c}).save().then(a=>{if(c=!1,t.overlay.chat){let a={channel:t.owner,member:n.name,achievement:s.title};y(e,$(t,a)),D(e,{user:n.integration.twitch.etid,aid:s.uid}),B(t,n,s)}new d({user:n._id,logo:t.logo,message:`You have earned the "${s.title}" achievement!`,date:l,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{I(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})});let i=s.alert||!0,o=!1;t.gold&&(o=!0),i&&_(e,{user:n.name,channel:t.owner,title:s.title,icon:s.icon,unlocked:o})})})}),a&&N(e,n,t,s,a),n.json({award:!0})}):(a&&N(e,n,t,s,a),n.json({award:!0}))})})},N=(e,n,t,a,i)=>{let s=Date.now(),r=!1;o.findOne({name:i.name}).then(n=>{if(n)if(n.preferences.autojoin)try{n.channels.push({channelID:t.id,banned:!1}),n.save().then(i=>{t.members.push(i.id),t.save().then(o=>{h.find({channelID:t.id,achievementID:a.uid}).limit(1).exec((o,l)=>{r=0===l.length;let c={userID:n.id,channelID:t.id,achievementID:a.uid};h.findOne(c).then(n=>{n||new h({...c,earned:Date.now(),first:r}).save().then(n=>{new d({user:i._id,logo:t.logo,message:`You have earned the "${a.title}" achievement!`,date:s,type:"achievement",channel:t.owner,status:"new"}).save().then(n=>{I(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:i.name}),F(e,t,i,a)})})})})})})}catch(e){new d({user:process.env.NOTICE_USER,logo:j,message:`Issue awarding ${t.owner}'s '${a.title}' to ${n.name}`,date:s,type:"admin",status:"new"}).save(),o.findOne({name:t.owner}).then(e=>{new d({user:e._id,logo:j,message:`Issue awarding '${a.title}' to ${n.name}! We are looking into the issue, feel free to manually award the achievement!`,date:s,type:"admin",status:"new"}).save()})}else h.find({channelID:t.id,achievementID:a.uid}).limit(1).exec((i,o)=>{r=0===o.length;let l={userID:n.id,channelID:t.id,achievementID:a.uid};h.findOne(l).then(i=>{i||new h({...l,earned:Date.now(),first:r}).save().then(i=>{new d({user:n._id,logo:t.logo,message:`You have earned the "${a.title}" achievement!`,date:s,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{I(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})}),F(e,t,n,a)})})});else{let n,o={};(n=new Promise((e,n)=>{g().then(n=>{n.get(`https://api.twitch.tv/helix/users/?login=${i.name}`).then(n=>{n.data&&n.data.data&&n.data.data[0]&&(o.userID=n.data.data[0].id,o.name=n.data.data[0].login),e()})})})).then(()=>{o.userID&&o.name&&h.find({channelID:t.id,achievementID:a.uid}).limit(1).exec((n,i)=>{r=0===i.length;let s={userID:o.userID,channelID:t.id,achievementID:a.uid};h.findOne(s).then(n=>{n||new h({...s,earned:Date.now(),first:r}).save().then(n=>{if(t.overlay.chat){let n={channel:t.owner,member:o.name,achievement:a.title};b(e,$(t,n)),D(e,{user:o.userID,aid:a.uid}),B(t,o,a)}let i=a.alert||!0,s=!1;t.gold&&(s=!0),i&&_(e,{user:o.name,channel:t.owner,title:a.title,icon:a.icon,unlocked:s})})})})})}})};a.get("/mod/icons",p,(e,n)=>{q(e,n,e.channel,!0)}),a.get("/icons",m,(e,n)=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?q(e,n,t,!1):n.json({error:!0})})});let q=(e,n,t,a)=>{T(t.owner).then(e=>{let i={images:e.map(e=>{let n={...e._doc};return delete n.__v,delete n._id,n}),defaultIcons:t.icons};a&&(i.isGoldChannel=t.gold),M(t).then(e=>{i.customAllowed=e,n.json(i)})})},M=e=>{let{owner:n,gold:t,referral:a}=e;if(t)return Promise.resolve(!0);{let n=0;return a&&a.referred>0&&(n+=1),new Promise((t,a)=>{l.find({channel:e.owner,achType:"4"}).then(e=>{0===n?t(!1):e&&(n<e.length?t(0):t(n-e.length))})})}};a.get("/listeners",(e,n)=>{let t=e.query.channel;Array.isArray(t)||(t=t.split(",")),r.find({owner:{$in:t}}).then(e=>{e.map(e=>{if(e.earnable&&e.listener)return e.listener})}),l.find({channel:{$in:t}}).then(e=>{e.length>0?n.json(e):n.json([])})}),a.post("/award/chat",(e,n)=>{let{achievement:t,channel:a,target:i,user:r}=e.body,l=!1;t&&a&&i&&r&&s.findOne({owner:a}).then(s=>{if(s&&s.gold){if(r===a)l=!0;else{let e=s.moderators.map(e=>e.uid);o.find({_id:{$in:e}},"name").then(e=>{if(e){e.findIndex(e=>e.name===r)>=0&&(l=!0)}})}if(l){let o={title:t,channel:a},r={name:i.toLowerCase()};L(e,n,s,o,r)}}})});let B=(e,n,t)=>{let a="";a=`${n.name} earned "${t.title}"`,new u({channelID:e.id,member:n.name,achievement:t.title,date:Date.now()}).save()},F=(e,n,t,a)=>{if(n.overlay.chat){let i={channel:n.owner,member:t.name,achievement:a.title};y(e,$(n,i));let o="";o=t.integration&&t.integration.twitch?t.integration.twitch.etid:t.userID,D(e,{user:o,aid:a.uid}),B(n,t,a)}let i=void 0===a.alert||a.alert,o=!1;n.gold&&(o=!0),i&&_(e,{user:t.name,channel:n.owner,title:a.title,icon:a.icon,unlocked:o})},U=(e,n,t,a,i,o)=>{let s=a.id?a.id:a.userID;if(n&&"1000"!==n){let i=[];"2000"===n?(i.push("1000"),i.push("2000")):"3000"===n&&(i.push("1000"),i.push("2000"),i.push("3000")),l.find({achType:"0",condition:{$in:i},channel:t.owner}).then(n=>{let i=[];if(n){new Promise((e,a)=>{let o=n.map(e=>e.aid);h.find({userID:s,channelID:t.id,achievementID:{$in:o}}).then(n=>{n&&n.length>0&&n.forEach(e=>{let n=o.findIndex(n=>n===e.achievementID);n>=0&&o.splice(n,1)}),i=o,e()})}).then(()=>{i.length>0&&r.find({channel:t.owner,uid:{$in:i}}).then(n=>{n?n.forEach(n=>{z(e,a,t,n,!1)}):console.log("achievements not found")})})}})}},z=(e,n,t,a,i,o=!0)=>new Promise((s,r)=>{let l=Date.now();h.find({channelID:t.id,achievementID:a.uid}).limit(1).exec((r,c)=>{let u={userID:n.id?n.id:n.userID,channelID:t.id,achievementID:a.uid};h.findOne(u).then(r=>{r?(i&&(U(e,i,t,n),W(e,n,t,a,i)),s(!1)):new h({...u,earned:l,first:0===c.length}).save().then(r=>{o&&(n.integration&&new d({user:n._id,logo:t.logo,message:`You have earned the "${a.title}" achievement!`,date:l,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{I(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})}),F(e,t,n,a)),i&&(U(e,i,t,n),W(e,n,t,a,i)),s(!0)})})})}),R=(e,n,t,a=2)=>{let{channel:i,identifier:s,achievements:l}=t,c={},h=l.map(e=>(c[e.achievementID]=e.tier,e.achievementID));r.find({_id:{$in:h},earnable:!0}).then(n=>{n.length>0&&o.findOne(s).then(a=>{if(a){let t=a.channels.findIndex(e=>e.channelID===i.id);if(t>=0&&!a.channels[t].banned)try{n.forEach(n=>{z(e,a,i,n,c[n.id])})}catch(e){new d({user:process.env.NOTICE_USER,logo:j,message:`Issue awarding ${i.owner}'s '${foundAchievement.title}' to ${a.name}`,date:currentDate,type:"admin",status:"new"}).save(),o.findOne({name:i.owner}).then(e=>{new d({user:e._id,logo:j,message:`Issue awarding '${foundAchievement.title}' to ${a.name}! We are looking into the issue, feel free to manually award the achievement!`,date:currentDate,type:"admin",status:"new"}).save()})}else if(a.preferences.autojoin)try{a.channels.push({channelID:i.id,banned:!1}),a.save().then(t=>{i.members.push(t.id),i.save().then(a=>{n.forEach(n=>{z(e,t,a,n,c[n.id])})})})}catch(e){new d({user:process.env.NOTICE_USER,logo:j,message:`Issue awarding ${i.owner}'s '${foundAchievement.title}' to ${a.name}`,date:currentDate,type:"admin",status:"new"}).save(),o.findOne({name:i.owner}).then(e=>{new d({user:e._id,logo:j,message:`Issue awarding '${foundAchievement.title}' to ${a.name}! We are looking into the issue, feel free to manually award the achievement!`,date:currentDate,type:"admin",status:"new"}).save()})}else n.forEach(n=>{z(e,a,i,n,c[n.id])})}else{let a,o;console.log("user not found, call to twitch");let r={},l=s["integration.twitch.etid"];l&&"undefined"!==l&&t.name?(console.log("Call not needed"),r.userID=s["integration.twitch.etid"],r.name=t.name,n.forEach(n=>{z(e,r,i,n,c[n.id])})):(s.name?a=`https://api.twitch.tv/helix/users/?login=${s.name}`:l&&"undefined"!==l&&(a=`https://api.twitch.tv/helix/users/?id=${l}`),(o=a?new Promise((e,n)=>{g().then(n=>{n.get(a).then(n=>{n.data&&n.data.data&&n.data.data[0]&&(r.userID=n.data.data[0].id,r.name=n.data.data[0].login),e()}).catch(n=>{n.response&&(console.log(n.response.data),e())})})}):Promise.resolve()).then(()=>{r.userID&&r.name&&n.forEach(n=>{z(e,r,i,n,c[n.id])})}))}})})},L=(e,n,t,a,i,s,l=2)=>{let c=new Date;r.findOne(a).then(r=>{r&&r.earnable&&o.findOne(i).then(h=>{if(h){let u=h.channels.findIndex(e=>e.channelID===t.id);if(u>=0&&!h.channels[u].banned)try{z(e,h,t,r,s)}catch(u){if(l>0){L(e,n,t,a,i,s,l-1)}else new d({user:process.env.NOTICE_USER,logo:j,message:`Issue awarding ${t.owner}'s '${r.title}' to ${h.name}`,date:c,type:"admin",status:"new"}).save(),o.findOne({name:t.owner}).then(e=>{new d({user:e._id,logo:j,message:`Issue awarding '${r.title}' to ${h.name}! We are looking into the issue, feel free to manually award the achievement!`,date:c,type:"admin",status:"new"}).save()})}else if(console.log("couldn't find the channel"),h.preferences.autojoin)try{h.channels.push({channelID:t.id,banned:!1}),h.save().then(n=>{t.members.push(n.id),t.save().then(t=>{z(e,n,t,r,s)})})}catch(u){if(l>0){L(e,n,t,a,i,s,l-1)}else new d({user:process.env.NOTICE_USER,logo:j,message:`Issue awarding ${t.owner}'s '${r.title}' to ${h.name}`,date:c,type:"admin",status:"new"}).save(),o.findOne({name:t.owner}).then(e=>{new d({user:e._id,logo:j,message:`Issue awarding '${r.title}' to ${h.name}! We are looking into the issue, feel free to manually award the achievement!`,date:c,type:"admin",status:"new"}).save()})}else z(e,h,t,r,s)}else{let n,a,o={};i.name?n=`https://api.twitch.tv/helix/users/?login=${i.name}`:i["integration.twitch.etid"]&&(n=`https://api.twitch.tv/helix/users/?id=${i["integration.twitch.etid"]}`),(a=n?new Promise((e,t)=>{g().then(a=>{a.get(n).then(n=>{n.data&&n.data.data&&n.data.data[0]&&(o.userID=n.data.data[0].id,o.name=n.data.data[0].login),e()}).catch(e=>{console.log(e),t()})})}):Promise.resolve()).then(()=>{o.userID&&o.name&&z(e,o,t,r,s)}).catch(()=>{console.log("Error occured awarding "+r.title+" to "+JSON.stringify(i))})}})})};async function K(e,n){for(let t=0;t<e.length;t++)await n(e[t],t,e)}a.post("/listeners",async(e,n,t)=>{try{console.log("achievements to process...");let n=e.body,a=(new Date,{}),i={};await K(n,async e=>{a[e.channel]=a[e.channel]||[],a[e.channel].push(e)});let r=Object.keys(a);await K(r,async n=>{let t=await s.findOne({owner:n});if(t){let s=a[n],r={};await K(s,async e=>{let n,{channel:a,achievementID:s,tier:l,userID:d}=e;if(d)r[n=d]||(r[n]={channel:t,identifier:{"integration.twitch.etid":d},achievements:[]});else{let a=e.user.toLowerCase();if(0===a.indexOf("@")&&(a=a.substr(1)),!i.hasOwnProperty(a)){let e=await o.findOne({name:a});if(e)i[a]=e.integration.twitch.etid;else{let e=`https://api.twitch.tv/helix/users/?login=${a}`;if(e){let n=await g(),t=await n.get(e);t.data&&t.data.data&&t.data.data[0]?i[a]=t.data.data[0].id:(console.log("error retrieveing data for "+a),i[a]="undefined")}}}n=i[a],r[n]||(r[n]={channel:t,identifier:{"integration.twitch.etid":n},name:a,achievements:[]})}r[n].achievements.push(e)});let l=Object.keys(r);await K(l,async n=>{let t=r[n];R(e,0,t)})}})}catch(e){t(e)}n.json({})});let W=(e,n,t,a,i)=>{l.find({achType:{$in:["0","1"]},channel:t.owner}).then(o=>{if(o){let s=o.findIndex(e=>e.achievement===a.id);if(s>=0){let a=o.splice(s,1)[0],r=a.achType,l=a.condition,c=[];if("1"===r&&(o.forEach(e=>{"0"===e.achType?parseInt(e.condition)<=parseInt(i)&&c.push(e):parseInt(e.condition)<=parseInt(l)&&c.push(e)}),c.length>0)){let a=[];c.forEach(i=>{a.push(z(e,n,t,{uid:i.aid},!1,!1))}),Promise.all(a).then(a=>{let o=!1;a.forEach(e=>{e&&(o=e)}),o&&i&&n._id&&new d({user:n._id,logo:t.logo,message:"Your previous subs have been backfilled!",date:new Date,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{I(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})})})}}}})};e.exports=a},function(e,n,t){const a=t(3).Router(),i=t(1),o=t(2),s=t(8),r=(t(13),t(45));t(0);a.get("/init",(e,n)=>{r.findOne().then(e=>{e?n.json({at:e.at,rt:e.rt,last:e.last,expires_in:e.expires_in}):n.json({success:!1})})}),a.put("/init",(e,n)=>{r.findOne().then(t=>{t?(t.at=e.body.at,t.rt=e.body.rt,t.last=Date.now(),t.expires_in=e.body.expires_in,t.save().then(e=>{n.json({success:!0})})):new r({at:e.body.at,rt:e.body.rt,last:Date.now(),expires_in:e.body.expires_in}).save().then(e=>{n.json({success:!0})})})}),a.get("/channels",(e,n)=>{let t=parseInt(e.query.offset)||0,a=parseInt(e.query.limit)||50,o=parseInt(e.query.total)||void 0;o?d(t,a,o).then(e=>{e.err?(n.status(500),n.json({channels:[],err:e.err})):n.json(e)}):o=i.estimatedDocumentCount().exec().then(e=>{d(t,a,o=e).then(e=>{e.err?(n.status(500),n.json({channels:[],err:e.err})):n.json(e)})})}),a.get("/listeners",(e,n)=>{let t=parseInt(e.query.offset)||0,a=parseInt(e.query.limit)||50,i=parseInt(e.query.total)||void 0,o=e.query.channels;i?l(t,a,i,o).then(e=>{e.err?(n.status(500),n.json({listeners:[],error:e.err})):n.json(e)}):i=s.estimatedDocumentCount().exec().then(e=>{l(t,a,i=e,o).then(e=>{e.err?(n.status(500),n.json({listeners:[],error:e.err})):n.json(e)})})});let l=(e,n,t,a)=>new Promise((i,o)=>{let r={};a&&(r.channel={$in:a}),s.find(r).sort({_id:-1}).skip(e).limit(n).exec((a,o)=>{if(a)i({err:"Issue retrieving from Listener sets"});else{let a=o.map(e=>({channel:e.channel,achievement:e.achievement,achType:e.achType,resubType:e.resubType,query:e.query,bot:e.bot,condition:e.condition,unlocked:e.unlocked||!1})),s={listeners:a,total:t};a.length===n&&(s.offset=e+a.length),i(s)}})}),d=(e,n,t)=>new Promise((a,i)=>{o.find({}).sort({_id:-1}).skip(e).limit(n).exec((i,o)=>{if(i)a({err:"Issue retrieving from User sets"});else{let i=o.map(e=>{let n={name:e.owner,cid:e.id,tid:e.twitchID,"full-access":!1};e.gold&&(n["full-access"]=!0);let{streamlabs:t,streamelements:a}=e.integration;return t&&(n.bot={bot:"streamlabs",st:t.st}),n}),s={channels:i,total:t};i.length===n&&(s.offset=e+i.length),a(s)}})});e.exports=a},function(e,n,t){const a=t(0);var i=new(0,a.Schema)({at:String,rt:String,last:Date,expires_in:Number});const o=a.model("irc",i);e.exports=o},function(e,n,t){const a=t(3).Router(),i=t(10),o=t(1),s=t(8),r=(t(13),t(47)),l=t(2),d=t(4),c=t(7),h=t(6),{isAdminAuthorized:u}=(t(0),t(11)),{emitOverlayAlert:m}=t(12);async function p(e,n){for(let t=0;t<e.length;t++)await n(e[t],t,e)}async function g(e,n,t){return new Promise((a,i)=>{let o={userID:e._id,channelID:n.channelID,achievementID:t.aid};new Promise((e,n)=>{setTimeout(e,500)}).then(async()=>{await h.findOne(o)?(console.log("entry exists in table"),a()):(console.log("not there"),o.earned=t.earned,console.log(o),new h(o).save().then(e=>{a(e)}))})})}a.post("/dedupMembers",u,(e,n)=>{l.findOne({owner:"phirehero"}).then(e=>{console.log(e.members);let n=e.members;console.log(n);let t=[];o.find({_id:{$in:n}}).sort({name:1}).exec((e,a)=>{a.forEach(e=>{let a=n.splice(n.indexOf(e.id),1);t.push(a[0])}),console.log(t),console.log(t.length)})})}),a.post("/dedup",u,(e,n)=>{o.find({}).then(e=>{e.forEach(e=>{console.log("dedup for "+e.name+"...");let n=[];e.channels.forEach(e=>{console.log(">>> checking channel: "+e.channelID);let t=e.achievements;console.log(t);let a=t.filter((e,n,t)=>t.findIndex(n=>n.aid===e.aid)===n);if(a.length!==t.length&&console.log(">>>>>> duplicates found: "+(t.length-a.length)),a.length>0){console.log("\n"),console.log(e),console.log("--------------------------------------------");let t={...e._doc,achievements:a};console.log(t),n.push(t)}else n.push(e)}),e.channels=n,e.save()})})}),a.post("/fixit",u,(e,n)=>{c.find({}).then(e=>{e&&e.forEach(e=>{e.listener&&s.findById(e.listener).then(n=>{n&&(console.log("updating: "+e.channel+": "+e.title),n.aid=e.uid,n.achievement=e.id,n.save())})})})}),a.post("/flush",u,(e,n)=>{r.find({}).then(e=>{e.length>0?e.forEach(e=>{try{console.log("finding "+e.channelID+" channel"),l.findOne({owner:e.channelID}).then(n=>{n?e&&e.achievementID&&c.findOne({uid:parseInt(e.achievementID),channel:n.owner}).then(t=>{t?o.findOne({"integration.twitch.etid":e.twitchID}).then(a=>{if(a){console.log("we found "+a.name);let i=a.channels,o=i.findIndex(e=>e.channelID===n.id);if(o>=0){i[o].achievements.filter(e=>{e.aid,t.uid})?(console.log(a.name+"already has "+t.title+". Delete it"),r.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)})):(console.log("achievement will be awarded to "+a.name),a.channels[o].achievements.push({aid:t.uid,earned:e.earned||Date.now()}),console.log("deleting entry"),console.log(e),r.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)}),a.save())}else console.log(a.name+"hasn't joined "+n.owner+"'s channel yet")}else console.log("no user")}):console.log("no achievement")}):console.log("no channel")})}catch(n){console.log(n),console.log("cast issue for "+e.channelID)}}):console.log("nothing in queue")})}),a.post("/fixpreferences",u,(e,n)=>{l.find({}).then(e=>{e&&e.forEach(e=>{e.overlay={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2},e.save().then(e=>{console.log("updated "+e.owner+"'s channel overlay")})})})}),a.post("/overlay",u,(e,n)=>{m(e,{user:e.user.name,channel:e.user.name,title:"I can show you the world",icon:"https://res.cloudinary.com/phirehero/image/upload/v1562881653/u9astg4olsdtfm2rjhxu.png",unlocked:!0})}),a.post("/sync",u,(e,n)=>{o.find({}).then(e=>{e&&e.forEach(e=>{let n=[],t=e.channels;t&&(t.forEach(e=>{let t={...e._doc,sync:!0};n.push(t)}),e.channels=n,e.save())})})}),a.post("/alertSync",u,(e,n)=>{c.find({}).then(e=>{e&&e.forEach(e=>{e.alert=!0,e.save()})})}),a.post("/testTable",u,(e,n)=>{h.find({channelID:"5d068493b87afc2f80cf21d5",achievementID:12}).limit(1).exec((e,n)=>{console.log(n)})}),a.post("/notice",u,(e,n)=>{new d({user:"5cfc5f04a33c32ad539abe0c",logo:"https://static-cdn.jtvnw.net/jtv_user_pictures/thorlar-profile_image-4bd4d7b82e71afc3-300x300.jpeg",message:'You earned the "Noisy Viking" Achievement!',date:Date.now()}).save().then(e=>{console.log(e),n.json(e)})}),a.post("/tier2",u,(e,n)=>{i({method:"post",url:"/api/achievement/listeners",data:[{channel:"phirehero",achievementID:"5d7661fa447cce56ece85ef8",tier:"2000",userID:"448669568"}]})}),a.get("/rank",u,(e,n)=>{!async function(e,n){let t=await l.findOne({owner:e.query.channel}).lean(),a=await c.find({channel:e.query.channel},"uid rank").lean(),i={};await p(a,async e=>{i[e.uid+""]=e.rank});let o=await h.find({channelID:t._id},"id userID achievementID").lean(),s={};await p(o,async e=>{s[e.userID]||(s[e.userID]={0:0,1:0,2:0,3:0,4:0}),void 0!==i[e.achievementID+""]&&s[e.userID][i[e.achievementID+""]+""]++});let r=Object.keys(s).sort((e,n)=>{let t=s[e],a=s[n],i=1*t[0]+2*t[1]+3*t[2]+4*t[3],o=1*a[0]+2*a[1]+3*a[2]+4*a[3];return console.log(i,o),o-i});console.log(r)}(e)}),a.post("/integration",u,(e,n)=>{!async function(){let e,n,t=0,a=0;t=await l.countDocuments(),console.log("Updating Integration for "+t+" channels...");for(;a<t;)e=0,console.log("\n\nUpdating "+a+" - "+(a+25-1)+"...\n"),n=await l.find().sort({_id:-1}).skip(a).limit(25).exec(),await p(n,async e=>{console.log(e.owner);let n=await o.findOne({"integration.twitch.etid":e.twitchID});n&&n.integration.streamlabs&&(e.integration={streamlabs:n.integration.streamlabs,streamelements:null},e.save())}),a+=25}()}),a.post("/migrate",u,(e,n)=>{!async function(){let e,n,t=0,a=0;t=await o.countDocuments(),console.log("Migrating data for "+t+" members...");for(;a<t;)e=0,console.log("\n\nMigrating "+a+" - "+(a+25-1)+"...\n"),n=await o.find().sort({_id:-1}).skip(a).limit(25).exec(),await p(n,async e=>{let n=e.channels;console.log("> Migrating "+n.length+" channels for "+e.name),await p(n,async n=>{let t=n.achievements,a=0;console.log("  > "+t.length+" achievements found for channel: "+n.channelID),await p(t,async t=>{try{await g(e,n,t);console.log("    > Migrated "+t.aid+"!"),a+=1}catch(e){console.log(e),console.log("[31m    (!) Error occurred migrating entry. achievementID: "+t.aid+", channelID: "+n.channelID+"[0m")}}),a===t.length?console.log("[32m    > Migrated achievements successfully for channelID: "+n.channelID+"[0m"):console.log("[33m    > Not all achievements migrated successfully for channelID: "+n.channelID+"! Count awarded: "+a+"[0m")})}),a+=25}()}),e.exports=a},function(e,n,t){const a=t(0),i=new(0,a.Schema)({twitchID:String,name:String,channelID:String,achievementID:Number,earned:Date}),o=a.model("queue",i);e.exports=o},function(e,n,t){const a=t(3).Router(),{isAuthorized:i,isModAuthorized:o,isAdminAuthorized:s,isExtensionAuthorized:r,getTwitchAxiosInstance:l}=(t(9),t(15),t(11)),d=t(0),c=(new(t(5))(process.env.SCK),t(17),t(18),t(19),t(10),t(1)),h=t(2),u=t(7),m=(t(8),t(14),t(13),t(4),t(6)),{uploadImage:p,destroyImage:g}=t(16),{emitNewChannel:f,emitOverlaySettingsUpdate:v,emitOverlayAlert:w,emitNotificationsUpdate:y}=t(12);t(22);a.post("/leave",i,(e,n)=>{h.findOne({owner:e.body.channel}).then(t=>{if(t){let a,i=t.members;i.length>0&&i.includes(e.user.id)?(a=i.findIndex(n=>{e.user.id}),i.splice(a,1),t.save().then(t=>{a=0,a=e.user.channels.findIndex(e=>e.channelID===t.id),e.user.channels.splice(a,1),e.user.save().then(e=>{n.json({leave:!0})})})):n.send("User isn't a part of this channel")}else n.send("Channel doesn't exist")})}),a.post("/join",r,(e,n)=>{let t=e.user.user;b(e,n,t)}),a.get("/retrieve",r,async(e,n)=>{let t=e.query.channelID,a=e.user.exists?e.user.user:void 0;if(t){let i=!1,o=await c.findOne({"integration.twitch.etid":t});if(o){let t=await h.findOne({owner:o.name});if(t)if(a){if(e.user.favorites){a.favorites.findIndex(e=>e===t.id)>=0&&(i=!0)}let s,r,l,d=await u.find({channel:t.owner}),c=t.members.includes(a.id),h=a.channels.findIndex(e=>e.channelID===t.id);l=h>=0&&a.channels[h].banned;let p={userID:a.id,channelID:t.id};a.new&&(p.userID={$in:[a.id,a.integration.twitch.etid]});let g=await m.find(p);s=g.map(e=>({aid:e.achievementID,date:e.earned}));let f=(r=d.map(e=>{let n=Object.assign({},e._doc),t=s.findIndex(e=>e.aid===n.uid);return t>=0?(n.earned=!0,n.earnedDate=s[t].date):n.earned=!1,n})).map(e=>{let n=e._doc?{...e._doc}:e;return delete n.__v,delete n._id,n});f.sort((e,n)=>e.order>n.order?1:-1);let v=!1;o.integration.patreon&&o.integration.patreon.is_gold&&(v=!0);let w={...t._doc};delete w.__v,delete w._id;let y={};y.logo=a.logo,y.isNew=!1,n.json({channel:w,achievements:f,joined:c,fullAccess:v,favorited:i,banned:l,profile:y,loggedIn:e.user.loggedIn,linked:!0})}else u.find({channel:t.owner}).then(a=>{let s,r,l;(l=new Promise((n,i)=>{let o={userID:e.user.uid,channelID:t.id};m.find(o).then(e=>{s=e.map(e=>({aid:e.achievementID,date:e.earned})),r=a.map(e=>{let n=Object.assign({},e._doc),t=s.findIndex(e=>e.aid===n.uid);return t>=0?(n.earned=!0,n.earnedDate=s[t].date):n.earned=!1,n}),n()})})).then(()=>{let a=r.map(e=>{let n=e._doc?{...e._doc}:e;return delete n.__v,delete n._id,n});a.sort((e,n)=>e.order>n.order?1:-1);let s=!1;o.integration.patreon&&o.integration.patreon.is_gold&&(s=!0);let l={...t._doc};delete l.__v,delete l._id;n.json({channel:l,achievements:a,joined:!1,fullAccess:s,favorited:i,banned:!1,loggedIn:e.user.loggedIn,linked:!0,profile:{isNew:!0}})})});else{let t={isNew:!0};a&&(t.logo=a.logo,t.isNew=!1),n.json({channel:!1,loggedIn:e.user.loggedIn,exists:e.user.exists,profile:t})}}else{let t={isNew:!0};a&&(t.logo=a.logo,t.isNew=!1),n.json({channel:!1,loggedIn:e.user.loggedIn,exists:e.user.exists,profile:t})}}}),a.post("/user/create",r,(e,n)=>{if(e.user&&e.user.uid){let t=`https://api.twitch.tv/helix/users/?id=${e.user.uid}`;userPromise=new Promise((e,n)=>{l().then(n=>{n.get(t).then(n=>{if(n.data&&n.data.data&&n.data.data[0]){let t=n.data.data[0].id,a=n.data.data[0].login,i=n.data.data[0].profile_image_url;n.data.data[0].broadcaster_type;new c({name:a,logo:i,type:"user",channels:[],integration:{twitch:{etid:t}},preferences:{autojoin:!0},new:!1}).save().then(n=>{e(n)})}})})}),userPromise.then(e=>{m.find({userID:e.integration.twitch.etid}).then(t=>{if(t.length>0){let a=t.map(e=>e.channelID);h.find({_id:{$in:a}}).then(a=>{let i=t.map(n=>new Promise((t,a)=>{n.userID=e.id,n.save().then(()=>{t()})}));Promise.all(i).then(()=>{n.json({logo:e.logo})})})}else n.json({logo:e.logo})})})}else e.user&&e.user.user&&n.json({logo:e.user.user.logo})}),a.post("/user/catch",r,(e,n)=>{let t=e.user.user;t.preferences.autojoin!==e.body.autojoin?(t.preferences.autojoin=e.body.autojoin,t.save().then(t=>{t.preferences.autojoin?b(e,n,t):n.json({joined:!1})})):t.preferences.autojoin&&b(e,n,t)});let b=(e,n,t)=>{h.findOne({twitchID:e.body.channel}).then(e=>{if(e){let a=t.channels.some(n=>n.channelID===e.id),i=e.members.includes(t.id);if(a)i?n.json({joined:!0}):(e.members.push(t.id),e.save().then(e=>{n.json({joined:!0})}));else if(i)a?n.json({joined:!0}):(t.channels.push({channelID:e.id,sync:!0,banned:!1}),t.save().then(e=>{n.json({joined:!0})}));else{let a={channelID:e.id,sync:!0,banned:!1};t.channels.push(a),t.save().then(t=>{e.members.push(t.id),e.save().then(e=>{n.json({joined:!0})})})}}else n.status(405),n.send("Channel requested to join does not exist!")})};a.get("/user/retrieve",i,(e,n)=>{let t=parseInt(e.query.offset),a=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new d.Types.ObjectId(e.channelID));h.find({_id:{$in:a}}).skip(t).limit(15).exec((a,i)=>{let o=i.map(n=>{e.user.channels.find(e=>e.channelID===n.id);return new Promise((t,a)=>{m.countDocuments({userID:e.user.id,channelID:n.id}).then(e=>{let a=0;u.countDocuments({channel:n.owner}).then(i=>{i>0&&(a=Math.round(e/i*100)),t({logo:n.logo,owner:n.owner,percentage:a,favorite:!1})})})})});Promise.all(o).then(a=>{t=a.length+t<e.user.channels.length?a.length+t:-1,n.json({channels:a,offset:t})})})}),e.exports=a}]);