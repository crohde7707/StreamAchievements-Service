!function(e){var n={};function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(o,i,function(n){return e[n]}.bind(null,i));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=17)}([function(e,n){e.exports=require("mongoose")},function(e,n,t){const o=t(0),i=new(0,o.Schema)({name:String,twitchID:String,logo:String,email:String,type:String,broadcaster_type:String,channels:[{channelID:String,achievements:[{aid:Number,earned:Date}],sync:Boolean,banned:Boolean}],favorites:Array,delegate:Array,integration:{twitch:Object,patreon:Object},preferences:{autojoin:Boolean},lastLogin:Date}),a=o.model("user",i);e.exports=a},function(e,n,t){const o=t(0),i=new(0,o.Schema)({owner:String,twitchID:String,theme:String,logo:String,members:Array,moderators:[{uid:String,permissions:{channel:Boolean,chat:Boolean}}],icons:{default:String,hidden:String},oid:String,overlay:{chat:Boolean,chatMessage:String,sfx:String,enterEffect:String,exitEffect:String,duration:Number,volume:Number,delay:Number},gold:Boolean,nextUID:Number,broadcaster_type:{twitch:String,mixer:String,youtube:String}}),a=o.model("channel",i);e.exports=a},function(e,n){e.exports=require("express")},function(e,n){e.exports=require("cryptr")},function(e,n){e.exports=require("passport")},function(e,n,t){const o=t(0),i=new(0,o.Schema)({user:String,logo:String,message:String,date:Date,type:String,channel:String,status:String}),a=o.model("notice",i);e.exports=a},function(e,n,t){const o=t(1),i=t(2),a=new(t(4))(process.env.SCK),s=t(30);e.exports={authCheck:(e,n,t)=>{e.user?t():n.redirect("/auth/twitch")},isAuthorized:async(e,n,t)=>{if(e.cookies.etid)try{let i=a.decrypt(e.cookies.etid),s=await o.findOne({"integration.twitch.etid":i});s?(e.user=s,n.cookie("etid",e.cookies.etid,{maxAge:288e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),t()):(n.clearCookie("etid"),n.status(401),n.json({}))}catch(e){n.clearCookie("etid"),n.status(401),n.json({})}else s(e,n),n.status(401),n.json({foo:"bar"})},isModAuthorized:async(e,n,t)=>{if(e.cookies.etid&&e.query.channel){let s=a.decrypt(e.cookies.etid),r=await o.findOne({"integration.twitch.etid":s});if(r){e.user=r;let o=await i.findOne({owner:e.query.channel,"moderators.uid":e.user._id});o?(e.channel=o,t()):(n.status(401),n.redirect(process.env.WEB_DOMAIN+"/mod"))}else n.clearCookie("etid"),n.status(401),n.redirect(process.env.WEB_DOMAIN)}else n.status(401),n.redirect(process.env.WEB_DOMAIN)},isAdminAuthorized:async(e,n,t)=>{let i=a.decrypt(e.cookies.etid),s=await o.findOne({"integration.twitch.etid":i});s&&(s.type="admin")?(e.user=s,n.cookie("etid",e.cookies.etid,{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}),t()):(n.status(401),n.json({message:"You are not authorized to make this request."}),t())}}},function(e,n){e.exports={emitNewChannel:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("new-channel",{name:n.name,"full-access":n["full-access"],connected:!1})},emitNewListener:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("new-listener",n)},emitUpdateListener:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("update-listener",n)},emitRemoveListener:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("remove-listener",n)},emitBecomeGold:(e,n)=>{console.log(n+" is becoming gold");let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("become-gold",n)},emitRemoveGold:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("remove-gold",n)},emitAwardedAchievement:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("achievement-awarded",n)},emitAwardedAchievementNonMember:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("achievement-awarded-nonMember",n)},emitTestListener:(e,n)=>{let t=e.app.get("ws"),o=e.app.get("IRCSOCKET");t.to(o).emit("test",n)},emitOverlayAlert:(e,n)=>{let t=e.app.get("ws"),o=e.app.get(n.channel+"-OVERLAYS");o&&o.forEach(e=>{t.to(e).emit("alert-recieved",n)})},emitOverlaySettingsUpdate:(e,n)=>{let t=e.app.get("ws"),o=e.app.get(n.channel+"-OVERLAYS");o&&o.forEach(e=>{t.to(e).emit("update-settings",n.overlay)})},emitNotificationsUpdate:(e,n)=>{let t=e.app.get("ws"),o=e.app.get(n.user+"-NOTIFICATIONS");o&&o.forEach(e=>{t.to(e).emit("notification-received",n)})}}},function(e,n,t){const o=t(0),i=new(0,o.Schema)({uid:Number,channel:String,title:String,description:String,icon:String,earnable:Boolean,limited:Boolean,secret:Boolean,listener:String,first:String,earned:Date,alert:Boolean,order:Number}),a=o.model("achievement",i);e.exports=a},function(e,n,t){const o=t(0);var i=new(0,o.Schema)({uid:String,token:String,created:Date});i.methods.hasExpired=function(){return Date.now()-Date.parse(this.created)>2592e5};const a=o.model("token",i);e.exports=a},function(e,n,t){const o=t(0),i=o.Schema,a=new i({uid:String,channel:String,achType:String,resubType:String,bot:String,query:i.Types.Mixed,condition:String,achievement:String,aid:Number}),s=o.model("listener",a);e.exports=s},function(e,n){e.exports=require("axios")},function(e,n,t){const o=t(0),i=new(0,o.Schema)({name:String,type:String,channel:String,cloudID:String,url:String,achievementID:String}),a=o.model("image",i);e.exports=a},function(e,n,t){const o=t(0),i=new(0,o.Schema)({twitchID:String,name:String,channelID:String,achievementID:Number,earned:Date}),a=o.model("queue",i);e.exports=a},function(e,n){e.exports=require("uuid/v1")},function(e,n,t){const o=t(13);let i=t(38).v2;i.config({cloud_name:process.env.CLDNAME,api_key:process.env.CLDKEY,api_secret:process.env.CLDS});e.exports={uploadImage:(e,n,t,a)=>{return new Promise((s,r)=>{o.findOne({name:n,channel:t}).then(l=>{l?(console.log("\nimage already exists"),s(l)):(console.log("\nnew image"),i.uploader.upload(e,(e,i)=>{e?(console.log(e),r({error:e})):(console.log("\nimage uploaded successfully"),new o({name:n,channel:t,cloudID:i.public_id,url:i.url,type:a||"achievement"}).save().then(e=>{console.log("new image in DB"),s(e)}))}))})})},destroyImage:e=>new Promise((n,t)=>{i.uploader.destroy(e,function(e){n(e)})})}},function(e,n,t){e.exports=t(18)},function(e,n,t){(function(e){const n=t(3),o=t(19),i=t(0),a=(t(20),t(5)),s=(t(21),t(22),t(24)),r=t(25),l=t(26).allowAccess,{searchChannels:d,searchMembers:c,searchMembersDetailed:h,searchMod:u,storeSocket:m,removeSocket:p,markNotificationRead:g,deleteNotification:f}=t(27);let v=t(28),y=t(29),w=t(33);const b=process.env.PORT||5e3;let _=n();_.set("view engine","ejs"),_.use(s()),_.use(r({limit:"50mb",extended:!0})),i.connect(process.env.MDB,{useNewUrlParser:!0},()=>{console.log("connected to mongodb")}),_.use(a.initialize()),_.use(a.session()),_.use(n.static("public")),_.use("/auth",[l],y),_.use("/api",[l],w),_.use(n.static(o.join(e,"client/build")));let I;_.listen(b);I=v.listen(process.env.SOCKET_PORT),_.set("ws",I),I.on("connection",function(e){e.handshake&&e.handshake.query&&m(e,_),e.on("handshake",function(n){if(n.name="SAIRC")_.set("IRCSOCKET",e.id);else if(n.web){let t=_.get("USERSOCKETS");t?t[n.user]=e.id:((t={})[n.user]=e.id,_.set("USERSOCKETS",t))}}),e.on("search-directory",n=>{d(e,n)}),e.on("search-members",n=>{h(e,n)}),e.on("search-gift-member",n=>{c(e,n)}),e.on("search-mod",n=>{u(e,n)}),e.on("mark-notification-read",n=>{g(e,n)}),e.on("delete-notification",n=>{f(e,n)}),e.on("disconnect",()=>{p(e,_)})}),console.log(`Express app listening on port ${b}`)}).call(this,"/")},function(e,n){e.exports=require("path")},function(e,n){e.exports=require("cookie-session")},function(e,n,t){const o=t(0),i=new(0,o.Schema)({socketID:String,name:String}),a=o.model("socket",i);e.exports=a},function(e,n,t){const o=t(5),i=t(23).Strategy,a=t(1),s=t(2),r=t(6),l=new(t(4))(process.env.SCK);o.serializeUser((e,n)=>{n(null,e)}),o.use(new i({clientID:process.env.TCID,clientSecret:process.env.TCS,callbackURL:process.env.TPR},(e,n,t,o)=>{let i=l.encrypt(e),d=l.encrypt(n),c={etid:t.id.toString(),token:i,refresh:d};a.findOne({"integration.twitch.etid":c.etid}).then(e=>{let n=!1;e?(e.integration.twitch=c,e.name!==t.login&&(e.name=t.login,n=!0),e.logo!==t.profile_image_url&&(e.logo=t.profile_image_url,n=!0),e.email!==t.email&&(e.email=t.email,n=!0),e.broadcaster_type!==t.broadcaster_type&&(e.broadcaster_type=t.broadcaster_type,n=!0),e.save().then(e=>{s.findOne({twitchID:e.integration.twitch.etid}).then(t=>{t?(t.owner!==e.name&&(n=!0,t.owner=e.name),t.logo!==e.logo&&(n=!0,t.logo=e.logo),t.save().then(t=>{n&&new r({user:e._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),o(null,e)})):(n&&new r({user:e._id,logo:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",message:"We noticed some information has been updated on Twitch, so we went ahead and updated your profile with those changes!",date:Date.now(),type:"profile",status:"new"}).save(),o(null,e))})})):new a({name:t.login,logo:t.profile_image_url,email:t.email,type:"user",channels:[],integration:{twitch:c},preferences:{autojoin:!0}}).save().then(e=>{o(null,e)})})}))},function(e,n){e.exports=require("passport-twitch.js")},function(e,n){e.exports=require("cookie-parser")},function(e,n){e.exports=require("body-parser")},function(e,n,t){e.exports={allowAccess:async(e,n,t)=>{var o;o=["http://www.streamachievements.com","http://streamachievements.com","https://www.streamachievements.com","https://streamachievements.com"];var i=e.headers.origin;o.indexOf(i)>-1&&n.setHeader("Access-Control-Allow-Origin",i),n.header("Access-Control-Allow-Credentials",!0),n.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),t()}}},function(e,n,t){const o=t(2),i=t(1),a=t(6),s=new(t(4))(process.env.SCK);e.exports={searchChannels:(e,n)=>{let t=new RegExp(n,"gi");o.find({owner:t}).sort({_id:-1}).limit(25).exec((n,t)=>{let o=t.map(e=>({owner:e.owner,logo:e.logo}));e.emit("channel-results",o)})},searchMembers:(e,n)=>{let t=new RegExp(n.value,"gi");o.findOne({owner:n.owner}).then(o=>{o&&i.find({_id:{$in:o.members},name:t}).sort({_id:-1}).limit(25).exec((t,i)=>{let a=i.map(e=>{let t=e.channels.findIndex(e=>e.channelID===o.id),i=e.channels[t].achievements.findIndex(e=>e.aid===n.aid);return{name:e.name,logo:e.logo,earned:i>=0}});e.emit("members-retrieved",a)})})},searchMembersDetailed:(e,n)=>{let t=new RegExp(n.value,"gi");o.findOne({owner:n.owner}).then(n=>{n&&i.find({_id:{$in:n.members},name:t}).sort({_id:-1}).limit(25).exec((t,o)=>{let i=o.map(e=>{let t=e.channels.findIndex(e=>e.channelID===n.id),o=e.channels[t].achievements.map(e=>e.aid);return{name:e.name,logo:e.logo,achievements:o,banned:e.channels[t].banned||!1}});e.emit("member-results",i)})})},searchMod:(e,n)=>{let t=new RegExp(n.value,"gi");o.findOne({owner:n.owner}).then(n=>{n&&i.find({_id:{$in:n.members},name:t}).sort({_id:-1}).limit(25).exec((t,o)=>{let i=o.map(e=>{let t=n.moderators.findIndex(n=>n.uid===e.id);return{name:e.name,logo:e.logo,isMod:t>=0}});e.emit("members-retrieved",i)})})},storeSocket:(e,n)=>{if(e.handshake.query.uid)o.findOne({oid:e.handshake.query.uid}).then(t=>{if(t){let o=n.get(t.owner+"-OVERLAYS"),i=n.get("SOCKET-LOOKUP");i||(i={}),o?o.push(e.id):o=[e.id],console.log(t.owner+"'s sockets: "+o.join(",")),n.set(t.owner+"-OVERLAYS",o),i[e.id]={name:t.owner,type:"OVERLAYS"},n.set("SOCKET-LOOKUP",i)}else e.emit("connect-issue","Issue while connecting")});else if(e.handshake.query.nid){let t=s.decrypt(e.handshake.query.nid);i.findById(t).then(t=>{let o=n.get(t.name+"-NOTIFICATIONS"),i=n.get("SOCKET-LOOKUP");i||(i={}),o?o.push(e.id):o=[e.id],n.set(t.name+"-NOTIFICATIONS",o),i[e.id]={name:t.name,type:"NOTIFICATIONS"},n.set("SOCKET-LOOKUP",i)})}},removeSocket:(e,n)=>{let t=n.get("SOCKET-LOOKUP");if(t){let o=t[e.id];if(o){let i=n.get(`${o.name}-${o.type}`);if(i){let t=i.filter(n=>n!==e.id);n.set(`${o.name}-${o.type}`,t)}delete t[e.id],n.set("SOCKET-LOOKUP",t)}}},markNotificationRead:(e,n)=>{if(n.notification)a.findById(n.notification.id).then(n=>{n.status="read",n.save().then(n=>{e.emit("notification-read",n.id)})});else if(n.nid){let t=s.decrypt(n.nid);a.find({user:t}).then(n=>{n&&(n.forEach(e=>{"read"!==e.status&&(e.status="read",e.save())}),e.emit("notification-read","all"))})}},deleteNotification:(e,n)=>{a.findByIdAndRemove(n.id).then(n=>{e.emit("notification-removed",n.id)})}}},function(e,n){e.exports=require("socket.io")},function(e,n,t){const o=t(3).Router(),i=t(5),a=t(4),s=t(12),r=new a(process.env.SCK),l=t(7).isAuthorized,d=(t(1),t(2)),{emitBecomeGold:c,emitRemoveGold:h}=t(8);t(31);let u=t(32),m=u.patreon,p=(0,u.oauth)(process.env.PCID,process.env.PCS);const g="https://www.patreon.com/api/oauth2/v2/identity?include=memberships&fields%5Buser%5D=thumb_url,vanity";o.get("/twitch",i.authenticate("twitch.js",{scope:["user_read","user:read:email"]})),o.get("/twitch/redirect",i.authenticate("twitch.js"),(e,n)=>{console.log(e.cookies),e.session.user=e.user;let t=r.encrypt(e.user.integration.twitch.etid);n.cookie("etid",t,{maxAge:144e5,httpOnly:!1,secure:!0,domain:"streamachievements.com"}),new Promise((n,t)=>{"user"!==e.user.type?d.findOne({owner:e.user.name}).then(t=>{t?t.broadcaster_type?t.broadcaster_type.twitch!==e.user.broadcaster_type?(t.broadcaster_type.twitch=e.user.broadcaster_type,t.save().then(e=>{n()})):n():(t.broadcaster_type={twitch:e.user.broadcaster_type},t.save().then(e=>{n()})):n()}):n()}).then(()=>{let t=e.user.integration.patreon;if(t&&"lifetime"!==t.status){let o,{at:i,rt:a,id:l,expires:u}=t;v(u)?(console.log("patreon token expired"),o=new Promise((n,o)=>{y(e,t.rt).then(e=>{console.log("token is refreshed"),e&&(i=e.at,a=e.rt,u=e.expires),n()})})):o=Promise.resolve(),o.then(()=>{let o=r.decrypt(i);l?(console.log("getting up to date info from patreon"),s.get(`https://www.patreon.com/api/oauth2/v2/members/${l}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${o}`}}).then(o=>{console.log("up to date info obtained");let s=o.data.data.attributes.patron_status,r=o.data.data.attributes.is_follower,l=o.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,m={id:t.id,thumb_url:t.thumb_url,vanity:t.vanity,at:i,rt:a,is_follower:r,status:s,is_gold:l,expires:u};e.user.integration.patreon?!e.user.integration.patreon.is_gold&&l?c(e,e.user.name):e.user.integration.patreon.is_gold&&!l&&h(e,e.user.name):l?c(e,e.user.name):h(e,e.user.name);let p=Object.assign({},e.user.integration);p.patreon={...m},e.user.integration=p,e.user.lastLogin=Date.now(),e.user.save().then(t=>{"verified"!==t.type&&"admin"!==t.type||d.findOne({owner:e.user.name}).then(e=>{e.gold!==t.integration.patreon.is_gold&&(e.gold=t.integration.patreon.is_gold,e.save())}),f(e,n)})}).catch(t=>{if(console.log(t.response),401===t.response.status||403===t.response.status)n.redirect("/auth/patreon");else if(404===t.response.status){let t=Object.assign({},e.user.integration),o={id:null,thumb_url:t.patreon.thumb_url,vanity:t.patreon.vanity,at:t.patreon.at,rt:t.patreon.rt,is_follower:null,status:null,is_gold:null,expires:t.patreon.expires};t.patreon={...o},e.user.integration=t,e.user.lastLogin=Date.now(),e.user.save().then(t=>{"verified"!==t.type&&"admin"!==t.type||d.findOne({owner:e.user.name}).then(e=>{e.gold!==t.integration.patreon.is_gold&&(e.gold=!1,e.save())}),f(e,n)})}})):(console.log("grabbing id from user"),(l=e.user.integration.patreon.id)||(e.user.lastLogin=Date.now(),e.user.save().then(t=>{f(e,n)})))})}else e.user.lastLogin=Date.now(),e.user.save().then(t=>{f(e,n)})})}),o.get("/patreon",l,(e,n)=>{console.log("why tho?");let t="https://www.patreon.com/oauth2/authorize?";t+="response_type=code&",t+="client_id="+process.env.PCID+"&",t+="redirect_uri="+process.env.PPR,t+="&scope=campaigns%20identity%20identity%5Bemail%5D%20campaigns.members",n.redirect(t)}),o.get("/patreon/redirect",l,(e,n)=>{let t=e.query.code;return p.getTokens(t,process.env.PPR).then(n=>{m(n.access_token);let t=e.cookies.etid;return new Promise((e,o)=>{let i,a,l=r.encrypt(n.access_token),d=r.encrypt(n.refresh_token),c=new Date,h=(new Date).setDate(c.getDate()+14);s.get(g,{headers:{Authorization:`Bearer ${n.access_token}`}}).then(o=>{if(i=o.data.data.attributes.vanity,a=o.data.data.attributes.thumb_url,o.data.included){let r=o.data.included[0].id;s.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${n.access_token}`}}).then(n=>{let o=n.data.data.attributes.patron_status,s=n.data.data.attributes.is_follower,c=n.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0;e({id:r,thumb_url:a,vanity:i,at:l,rt:d,etid:t,is_follower:s,status:o,is_gold:c,expires:h})})}else e({thumb_url:a,vanity:i,at:l,rt:d,etid:t,expires:h})})})}).then(t=>{let{id:o,thumb_url:i,vanity:a,at:s,rt:r,etid:l,is_follower:u,status:m,is_gold:p,expires:g}=t,f=Object.assign({},e.user.integration);f.patreon={id:o,thumb_url:i,vanity:a,at:s,rt:r,is_follower:u,status:m,is_gold:p,expires:g},p?c(e,e.user.name):h(e,e.user.name),e.user.integration=f,e.user.save().then(t=>{"verified"===t.type&&d.findOne({owner:e.user.name}).then(e=>{e.gold!==p&&(e.gold=p,e.save())}),n.redirect(process.env.WEB_DOMAIN+"profile")})})}),o.post("/twitch/sync",l,(e,n)=>{w(e.user,e.cookies.etid).then(e=>{n.json(e)})}),o.post("/patreon/sync",l,(e,n)=>{b(e,e.cookies.etid).then(e=>{n.json(e)})}),o.post("/patreon/unlink",l,(e,n)=>{let t=Object.assign({},e.user.integration);delete t.patreon,"verified"===e.user.type&&h(e,e.user.name),e.user.integration=t,e.user.save().then(t=>{d.findOne({owner:e.user.name}).then(e=>{e?(e.icons={default:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",hidden:"https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png"},e.save().then(e=>{n.json({success:!0,service:"patreon"})})):n.json({success:!0,service:"patreon"})})})});let f=(e,n)=>{let t=e.cookies._ru;if(t){let e=r.decrypt(t);n.clearCookie("_ru",{domain:"streamachievements.com"}),e?0!=e.indexOf(process.env.WEB_DOMAIN)?n.redirect(process.env.WEB_DOMAIN+"home"):n.redirect(e):n.redirect(process.env.WEB_DOMAIN+"home")}else n.redirect(process.env.WEB_DOMAIN+"home")},v=e=>{let n=new Date(e);return new Date>n},y=(e,n)=>new Promise((t,o)=>{let i=r.decrypt(n);console.log("calling to get a token refresh"),s.post(`https://www.patreon.com/api/oauth2/token?grant_type=refresh_token&refresh_token=${i}&client_id=${process.env.PCID}&client_secret=${process.env.PCS}`).then(n=>{console.log("token obtained");let o=r.encrypt(n.data.access_token),i=r.encrypt(n.data.refresh_token),a=new Date,s=(new Date).setDate(a.getDate()+14),l=Object.assign({},e.user.integration);l.patreon.at=o,l.patreon.rt=i,l.patreon.expires=s,e.user.integration=l,e.user.save().then(e=>{t({at:o,rt:i,expires:s})})}).catch(e=>{t(null)})}),w=(e,n)=>e.integration.twitch?new Promise((n,t)=>{s.get(`https://api.twitch.tv/helix/users/?id=${e.integration.twitch.etid}`,{headers:{"Client-ID":process.env.TCID}}).then(t=>{e.name=t.data.data[0].login,e.logo=t.data.data[0].profile_image_url,e.save().then(e=>{d.findOne({twitchID:e.integration.twitch.etid}).then(t=>{t?(t.owner!==e.name&&(updated=!0,t.owner=e.name),t.logo!==e.logo&&(updated=!0,t.logo=e.logo),t.save().then(t=>{n({username:e.name,logo:e.logo})})):n({username:e.name,logo:e.logo})})})})}):Promise.resolve(),b=(e,n)=>e.user.integration.patreon?new Promise((t,o)=>{let i,{at:a,rt:l,id:u,expires:m}=e.user.integration.patreon;(i=v(m)?new Promise((n,t)=>{y(e.user,l).then(e=>{e&&(a=e.at,l=e.rt,m=e.expires),n()})}):Promise.resolve()).then(()=>{let o=r.decrypt(a);s.get(g,{headers:{Authorization:`Bearer ${o}`}}).then(i=>{if(vanity=i.data.data.attributes.vanity,thumb_url=i.data.data.attributes.thumb_url,i.data.included){let r=i.data.included[0].id;s.get(`https://www.patreon.com/api/oauth2/v2/members/${r}?include=currently_entitled_tiers&fields%5Bmember%5D=patron_status,full_name,is_follower,last_charge_date&fields%5Btier%5D=amount_cents,description,discord_role_ids,patron_count,published,published_at,created_at,edited_at,title,unpublished_at`,{headers:{Authorization:`Bearer ${o}`}}).then(o=>{let i=o.data.data.attributes.patron_status,s=o.data.data.attributes.is_follower,u=o.data.data.relationships.currently_entitled_tiers.data.map(e=>e.id).indexOf("3497710")>=0,p={id:r,thumb_url:thumb_url,vanity:vanity,at:a,rt:l,etid:n,is_follower:s,status:i,is_gold:u,expires:m};!e.user.integration.patreon.is_gold&&u?c(e,e.user.name):e.user.integration.patreon.is_gold&&!u&&h(e,e.user.name);let g=Object.assign({},e.user.integration);g.patreon={...p},e.user.integration=g,e.user.save().then(e=>{"verified"===e.type&&d.findOne({owner:e.name}).then(n=>{n.gold!==e.integration.patreon.is_gold&&(n.gold=e.integration.patreon.is_gold,n.save())}),t({vanity:e.integration.patreon.vanity,thumb_url:e.integration.patreon.thumb_url,follower:e.integration.patreon.is_follower,status:e.integration.patreon.status,gold:e.integration.patreon.is_gold})})})}else t({thumb_url:thumb_url,vanity:vanity,at:a,rt:l,etid:n})})})}):Promise.resolve();o.get("/logout",(e,n)=>{e.logout(),n.clearCookie("etid",{domain:"streamachievements.com"}),n.redirect(process.env.WEB_DOMAIN)}),e.exports=o},function(e,n,t){const o=new(t(4))(process.env.SCK),i={"/api/profile":"profile","/api/achievement/retrieve":"dashboard","/api/channel/dashboard":"dashboard","/api/channel/retrieve":"channel/{channel}","/api/channel/mod":"mod","/api/channel/mod/retrieve":"mod/{channel}","/api/achievement/mod/retrieve":"mod/{channel}"};e.exports=(e,n)=>{let{originalUrl:t,params:a,query:s,headers:r}=e,l=process.env.WEB_DOMAIN;if(r.origin+"/"===process.env.WEB_DOMAIN){let e=t.split("?")[0];console.log(e),e&&(l+=i[e],console.log(l),l=s&&s.channel?l.replace(new RegExp("{channel}","gi"),s.channel):l.replace(new RegExp("/{channel}","gi"),""),n.cookie("_ru",o.encrypt(l),{maxAge:144e5,secure:!0,httpOnly:!1,domain:"streamachievements.com"}))}}},function(e,n){e.exports=require("url")},function(e,n){e.exports=require("patreon")},function(e,n,t){const o=t(3).Router(),i=t(5),a=t(1),s=t(2),r=t(6),l=t(9),d=t(10),c=t(0),h=new(t(4))(process.env.SCK);let u=t(34),m=t(40),p=t(42),g=t(43);const{isAuthorized:f,isAdminAuthorized:v}=t(7),{emitTestListener:y,emitNewChannel:w}=t(8);o.use("/channel",u),o.use("/achievement",m),o.use("/irc",p),o.use("/admin",g),o.get("/token",i.authenticate("twitch"),(e,n)=>n.json({success:!0,data:e.user.id}));let b=!1;o.get("/users",v,(e,n)=>{d.find({}).then(e=>{let t={},o=e.map(e=>(t[e.uid]=e.token,e.uid));a.find({_id:{$in:o}}).then(e=>{let o=e.map(e=>({name:e.name,logo:e.logo,status:"not issued"===t[e.id]?"new":"pending"}));n.json({users:o})})})}),o.get("/user",f,(e,n)=>{let t,o=h.encrypt(e.user._id),i=!1;if(setTimeout(()=>{b&&(console.log("timeout"),n.status(500),n.json({message:"Internal Server Issue"}))},1e4),e.user.integration.patreon){let n=e.user.integration.patreon;t={vanity:n.vanity,thumb_url:n.thumb_url,follower:n.is_follower,status:n.status,gold:n.is_gold}}else t=!1;r.countDocuments({user:e.user._id,status:"new"}).exec().then(a=>{s.findOne({twitchID:e.user.integration.twitch.etid}).then(r=>{s.find({"moderators.uid":e.user._id}).then(s=>{if(s&&(i=!0),b=!1,r)n.json({username:e.user.name,logo:e.user.logo,patreon:t,status:"verified",type:e.user.type,preferences:e.user.preferences,notificationCount:a,uid:o,isMod:i});else{let s="viewer";d.findOne({uid:e.user._id}).then(r=>{r&&(s="not issued"===r.token?"review":"pending"),n.json({username:e.user.name,logo:e.user.logo,patreon:t,status:s,type:e.user.type,preferences:e.user.preferences,notificationCount:a,uid:o,isMod:i})})}})})})}),o.get("/profile",f,(e,n)=>{let t=e.user.channels.map(e=>new c.Types.ObjectId(e.channelID));s.find({_id:{$in:t}}).then(t=>{let o=t.map(n=>{let t=e.user.channels.filter(e=>e.channelID===n.id),o=0;return new Promise((e,i)=>{l.countDocuments({channel:n.owner}).then(i=>{i>0&&(o=Math.round(t[0].achievements.length/i*100)),e({logo:n.logo,owner:n.owner,percentage:o})})})}),i=new Promise((n,t)=>{r.countDocuments({user:e.user._id}).exec().then(t=>{r.find({user:e.user._id}).sort({date:-1}).limit(15).exec((e,t)=>{if(t){let e=!1,o=t.map(e=>({id:e._id,logo:e.logo,message:e.message,date:e.date,type:e.type,channel:e.channel,status:e.status}));15===o.length&&(e=15),n({notifications:o,next:e})}else n([])})})});Promise.all(o).then(t=>{i.then(o=>{e.user.preferences?n.json({channels:t,preferences:e.user.preferences,notifications:o.notifications,next:o.next}):(e.user.preferences={autojoin:!1},e.user.save().then(e=>{n.json({channels:t,preferences:e.preferences,notifications:o.notifications,next:o.next})}))})})})}),o.get("/notifications",f,(e,n)=>{let t=parseInt(e.query.next);r.find({user:e.user._id}).sort({date:-1}).skip(t).limit(15).exec((e,t)=>{if(t){let e=!1,o=t.map(e=>({id:e._id,logo:e.logo,message:e.message,date:e.date,type:e.type,channel:e.channel,status:e.status}));15===o.length&&(e+=15),n.json({notifications:o,next:e})}else n.json([])})}),o.post("/profile/preferences",f,(e,n)=>{let t={...e.user.preferences}||{};t={...e.body.preferences},e.user.preferences=t,e.user.save().then(t=>{n.json(e.user.preferences)})}),o.post("/test",v,(e,n)=>{w(e,{name:e.body.channel,"full-access":!1})}),e.exports=o},function(e,n,t){const o=t(3).Router(),i=(t(5),t(15)),{isAuthorized:a,isModAuthorized:s,isAdminAuthorized:r}=t(7),l=t(0),d=(new(t(4))(process.env.SCK),t(35)),c=t(36),h=t(37),u=t(1),m=t(2),p=t(9),g=t(11),f=t(13),v=t(10),y=t(14),w=t(6),{uploadImage:b,destroyImage:_}=t(16),{emitNewChannel:I,emitOverlaySettingsUpdate:D,emitOverlayAlert:x,emitNotificationsUpdate:O}=t(8),j="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",S="https://res.cloudinary.com/phirehero/image/upload/v1558811887/hidden-icon.png",T=/^https:\/\/res\.cloudinary\.com\/phirehero\/.*\.(png|jpg|jpeg)$/gm,k=t(39);o.get("/create",a,(e,n)=>{m.findOne({twitchID:e.user.twitchID}).then(t=>{t?n.json({error:"Channel already exists!",channel:t}):new m({owner:e.user.name,twitchID:e.user.twitchID,theme:"",logo:e.user.logo,achievements:[],members:[],icons:{default:j,hidden:S},oid:i(),nextUID:1}).save().then(t=>{let o=!1;e.user.integration&&e.user.integration.patreon&&("forever"===e.user.integration.patreon.type||e.user.integration.patreon.is_gold)&&(o=!0),I({name:e.user.name,"full-access":o,online:!1}),e.user.channelID=t.id,e.user.save().then(o=>{n.json({channel:t,user:e.user})})})})}),o.post("/leave",a,(e,n)=>{m.findOne({owner:e.body.channel}).then(t=>{if(t){let o,i=t.members;i.length>0&&i.includes(e.user.id)?(o=i.findIndex(n=>{e.user.id}),i.splice(o,1),t.save().then(t=>{o=0,o=e.user.channels.findIndex(e=>e.channelID===t.id),e.user.channels.splice(o,1),e.user.save().then(e=>{n.json({leave:!0})})})):n.send("User isn't a part of this channel")}else n.send("Channel doesn't exist")})}),o.post("/join",a,(e,n)=>{m.findOne({owner:e.body.channel}).then(t=>{if(t){let o=e.user.channels.some(e=>e.channelID===t.id),i=t.members.includes(e.user.id);if(o)i?n.json({user:e.user,channel:t}):(t.members.push(e.user.id),t.save().then(t=>{n.json({user:e.user,channel:t})}));else if(i)o?n.json({user:e.user,channel:t}):(e.user.channels.push({channelID:t.id,achievements:[],sync:!0,banned:!1}),e.user.save().then(e=>{n.json({user:e,channel:t})}));else{let o={channelID:t.id,achievements:[],sync:!0,banned:!1};console.log("checking queues..."),y.find({twitchID:e.user.integration.twitch.etid,channelID:t.id}).then(i=>{i&&(console.log("Giving achievements to "+e.user.name),i.forEach(e=>{console.log("awarding "+e.achievementID),o.achievements.push({aid:e.achievementID,earned:e.earned||new Date}),y.deleteOne({_id:e.id}).then(e=>{console.log(e)})}),console.log("---------------")),e.user.channels.push(o),e.user.save().then(e=>{t.members.push(e.id),t.save().then(t=>{n.json({user:e,channel:t})})})})}}else n.status(405),n.send("Channel requested to join does not exist!")})}),o.get("/list",(e,n)=>{m.find({},(e,t)=>{n.json(t)})}),o.get("/retrieve",a,(e,n)=>{let t=e.query.channel;if(e.query.bb&&m.find({watcher:!0}).then(e=>{e.map(e=>({name:e.owner,listeners:e.listeners}))}),t){let o=!1;m.findOne({owner:t}).then(i=>{if(i){if(e.user.favorites){e.user.favorites.findIndex(e=>e===i.id)>=0&&(o=!0)}p.find({channel:t}).then(a=>{let s,r,l,d=i.members.includes(e.user.id);if(d){let n=e.user.channels.findIndex(e=>e.channelID===i.id),t=e.user.channels[n].achievements;l=e.user.channels[n].banned||!1;let o={},d=t.filter((e,n)=>{return a.findIndex(n=>n.uid===e.aid)>=0&&!o[e.aid]&&(o[e.aid]=!0,!0)});d.length!==t.length&&(e.user.channels[n].achievements=d,e.user.save(),console.log("synced achievements..."),t=d),s=t.map(e=>e.aid),r=a.map(e=>{let n=Object.assign({},e._doc),o=s.findIndex(e=>e===n.uid);return o>=0&&(n.earned=t[o].earned),n})}else r=a;let c=r.map(e=>{let n=e._doc?{...e._doc}:e;return delete n.__v,delete n._id,n});c.sort((e,n)=>e.order>n.order?1:-1),u.findOne({name:t}).then(e=>{if(e){let t=!1;e.integration.patreon&&e.integration.patreon.is_gold&&(t=!0);let a={...i._doc};delete a.__v,delete a._id,n.json({channel:a,achievements:c,joined:d,fullAccess:t,favorited:o,banned:l})}else n.json({error:"Channel doesn't exist"})})})}else n.json({error:"No channel found for the name: "+t})})}}),o.get("/dashboard",a,(e,n)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{if(e){let t=new Promise((n,t)=>{p.find({channel:e.owner}).then(e=>{if(e){let t=e.map(e=>e.listener);g.find({_id:{$in:t}}).then(t=>{let o=e.map(e=>{let n=t.find(n=>n.id===e.listener);if(n){let t={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:n.code,order:e.order};return n.resubType&&(t.resubType=n.resubType),n.query&&(t.query=n.query),t}return e});o.sort((e,n)=>e.order>n.order?1:-1),n(o)})}else n(e)})}),o=new Promise((n,t)=>{f.find({channel:e.owner}).then(e=>{n(e?{gallery:e}:{gallery:[]})})}),a=new Promise((n,t)=>{let o=e.moderators.map(e=>e.uid);u.find({_id:{$in:o}}).then(t=>{let o=t.map(n=>{let t=e.moderators.find(e=>e.uid===n.id);return{id:n.id,name:n.name,logo:n.logo,permissions:t.permissions}});n(o)})});Promise.all([t,o,a]).then(t=>{let o;e.oid?e.overlay&&0!==Object.keys(e.overlay).length?(delete(o={...e._doc}).__v,delete o._id,n.json({channel:o,achievements:t[0],images:t[1],moderators:t[2]})):(e.overlay=k,e.save().then(e=>{delete(o={...e._doc}).__v,delete o._id,n.json({channel:o,achievements:t[0],images:t[1],moderators:t[2]})})):(e.oid=i(),e.overlay&&0!==Object.keys(e.overlay).length||(e.overlay=k),e.save().then(e=>{delete(o={...e._doc}).__v,delete o._id,n.json({channel:o,achievements:t[0],images:t[1],moderators:t[2]})}))})}else n.json({error:"User doesn't manage a channel"})})}),o.post("/mod",a,(e,n)=>{let t=e.body.mods,o=[];m.findOne({owner:e.user.name}).then(e=>{u.find({name:{$in:t}}).then(t=>{let i=e.moderators;t.forEach(e=>{i.push({uid:e.id,permissions:{channel:!0,chat:!0}}),o.push({name:e.name,logo:e.logo,permissions:{channel:!0,chat:!0}})}),e.moderators=i,e.save().then(e=>{n.json({moderators:o})})})})}),o.post("/mod/revoke",a,(e,n)=>{let t=e.body.mod;m.findOne({owner:e.user.name}).then(e=>{e&&u.findOne({name:t}).then(t=>{if(t){let o=e.moderators,i=o.findIndex(e=>e.uid===t.id);i>=0?(o.splice(i,1),e.moderators=o,e.save().then(e=>{n.json({removed:i})})):n.json({error:"Error removing mod"})}})})}),o.post("/update",a,(e,n)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{})}),o.post("/mod/preferences",s,(e,n)=>{C(e,n,e.channel)}),o.post("/preferences",a,(e,n)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?C(e,n,t):n.json({error:"Issue updating preferences"})})});let C=(e,n,t)=>{let o,i,a;o=new Promise((n,o)=>{e.body.defaultIcon&&h(e.body.defaultIcon)?b(e.body.defaultIcon,e.body.defaultIconName,t.owner,"default").then(e=>{n(e.url)}):e.body.defaultImage&&T.test(e.body.defaultImage)?n(e.body.defaultImage):n()}),i=new Promise((n,o)=>{e.body.hiddenIcon&&h(e.body.hiddenIcon)?b(e.body.hiddenIcon,e.body.hiddenIconName,t.owner,"hidden").then(e=>{n(e.url)}):e.body.hiddenImage&&T.test(e.body.hiddenImage)?n(e.body.hiddenImage):n()}),a=new Promise((n,o)=>{if(e.body.overlay){let{chat:o,chatMessage:i,sfx:a,enterEffect:s,exitEffect:r,duration:l,volume:d,delay:c}=e.body.overlay,h=t.overlay||{};o&&(h.chat=o),void 0!==i&&(h.chatMessage=i),a&&(h.sfx=process.env.WEB_DOMAIN+"sounds/achievement."+a+".mp3"),s&&(h.enterEffect=s),r&&(h.exitEffect=r),l&&(h.duration=l),d&&(h.volume=d),c&&(h.delay=c),n(h)}else n()}),Promise.all([o,i,a]).then(o=>{let i={default:t.icons.default,hidden:t.icons.hidden};o[0]&&(i.default=o[0]),o[1]&&(i.hidden=o[1]),o[2]&&(t.overlay=o[2],updateSettings=!0),t.icons=i,t.save().then(i=>{o[0]!==i.icons.default&&console.log("uh oh"),updateSettings&&D(e,{channel:i.owner,overlay:i.overlay}),f.find({channel:t.owner}).then(e=>{e?n.json({channel:i,images:{gallery:e}}):n.json({channel:i})})})})};o.post("/image",a,(e,n)=>{let t=e.body.image;_(t.cloudID).then(o=>{let i,a=new Promise((n,o)=>{""!==t.achievementID?p.findOne({_id:t.achievementID}).then(t=>{t?(t.icon="",t.save().then(()=>{p.find({channel:e.user.name}).then(e=>{n(e)})})):n()}):n()}),s=new Promise((n,o)=>{f.deleteOne({_id:t._id}).then(t=>{f.find({channel:e.user.name}).then(e=>{console.log("\nGetting all images after delete"),n(e?{gallery:e,default:""}:{gallery:[],default:""})})})});i="hidden"===t.type||"default"===t.type?new Promise((n,o)=>{m.findOne({twitchID:e.user.integration.twitch.etid}).then(e=>{let o={...e.icons};"default"===t.type?o.default=j:"hidden"===t.type&&(o.hidden=S),e.icons=o,e.save().then(e=>{n(e)})})}):Promise.resolve(),Promise.all([a,s,i]).then(e=>{let t={images:e[1]};e[0]&&(t.achievements=e[0]),e[2]&&(t.channel=e[2]),n.json(t)})})}),o.get("/user",a,(e,n)=>{let t,o,i,a={};e.user.favorites&&e.user.favorites.forEach(e=>{a[e]=!0});let s=e.user.favorites.map(e=>new l.Types.ObjectId(e)),r=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new l.Types.ObjectId(e.channelID)),d=new Promise((n,o)=>{m.find({_id:{$in:s}}).exec((o,i)=>{let a=i.map(n=>{let t=e.user.channels.find(e=>e.channelID===n.id),o=0;return new Promise((e,i)=>{p.countDocuments({channel:n.owner}).then(i=>{i>0&&(o=Math.round(t.achievements.length/i*100)),e({logo:n.logo,owner:n.owner,percentage:o,favorite:!0})})})});Promise.all(a).then(e=>{t=e,console.log(t),n()})})}),c=new Promise((n,t)=>{m.find({_id:{$in:r}}).limit(15).exec((t,a)=>{let s=a.map(n=>{let t=e.user.channels.find(e=>e.channelID===n.id),o=0;return new Promise((e,i)=>{p.countDocuments({channel:n.owner}).then(i=>{i>0&&(o=Math.round(t.achievements.length/i*100)),e({logo:n.logo,owner:n.owner,percentage:o,favorite:!1})})})});Promise.all(s).then(t=>{o=t,i=t.length<e.user.channels.length?t.length:-1,n()})})});Promise.all([d,c]).then(e=>{n.json({channels:t.concat(o),offset:i})})}),o.post("/member/save",a,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t&&m.findOne({owner:e.user.name}).then(o=>{if(o){let i=t.channels.findIndex(e=>e.channelID===o.id);if(i>=0&&!t.channels[i].banned){let a=e.body.achievements,s=t.channels[i].achievements;if(a.length>0){let r=Date.now();a.forEach(e=>{let n=s.findIndex(n=>n.aid===e);n>=0?s.splice(n,1):s.push({aid:e,earned:r})}),t.save().then(t=>{new w({user:t._id,logo:o.logo,message:"Your achievements have been adjusted by the owner of the channel!",date:Date.now(),type:"achievement",channel:o.owner,status:"new"}).save().then(o=>{O(e,{notification:{id:o._id,logo:o.logo,message:o.message,date:o.date,type:o.type,channel:o.channel,status:o.status},user:t.name}),n.json({member:{name:t.name,logo:t.logo,achievements:t.channels[i].achievements.map(e=>e.aid),banned:t.channels[i].banned}})})})}}}})})}),o.post("/member/reset",a,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t?m.findOne({owner:e.user.name}).then(e=>{if(e){let o=t.channels.findIndex(n=>n.channelID===e.id);o>=0&&(t.channels[o].achievements=[],t.save().then(e=>{n.json({member:{name:e.name,logo:e.logo,achievements:[]}})}))}}):n.json({error:"Unexpected error occured"})})}),o.post("/member/ban",a,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t?m.findOne({owner:e.user.name}).then(o=>{if(o){let i=t.channels.findIndex(e=>e.channelID===o.id);i>=0&&(t.channels[i].banned=!0,e.body.resetAchievements&&(t.channels[i].achievements=[]),t.save().then(e=>{n.json({member:{name:e.name,logo:e.logo,achievements:e.channels[i].achievements.map(e=>e.aid),banned:!0}})}))}}):n.json({error:"Unexpected error occured"})})}),o.post("/member/unban",a,(e,n)=>{u.findOne({name:e.body.id}).then(t=>{t?m.findOne({owner:e.user.name}).then(e=>{if(e){let o=t.channels.findIndex(n=>n.channelID===e.id);o>=0&&(t.channels[o].banned=!1,t.save().then(e=>{n.json({member:{name:e.name,logo:e.logo,achievements:e.channels[o].achievements.map(e=>e.aid),banned:!1}})}))}}):n.json({error:"Unexpected error occured"})})}),o.get("/member/retrieve",a,(e,n)=>{let t=parseInt(e.query.offset);E(e,n,t).then(e=>{console.log(e.members.length+t),console.log(e.channel.members.length),t=e.members.length+t<e.channel.members.length?e.members.length+t:-1,n.json({members:e.members,offset:t})})});let E=(e,n,t)=>new Promise((n,o)=>{m.findOne({owner:e.user.name}).then(e=>{if(e){let o=e.members;u.find({_id:{$in:o}}).sort({name:1}).skip(t).limit(15).exec((t,o)=>{let i=o.map(n=>{let t=n.channels.find(n=>n.channelID===e.id);return{name:n.name,logo:n.logo,achievementsEarned:t.achievements.map(e=>e.aid)}});n({members:i,channel:e})})}else o()})});o.get("/user/retrieve",a,(e,n)=>{let t=parseInt(e.query.offset),o=e.user.channels.filter(n=>!e.user.favorites.includes(n.channelID)).map(e=>new l.Types.ObjectId(e.channelID));m.find({_id:{$in:o}}).skip(t).limit(15).exec((o,i)=>{let a=i.map(n=>{let t=e.user.channels.find(e=>e.channelID===n.id),o=0;return new Promise((e,i)=>{p.countDocuments({channel:n.owner}).then(i=>{i>0&&(o=Math.round(t.achievements.length/i*100)),e({logo:n.logo,owner:n.owner,percentage:o,favorite:!1})})})});Promise.all(a).then(o=>{t=o.length+t<e.user.channels.length?o.length+t:-1,n.json({channels:o,offset:t})})})}),o.post("/signup",a,(e,n)=>{e.body.uid;let t=new v({uid:e.user._id,token:"not issued"}),o=d.randomBytes(16).toString("hex");t.token=o,t.created=Date.now(),t.save().then(t=>{let i=e.user.email;var a={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},s=c.createTransport({service:"gmail",auth:a});const r={from:process.env.GML,to:i,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">You are ready to start creating achievements that your community will be able to hunt for and earn!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+o+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of achievements, and can\'t wait to see how much your community engages and enjoys them!</p></div>'};s.sendMail(r,function(t,o){t?console.log(t):new w({user:e.user._id,logo:j,message:"Your channel is ready to begin! Go check your email for your confirmation code, and don't forget to check your spam folder!",date:Date.now(),type:"confirmation",status:"new"}).save().then(e=>{console.log(e)}),n.json({message:"email sent"})})})}),o.post("/queue",r,(e,n)=>{let t=e.body.uid;v.deleteOne({uid:t}).then(e=>{u.findById(t).then(e=>{e.email;c.createTransport({service:"gmail",auth:{user:process.env.GML,pass:process.env.GMLP}});process.env.GML})})}),o.post("/confirm",r,(e,n)=>{u.findOne({name:e.body.name}).then(e=>{let t=e._id;v.findOne({uid:t}).then(o=>{let i=d.randomBytes(16).toString("hex");o.token=i,o.created=Date.now(),o.save().then(o=>{let a=e.email;var s={type:"oauth2",user:process.env.GML,clientId:process.env.GMLCID,clientSecret:process.env.GMLCS,refreshToken:process.env.GMLRT},r=c.createTransport({service:"gmail",auth:s});const l={from:process.env.GML,to:a,subject:"Your Confirmation Code!",html:'<div style="background:#222938;padding-bottom:30px;"><h1 style="text-align:center;background:#2f4882;padding:15px;margin-top:0;"><img style="max-width:600px;" src="https://res.cloudinary.com/phirehero/image/upload/v1557947921/sa-logo.png" /></h1><h2 style="color:#FFFFFF; text-align: center;margin-top:30px;margin-bottom:25px;font-size:22px;">Thank you for your interest in Stream Achievements!</h2><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We reviewed your channel and feel you are a perfect fit to join in on this pilot, and test the new features we aim to provide for streamers!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">To get started, all you need to do is <a style="color: #ecdc19;" href="http://streamachievements.com/channel/verify?id='+i+'&utm_medium=Email">verify your account</a>, and you\'ll be all set!</p><p style="color:#FFFFFF;font-weight:bold;font-size:16px; text-align: center;">We are truly excited to see what you bring in terms of Achievements, and can\'t wait to see how much your community engages!</p></div>'};r.sendMail(l,function(e,o){e?console.log(e):new w({user:t,logo:j,message:"Your channel has been approved! Go check your email for your confirmation code! Don't forget to check your spam folder, too!",date:Date.now(),type:"confirmation",status:"new"}).save().then(e=>{console.log(e)}),n.json({message:"email sent"})})})})})}),o.post("/verify",a,(e,n)=>{let t=e.body.id;v.findOne({uid:e.user._id,token:t}).then(o=>{if(o)if(o.hasExpired())v.deleteOne({uid:e.user._id,token:t}).then(e=>{n.json({expired:!0})}),n.json({expired:!0});else{let o=e.user.broadcaster_type;new m({owner:e.user.name,twitchID:e.user.integration.twitch.etid,theme:"",logo:e.user.logo,members:[],moderators:[],icons:{default:j,hidden:S},oid:i(),overlay:k,nextUID:1,broadcaster_type:{twitch:o}}).save().then(o=>{new w({user:process.env.NOTICE_USER,logo:o.logo,message:`${o.owner} just created their channel!`,date:Date.now(),type:"confirmation",status:"new"}).save(),e.user.type="verified",e.user.save().then(o=>{v.deleteOne({uid:e.user._id,token:t}).then(e=>{n.json({verified:!0})})})})}else n.json({error:"Unauthorized"})})}),o.get("/overlay",(e,n)=>{let t=e.query.id;m.findOne({oid:t}).then(e=>{e&&n.json({overlay:e.overlay,icons:e.icons})})}),o.get("/testOverlay",a,(e,n)=>{x(e,{user:e.user.name,channel:e.user.name,title:"Test Achievement",icon:"https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png",unlocked:!0}),n.json({})}),o.post("/reorder",a,(e,n)=>{let t=e.body.achievements;if(t){let o={};t.forEach(e=>{o[e.uid]=e.order}),p.find({channel:e.user.name}).then(e=>{e?(e.forEach(e=>{let n=o[e.uid];e.order&&e.order===n||(e.order=n,e.save())}),n.json({})):n.json({error:"Issue updating achievements. Try again later."})})}else n.json({error:"Unexpected use of the API"})}),o.post("/favorite",a,(e,n)=>{let t=e.body.channel,o=e.body.task;m.findOne({owner:t}).then(t=>{if(t){if("add"===o)e.user.favorites.push(t.id),e.user.save().then(e=>{n.json({favorited:!0,favorites:e.favorites})});else if("remove"===o&&e.user.favorites){var i=e.user.favorites.findIndex(e=>e===t.id);e.user.favorites.splice(i,1),e.user.save().then(e=>{n.json({favorited:!1,favorites:e.favorites})})}}else n.json({error:"Channel doesn't exist!"})})}),o.get("/mod",a,(e,n)=>{m.find({"moderators.uid":e.user._id}).then(e=>{let t=e.map(e=>({owner:e.owner,logo:e.logo}));n.json({channels:t})})}),o.get("/mod/retrieve",s,(e,n)=>{A(e,n,e.channel)});let A=(e,n,t)=>{let o=new Promise((e,n)=>{p.find({channel:t.owner}).then(n=>{if(n){let t=n.map(e=>e.listener);g.find({_id:{$in:t}}).then(t=>{let o=n.map(e=>{let n=t.find(n=>n.id===e.listener);if(n){let t={_id:e._id,uid:e.uid,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,code:n.code,order:e.order};return n.resubType&&(t.resubType=n.resubType),n.query&&(t.query=n.query),t}return e});o.sort((e,n)=>e.order>n.order?1:-1),e(o)})}else e(n)})});Promise.all([o]).then(e=>{let o;t.oid?t.overlay&&0!==Object.keys(t.overlay).length?(delete(o={...t._doc}).__v,delete o._id,n.json({channel:o,achievements:e[0]})):(t.overlay=k,t.save().then(t=>{delete(o={...t._doc}).__v,delete o._id,n.json({channel:o,achievements:e[0]})})):(t.oid=i(),t.overlay&&0!==Object.keys(t.overlay).length||(t.overlay=k),t.save().then(t=>{delete(o={...t._doc}).__v,delete o._id,n.json({channel:o,achievements:e[0]})}))})};e.exports=o},function(e,n){e.exports=require("crypto")},function(e,n){e.exports=require("nodemailer")},function(e,n){e.exports=require("valid-data-url")},function(e,n){e.exports=require("cloudinary")},function(e,n){e.exports={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2}},function(e,n,t){const o=t(3).Router(),i=(t(5),t(15)),a=t(12),s=t(1),r=t(2),l=t(9),d=t(11),c=t(14),h=t(6),u=t(13),{isAuthorized:m,isModAuthorized:p}=t(7),{emitNewListener:g,emitUpdateListener:f,emitRemoveListener:v,emitAwardedAchievement:y,emitAwardedAchievementNonMember:w,emitOverlayAlert:b,emitNotificationsUpdate:_}=t(8),{build:I}=t(41),D=t(16).uploadImage,x="https://res.cloudinary.com/phirehero/image/upload/v1558811694/default-icon.png";t(0);let O=(e,n)=>{let t={_id:e._id,channel:e.owner,title:e.title,description:e.description,icon:e.icon,earnable:e.earnable,limited:e.limited,secret:e.secret,listener:e.listener,achType:n.achType,condition:n.condition};return n.query&&(t.query=n.query),t},j=(e,n,t,o,a,s)=>new Promise((r,c)=>{let h;(h=s?new Promise((e,n)=>{u.findOne({achievementID:t._id}).then(n=>{n?(n.achievementID="",n.save().then(()=>{s.achievementID=t._id,s.save().then(n=>{e()})})):(s.achievementID=t._id,s.save().then(n=>{e()}))})}):Promise.resolve()).then(()=>{l.findOneAndUpdate({_id:t._id},{$set:o},{new:!0}).then(o=>{if(Object.keys(a).length>0)if(a.achType&&"3"===a.achType&&o.listener)d.findOne({_id:o.listener}).then(t=>{t&&(v(e,{uid:t.uid,channel:n,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition}),d.deleteOne({_id:o.listener}).then(e=>{o.listener=void 0,o.save().then(e=>{r({update:!0,achievement:e})})}))});else if(a.achType&&"3"!==a.achType&&!t.listener){let t={channel:n,uid:i(),...a,achievement:o.id,aid:o.uid};new d(t).save().then(n=>{g(e,{uid:n.uid,channel:n.channel,achievement:n.achievement,achType:n.achType,query:n.query,bot:n.bot,condition:n.condition}),o.listener=n.id,o.save().then(e=>{r({created:!0,achievement:e})})})}else d.findOneAndUpdate({_id:o.listener},{$set:a},{new:!0}).then(t=>{if(t){f(e,{uid:t.uid,channel:n,achievement:t.achievement,achType:t.achType,query:t.query,bot:t.bot,condition:t.condition});let i=O(o,t);r({update:!0,achievement:i})}else console.log("issue updating listener for achievement"),console.log("owner: "+n),console.log("achievement: "+j.title),r({update:!1})});else d.findOne({_id:o.listener}).then(e=>{let n=O(o,e);r({update:!0,achievement:n})})})})}),S=e=>new Promise((n,t)=>{u.find({channel:e,type:"achievement"}).then(e=>{if(e){let t={active:[],inactive:[]};e.map(e=>{e.achievementID&&""!==e.achievementID?t.active.push(e):t.inactive.push(e)}),n(t.active.concat(t.inactive))}else n([])})});o.post("/mod/update",p,(e,n)=>{T(e,n,e.channel,!0)}),o.post("/update",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?T(e,n,t,!1):n.json({update:!1,message:"The channel you tried to update the achievement for doesn't exist!"})})});let T=(e,n,t,o)=>{l.findOne({_id:e.body.id,channel:t.owner}).then(o=>{if(o){let i=e.body,{achType:a,query:s,bot:r,condition:l}=i,d={};a&&(d.achType=a,delete i.achType),s&&(d.query=s,delete i.query),r&&(d.bot=r,delete i.bot),l&&(d.condition=l,delete i.condition),i.icon&&i.iconName?D(i.icon,i.iconName,t.owner).then(a=>{i.icon=a.url,j(e,t.owner,o,i,d,a).then(e=>{n.json(e)})}):j(e,t.owner,o,i,d).then(e=>{n.json(e)})}else n.json({update:!1,message:"The achievement you tried to update doesn't exist!"})})};o.post("/mod/create",p,(e,n)=>{k(e,n,e.channel,!0)}),o.post("/create",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?k(e,n,t,!1):n.json({created:!1,message:"This channel you are creating for doesn't exist!"})})});let k=(e,n,t,o)=>{let a={};e.body.id?a._id=e.body.id:a.title=e.body.title,a.channel=t.owner,"4"!==e.body.achType||t.gold?l.findOne(a).then(o=>{o?n.json({created:!1,message:"An achievement with this name already exists!",achievement:o}):l.countDocuments({channel:t.owner}).then(o=>{let a={uid:t.nextUID,channel:t.owner,title:e.body.title,description:e.body.description,icon:e.body.icon,earnable:e.body.earnable,limited:e.body.limited,secret:e.body.secret,listener:e.body.listener,alert:e.body.alert||!0,order:o},s={channel:t.owner,achType:e.body.achType,uid:i()};s.condition=e.body.condition,"4"===s.achType&&(s.bot=e.body.bot,s.query=e.body.query),d.findOne(s).then(o=>{o?l.findOne({listener:o._id}).then(e=>{n.json({created:!1,message:'The conditions you selected are already taken by the "'+e.title+'" achievement!'})}):e.body.icon?D(e.body.icon,e.body.iconName,t.owner).then(o=>{a.icon=o.url,new l(a).save().then(i=>{s.achievement=i.id,s.aid=i.uid,o.achievementID=i.id,o.save().then(o=>{t.nextUID=i.uid+1,t.save().then(t=>{"3"!==e.body.achType?new d(s).save().then(t=>{g(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),i.listener=t.id,i.save().then(e=>{n.json({created:!0,achievement:e})})}):n.json({created:!0,achievement:i})})})})}):new l(a).save().then(o=>{s.achievement=o.id,s.aid=o.uid,t.nextUID=o.uid+1,t.save().then(t=>{"3"!==e.body.achType?new d(s).save().then(t=>{g(e,{uid:s.uid,channel:s.channel,achievement:s.achievement,achType:s.achType,query:s.query,bot:s.bot,condition:s.condition}),o.listener=t.id,o.save().then(e=>{n.json({created:!0,achievement:e})})}):n.json({created:!0,achievement:o})})})})})}):n.json({created:!1,message:"This type of achievement is for Stream Achievements Gold! Sync your Patreon if your account is, or reach out on Discord!"})};o.post("/delete",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{if(t){let o={};o._id=e.body.achievementID,o.channel=t.owner,l.findOne(o).then(i=>{if(i){let a=i.listener;l.deleteOne(o).then(o=>{let s={_id:a,channel:i.channel};d.findOne(s).then(o=>{o?(v(e,{uid:o.uid,channel:t.owner,achievement:o.achievement,achType:o.achType,query:o.query,bot:o.bot,condition:o.condition}),d.deleteOne(s).then(t=>{u.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{n.json({deleted:!0})})})):u.findOneAndUpdate({achievementID:e.body.achievementID},{$set:{achievementID:""}}).then(e=>{n.json({deleted:!0})})})})}else n.json({deleted:!1,message:"The achievement you requested to delete doesn't exist!"})})}else n.json({delete:!1,message:"This channel you are deleting for doesn't exist!"})})}),o.get("/mod/retrieve",p,(e,n)=>{let t=e.query.aid;C(e,n,e.channel,t)}),o.get("/retrieve",m,(e,n)=>{let t=e.user.name,o=e.query.aid;o?r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?C(e,n,t,o):n.json({error:"User isn't a verified channel owner"})}):t&&l.find({channel:t}).then(e=>{if(e){let t=e.map(e=>e.listener);d.find({_id:{$in:t}}).then(t=>{e.forEach(e=>{let n=t.find(n=>n._id=e.listener);return delete n._id,Object.assign(e,n)}),n.json(e)})}else n.json(e)})});let C=(e,n,t,o)=>{let i=new Promise((e,n)=>{l.findOne({uid:o,channel:t.owner}).then(n=>{if(n){n.listener;d.findOne({_id:n.listener,channel:n.channel}).then(t=>{if(t){let o=Object.assign({},t._doc),i=Object.assign({},n._doc);delete o._id;let a=Object.assign(i,o);e(a)}else e(n)})}else e(null)})}),a=S(t.owner),s=$(t.owner,t.gold);Promise.all([i,a,s]).then(o=>{n.json({achievement:o[0],images:o[1],defaultIcons:t.icons,isGoldChannel:e.channel&&e.channel.gold,customAllowed:o[2]})})};o.post("/mod/award",p,(e,n)=>{A(e,n,e.channel)}),o.post("/award",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{A(e,n,t)})});let E=(e,n)=>{let t,o=e.overlay;return t=o.chatMessage&&""!==o.chatMessage?I({chatMessage:o.chatMessage,member:n.member,achievement:n.achievement}):`${n.member} just earned the "${n.achievement}" achievement! PogChamp`,console.log(t),{channel:e.owner,message:t}},A=(e,n,t)=>{console.log("manual award"),console.log(e.body.members);let o,i=e.body.members,a=e.body.aid,r=i.findIndex(e=>!0===e.nonMember);r>=0&&(console.log("nonMember found"),o=i.splice(r,1)[0]),l.findOne({uid:a,channel:t.owner}).then(r=>{i=i.map(e=>e.name),s.find({name:{$in:i}}).then(i=>{let s;s=i.length>0?i.map((n,o)=>{let i=n.channels,s=i.findIndex(e=>e.channelID===t.id);return i[s].achievements.push({aid:a,earned:Date.now()}),n.channels=i,n.save().then(n=>{if(t.overlay.chat){let o={channel:t.owner,member:n.name,achievement:r.title};y(e,E(t,o))}new h({user:n._id,logo:t.logo,message:`You have earned the "${r.title}" achievement!`,date:Date.now(),type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{_(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})});let o=r.alert||!0,i=!1;t.gold&&(i=!0),o&&b(e,{user:n.name,channel:t.owner,title:r.title,icon:r.icon,unlocked:i})})}):[Promise.resolve()],Promise.all(s).then(i=>{o&&P(e,n,t,r,o),n.json({award:!0})})})})},P=(e,n,t,o,i)=>{console.log("handleNonMemberAward");let r=Date.now();s.findOne({name:i.name}).then(n=>{if(n)if(console.log("user is part of the site"),n.preferences.autojoin)try{n.channels.push({channelID:t.id,achievements:[{aid:o.uid,earned:r}],banned:!1}),n.save().then(n=>{t.members.push(n.id),t.save().then(i=>{new h({user:n._id,logo:t.logo,message:`You have earned the "${o.title}" achievement!`,date:r,type:"achievement",channel:t.owner,status:"new"}).save().then(i=>{_(e,{notification:{id:i._id,logo:i.logo,message:i.message,date:i.date,type:i.type,channel:i.channel,status:i.status},user:n.name});n.channels.findIndex(e=>e.channelID===t.id);M(e,t,n,o)})})})}catch(e){new h({user:process.env.NOTICE_USER,logo:x,message:`Issue awarding ${t.owner}'s '${o.title}' to ${n.name}`,date:r,type:"admin",status:"new"}).save(),s.findOne({name:t.owner}).then(e=>{new h({user:e._id,logo:x,message:`Issue awarding '${o.title}' to ${n.name}! We are looking into the issue, feel free to manually award the achievement!`,date:r,type:"admin",status:"new"}).save()})}else c.findOne({name:n.name,channelID:t.id,achievementID:o.uid}).then(i=>{i||(new c({twitchID:n.integration.twitch.etid,name:n.name,channelID:t._id,achievementID:o.uid,earned:r}).save(),new h({user:n._id,logo:t.logo,message:`You have earned the "${o.title}" achievement!`,date:r,type:"achievement",channel:t.owner,status:"new"}).save().then(t=>{_(e,{notification:{id:t._id,logo:t.logo,message:t.message,date:t.date,type:t.type,channel:t.channel,status:t.status},user:n.name})}),M(e,t,n,o))});else{let n,s,l={};n=`https://api.twitch.tv/helix/users/?login=${i.name}`,(s=new Promise((e,t)=>{a.get(n,{headers:{"Client-ID":process.env.TCID}}).then(n=>{n.data&&n.data.data&&n.data.data[0]&&(l.userID=n.data.data[0].id,l.name=n.data.data[0].login),e()})})).then(()=>{l.userID&&l.name&&c.findOne({twitchID:l.userID,channelID:t.id,achievementID:o.uid}).then(n=>{n?console.log(l.name+" already had this achievement"):new c({twitchID:l.userID,name:l.name,channelID:t.id,achievementID:o.uid,earned:r}).save().then(n=>{if(n){if(t.overlay.chat){let n={channel:t.owner,member:l.name,achievement:o.title};w(e,E(t,n))}let n=o.alert||!0,i=!1;t.gold&&(i=!0),n&&b(e,{user:l.name,channel:t.owner,title:o.title,icon:o.icon,unlocked:i})}})}).catch(e=>{console.log(e)})})}})};o.get("/mod/icons",p,(e,n)=>{q(e,n,e.channel,!0)}),o.get("/icons",m,(e,n)=>{r.findOne({twitchID:e.user.integration.twitch.etid}).then(t=>{t?q(e,n,t,!1):n.json({error:!0})})});let q=(e,n,t,o)=>{console.log("foo"),S(t.owner).then(e=>{let i={images:e.map(e=>{let n={...e._doc};return delete n.__v,delete n._id,n}),defaultIcons:t.icons};o&&(i.isGoldChannel=t.gold),$(t.owner,t.gold).then(e=>{i.customAllowed=e,n.json(i)})})},$=(e,n)=>n?Promise.resolve(!0):new Promise((n,t)=>{console.log(e),d.find({channel:e,achType:"4"}).then(e=>{console.log(e),e&&e.length>0?n(!1):n(!0)})});o.get("/listeners",(e,n)=>{let t=e.query.channel;Array.isArray(t)||(t=t.split(",")),l.find({owner:{$in:t}}).then(e=>{e.map(e=>{if(e.earnable&&e.listener)return e.listener})}),d.find({channel:{$in:t}}).then(e=>{e.length>0?n.json(e):n.json([])})}),o.post("/award/chat",(e,n)=>{let{achievement:t,channel:o,target:i,user:a}=e.body,l=!1;t&&o&&i&&a&&r.findOne({owner:o}).then(r=>{if(r&&r.gold){if(a===o)l=!0;else{let e=r.moderators.map(e=>e.uid);s.find({_id:{$in:e}},"name").then(e=>{if(e){e.findIndex(e=>e.name===a)>=0&&(l=!0)}})}if(l){let a={title:t,channel:o},s={name:i.toLowerCase()};R(e,n,r,a,s)}}})});let M=(e,n,t,o)=>{if(n.overlay.chat){let i={channel:n.owner,member:t.name,achievement:o.title};y(e,E(n,i))}let i=o.alert||!0,a=!1;n.gold&&(a=!0),i&&b(e,{user:t.name,channel:n.owner,title:o.title,icon:o.icon,unlocked:a})},N=(e,n,t,o,i,a,s,r)=>{if(n&&"1000"!==n){let u=[];"2000"===n?u.push("1000"):"3000"===n&&(u.push("1000"),u.push("2000")),d.find({achType:"0",condition:{$in:u},channel:t.owner}).then(n=>{let d=[];if(n){new Promise((e,a)=>{if(r){let o=n.map(e=>e.aid);console.log(o),c.find({twitchID:i.userID,name:i.name,channelID:t._id,achievementID:{$in:o}}).then(n=>{console.log(n),n&&n.length>0&&n.forEach(e=>{let n=o.findIndex(n=>n===e.achievementID);n>=0&&o.splice(n,1)}),d=o,e()})}else n.forEach(e=>{if(o){o.findIndex(n=>n.aid===e.aid)<0&&d.push(e.aid)}else d.push(e.aid)}),e()}).then(()=>{d.length>0&&l.find({channel:t.owner,uid:{$in:d}}).then(n=>{n?r?n.forEach(n=>{new c({twitchID:i.userID,name:i.name,channelID:t._id,achievementID:n.uid,earned:a}).save().then(o=>{M(e,t,i,n)})}):(n.forEach(n=>{i.channels[s].achievements.push({aid:n.uid,earned:a}),new h({user:i._id,logo:t.logo,message:`You have earned the "${n.title}" achievement!`,date:a,type:"achievement",channel:t.owner,status:"new"}).save().then(o=>{_(e,{notification:{id:o._id,logo:o.logo,message:o.message,date:o.date,type:o.type,channel:o.channel,status:o.status},user:i.name}),M(e,t,i,n)})}),i.save()):console.log("achievements not found")})})}})}},R=(e,n,t,o,i,r,d=2)=>{let u=new Date;l.findOne(o).then(l=>{l&&l.earnable&&s.findOne(i).then(m=>{if(m){console.log("> User: "+m.name);let a=m.channels.findIndex(e=>e.channelID===t.id);if(a>=0&&!m.channels[a].banned){console.log("> "+m.name+" is a part of this channel");let c=m.channels[a].achievements;if(c.findIndex(e=>e.aid===l.uid)<0){console.log("> "+m.name+" doesn't have this achievement yet");try{m.channels[a].achievements.push({aid:l.uid,earned:u}),m.save().then(n=>{new h({user:m._id,logo:t.logo,message:`You have earned the "${l.title}" achievement!`,date:u,type:"achievement",channel:t.owner,status:"new"}).save().then(n=>{_(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:m.name})}),r&&(N(e,r,t,c,n,u,a),F(e,l.id,n,t,r)),M(e,t,n,l)})}catch(a){if(d>0){R(e,n,t,o,i,r,d-1)}else console.log("sending notice"),console.log(process.env.NOTICE_USER),new h({user:process.env.NOTICE_USER,logo:x,message:`Issue awarding ${t.owner}'s '${l.title}' to ${m.name}`,date:u,type:"admin",status:"new"}).save(),s.findOne({name:t.owner}).then(e=>{new h({user:e._id,logo:x,message:`Issue awarding '${l.title}' to ${m.name}! We are looking into the issue, feel free to manually award the achievement!`,date:u,type:"admin",status:"new"}).save()})}}else N(e,r,t,c,m,u,a)}else if(console.log("couldn't find the channel"),m.preferences.autojoin)try{m.channels.push({channelID:t.id,achievements:[{aid:l.uid,earned:u}]}),m.save().then(n=>{t.members.push(n.id),t.save().then(o=>{new h({user:n._id,logo:t.logo,message:`You have earned the "${l.title}" achievement!`,date:u,type:"achievement",channel:t.owner,status:"new"}).save().then(o=>{_(e,{notification:{id:o._id,logo:o.logo,message:o.message,date:o.date,type:o.type,channel:o.channel,status:o.status},user:n.name});let i=n.channels.findIndex(e=>e.channelID===t.id);N(e,r,t,!1,n,u,i),M(e,t,n,l)})})})}catch(a){if(d>0){R(e,n,t,o,i,r,d-1)}else new h({user:process.env.NOTICE_USER,logo:x,message:`Issue awarding ${t.owner}'s '${l.title}' to ${m.name}`,date:u,type:"admin",status:"new"}).save(),s.findOne({name:t.owner}).then(e=>{new h({user:e._id,logo:x,message:`Issue awarding '${l.title}' to ${m.name}! We are looking into the issue, feel free to manually award the achievement!`,date:u,type:"admin",status:"new"}).save()})}else c.findOne({name:m.name,channelID:t._id,achievementID:l.uid}).then(n=>{n||(new c({twitchID:m.integration.twitch.etid,name:m.name,channelID:t._id,achievementID:l.uid,earned:u}).save(),new h({user:m._id,logo:t.logo,message:`You have earned the "${l.title}" achievement!`,date:u,type:"achievement",channel:t.owner,status:"new"}).save().then(n=>{_(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:m.name})}),N(e,r,t,!1,m,u,!1,!0),M(e,t,m,l))})}else{let n,o,s={};i.name?n=`https://api.twitch.tv/helix/users/?login=${i.name}`:i["integration.twitch.etid"]&&(n=`https://api.twitch.tv/helix/users/?id=${i["integration.twitch.etid"]}`),n?(console.log(n),o=new Promise((e,t)=>{a.get(n,{headers:{"Client-ID":process.env.TCID}}).then(n=>{console.log(n.data),n.data&&n.data.data&&n.data.data[0]&&(s.userID=n.data.data[0].id,s.name=n.data.data[0].login),e()})})):o=Promise.resolve(),o.then(()=>{console.log(s),s.userID&&s.name&&c.findOne({twitchID:s.userID,channelID:t._id,achievementID:l.uid}).then(n=>{console.log("hello"),n?console.log(s.name+" already had this achievement"):(console.log("didn't find "+l.uid+" in the queue."),new c({twitchID:s.userID,name:s.name,channelID:t._id,achievementID:l.uid,earned:u}).save().then(n=>{if(n){if(N(e,r,t,!1,s,u,!1,!0),t.overlay.chat){let n={channel:t.owner,member:s.name,achievement:l.title};w(e,E(t,n))}let n=l.alert||!0,o=!1;t.gold&&(o=!0),n&&b(e,{user:s.name,channel:t.owner,title:l.title,icon:l.icon,unlocked:o})}}))}).catch(e=>{console.log(e)})})}})})};o.post("/listeners",(e,n)=>{console.log("achievements to process...");let t=e.body,o=(new Date,{});t.forEach(e=>{o[e.channel]=o[e.channel]||[],o[e.channel].push(e)}),Object.keys(o).forEach(t=>{r.findOne({owner:t}).then(i=>{if(i){console.log("Issuing achievements for "+i.owner+" channel:"),o[t].forEach(t=>{let{channel:o,achievementID:a,tier:s,userID:r}=t,l={};t.userID||t.user;if(r)console.log(">>> userID: "+r),l["integration.twitch.etid"]=r;else if(t.user){console.log(">>> userName: "+t.user);let e=t.user;0===e.indexOf("@")&&(e=e.substr(1)),l.name=e.toLowerCase()}else console.log("<<<< No user came from IRC >>>>");R(e,n,i,{_id:a},l,s)})}})}),n.json({})});let F=(e,n,t,o,i)=>{d.find({achType:{$in:["0","1"]},channel:o.owner}).then(a=>{if(a){let s=a.findIndex(e=>e.achievement===n);if(s>=0){let n=a.splice(s,1)[0],r=n.achType,l=n.condition,d=[];if("1"===r){if(console.log("> sub backfilling"),a.forEach(e=>{"0"===e.achType?parseInt(e.condition)<=parseInt(i)&&d.push(e):parseInt(e.condition)<=parseInt(l)&&d.push(e)}),d.length>0){console.log("> Potentially Backfilling "+d.length+" achievements");let n=t.channels,i=n.findIndex(e=>e.channelID===o.id),a=t.channels[i].achievements,s=!1;d.forEach(e=>{a.findIndex(n=>n.aid===e.aid)<0?(s=!0,n[i].achievements.push({aid:e.aid,earned:Date.now()})):console.log("> Achievement already earned: "+e.aid)}),s&&new h({user:t._id,logo:o.logo,message:"Your previous subs have been backfilled!",date:new Date,type:"achievement",channel:o.owner,status:"new"}).save().then(n=>{_(e,{notification:{id:n._id,logo:n.logo,message:n.message,date:n.date,type:n.type,channel:n.channel,status:n.status},user:t.name})}),t.channels=n,t.save().then(e=>{console.log(`> ${e.name} has been synced`)})}}else console.log("> The achievement wasn't a resub")}}})};e.exports=o},function(e,n){let t={"{user}":"member","{achievement}":"achievement"};e.exports={build:e=>{console.log(e);let n=Object.keys(t),o=e.chatMessage;return o=(e=>e.replace(/[.*+?^$()|[\]\\]/g,"\\$&"))(o),n.forEach(n=>{o=o.replace(new RegExp(n,"gi"),e[t[n]])}),o}}},function(e,n,t){const o=t(3).Router(),i=t(1),a=t(11);t(10),t(0);o.get("/channels",(e,n)=>{let t=parseInt(e.query.offset)||0,o=parseInt(e.query.limit)||50,a=parseInt(e.query.total)||void 0;a?r(t,o,a).then(e=>{e.err?(n.status(500),n.json({channels:[],err:e.err})):n.json(e)}):a=i.estimatedDocumentCount().exec().then(e=>{r(t,o,a=e).then(e=>{e.err?(n.status(500),n.json({channels:[],err:e.err})):n.json(e)})})}),o.get("/listeners",(e,n)=>{let t=parseInt(e.query.offset)||0,o=parseInt(e.query.limit)||50,i=parseInt(e.query.total)||void 0;i?s(t,o,i).then(e=>{e.err?(n.status(500),n.json({listeners:[],error:e.err})):n.json(e)}):i=a.estimatedDocumentCount().exec().then(e=>{s(t,o,i=e).then(e=>{e.err?(n.status(500),n.json({listeners:[],error:e.err})):n.json(e)})})});let s=(e,n,t)=>new Promise((o,i)=>{a.find().sort({_id:-1}).skip(e).limit(n).exec((i,a)=>{if(i)o({err:"Issue retrieving from Listener sets"});else{let i=a.map(e=>({channel:e.channel,achievement:e.achievement,achType:e.achType,resubType:e.resubType,query:e.query,bot:e.bot,condition:e.condition})),s={listeners:i,total:t};i.length===n&&(s.offset=e+i.length),o(s)}})}),r=(e,n,t)=>new Promise((o,a)=>{i.find({$or:[{type:"verified"},{type:"admin"}]}).sort({_id:-1}).skip(e).limit(n).exec((i,a)=>{if(i)o({err:"Issue retrieving from User sets"});else{let i=a.map(e=>{let n={name:e.name,full_access:!1},t=e.integration.patreon;return t&&(t.forever||t.is_gold)&&(n["full-access"]=!0),n}),s={channels:i,total:t};i.length===n&&(s.offset=e+i.length),o(s)}})});e.exports=o},function(e,n,t){const o=t(3).Router(),i=t(12),a=t(1),s=t(11),r=(t(10),t(14)),l=t(2),d=t(6),c=t(9),{isAdminAuthorized:h}=(t(0),t(7)),{emitOverlayAlert:u}=t(8);o.post("/dedupMembers",h,(e,n)=>{l.findOne({owner:"phirehero"}).then(e=>{console.log(e.members);let n=e.members;console.log(n);let t=[];a.find({_id:{$in:n}}).sort({name:1}).exec((e,o)=>{o.forEach(e=>{let o=n.splice(n.indexOf(e.id),1);t.push(o[0])}),console.log(t),console.log(t.length)})})}),o.post("/dedup",h,(e,n)=>{a.find({}).then(e=>{e.forEach(e=>{console.log("dedup for "+e.name+"...");let n=[];e.channels.forEach(e=>{console.log(">>> checking channel: "+e.channelID);let t=e.achievements;console.log(t);let o=t.filter((e,n,t)=>t.findIndex(n=>n.aid===e.aid)===n);if(o.length!==t.length&&console.log(">>>>>> duplicates found: "+(t.length-o.length)),o.length>0){console.log("\n"),console.log(e),console.log("--------------------------------------------");let t={...e._doc,achievements:o};console.log(t),n.push(t)}else n.push(e)}),e.channels=n,e.save()})})}),o.post("/fixit",h,(e,n)=>{c.find({}).then(e=>{e&&e.forEach(e=>{e.listener&&s.findById(e.listener).then(n=>{n&&(console.log("updating: "+e.channel+": "+e.title),n.aid=e.uid,n.achievement=e.id,n.save())})})})}),o.post("/flush",h,(e,n)=>{r.find({}).then(e=>{e.length>0?e.forEach(e=>{try{console.log("finding "+e.channelID+" channel"),l.findOne({owner:e.channelID}).then(n=>{n?e&&e.achievementID&&c.findOne({uid:parseInt(e.achievementID),channel:n.owner}).then(t=>{t?a.findOne({"integration.twitch.etid":e.twitchID}).then(o=>{if(o){console.log("we found "+o.name);let i=o.channels,a=i.findIndex(e=>e.channelID===n.id);if(a>=0){i[a].achievements.filter(e=>{e.aid,t.uid})?(console.log(o.name+"already has "+t.title+". Delete it"),r.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)})):(console.log("achievement will be awarded to "+o.name),o.channels[a].achievements.push({aid:t.uid,earned:e.earned||Date.now()}),console.log("deleting entry"),console.log(e),r.deleteOne({_id:e.id}).then(e=>{console.log("deleted count: "+e.deletedCount)}),o.save())}else console.log(o.name+"hasn't joined "+n.owner+"'s channel yet")}else console.log("no user")}):console.log("no achievement")}):console.log("no channel")})}catch(n){console.log(n),console.log("cast issue for "+e.channelID)}}):console.log("nothing in queue")})}),o.post("/fixpreferences",h,(e,n)=>{l.find({}).then(e=>{e&&e.forEach(e=>{e.overlay={chat:!0,chatMessage:"{user} just earned the {achievement} achievement! PogChamp",sfx:"https://streamachievements.com/sounds/achievement.001.mp3",enterEffect:"zoomIn",exitEffect:"zoomOut",duration:6,volume:100,delay:2},e.save().then(e=>{console.log("updated "+e.owner+"'s channel overlay")})})})}),o.post("/overlay",h,(e,n)=>{u(e,{user:e.user.name,channel:e.user.name,title:"I can show you the world",icon:"https://res.cloudinary.com/phirehero/image/upload/v1562881653/u9astg4olsdtfm2rjhxu.png",unlocked:!0})}),o.post("/sync",h,(e,n)=>{a.find({}).then(e=>{e&&e.forEach(e=>{let n=[],t=e.channels;t&&(t.forEach(e=>{let t={...e._doc,sync:!0};n.push(t)}),e.channels=n,e.save())})})}),o.post("/alertSync",h,(e,n)=>{c.find({}).then(e=>{e&&e.forEach(e=>{e.alert=!0,e.save()})})}),o.post("/notice",h,(e,n)=>{new d({user:"5cfc5f04a33c32ad539abe0c",logo:"https://static-cdn.jtvnw.net/jtv_user_pictures/thorlar-profile_image-4bd4d7b82e71afc3-300x300.jpeg",message:'You earned the "Noisy Viking" Achievement!',date:Date.now()}).save().then(e=>{console.log(e),n.json(e)})}),o.post("/tier2",h,(e,n)=>{i({method:"post",url:"/api/achievement/listeners",data:[{channel:"phirehero",achievementID:"5d7661fa447cce56ece85ef8",tier:"2000",userID:"70967393"}]})}),e.exports=o}]);